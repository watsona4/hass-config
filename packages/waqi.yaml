# =============================================================================
#                                   WAQI (All Locations)
#   - REST sensors: Nearby / Home / RV
#   - Template sensors: per-location AQI + IAQI breakouts + 5-day forecast tiles
#   - Helpers: per-location category / severity / "bad air" boolean
#   - Rollups: worst AQI + any-location bad boolean
#
#   Requires Jinja macros:
#     - templates/env/geo.jinja     (nearby/home/rv coords + waqi_url)
#     - templates/metrics/air_quality/helpers.jinja    (aqi parsing, iaqi(), forecast_days(), etc.)
# =============================================================================

sensor:

  # ============== WAQI Nearby (REST) ==============
  - platform: rest
    name: WAQI Nearby
    unique_id: waqi_nearby
    state_class: measurement
    scan_interval: 60
    timeout: 15
    resource_template: >-
      {%- from 'macros/rest_helpers.jinja' import nearby_lat, nearby_lon, nearby_is_valid, waqi_url -%}
      {%- set lat = nearby_lat() | int(0) -%}
      {%- set lon = nearby_lon() | int(0) -%}
      {{- waqi_url(lat, lon) if (nearby_is_valid() | bool) else 'http://127.0.0.1:65535/' -}}
    params:
      token: !secret waqi_token
    headers:
      Accept: application/json
      User-Agent: HomeAssistant
      Cache-Control: no-cache
    availability: >-
      {%- from 'macros/rest_helpers.jinja' import nearby_is_valid -%}
      {{- nearby_is_valid() | bool -}}
    value_template: >-
      {%- from 'metrics/air_quality/helpers.jinja' import aqi_state_from_payload -%}
      {{- aqi_state_from_payload(value_json, this.entity_id) -}}
    json_attributes_path: "$.data"
    json_attributes:
      - idx
      - attributions
      - city
      - dominentpol
      - iaqi
      - time
      - forecast

  # ============== WAQI Home (REST) ==============
  - platform: rest
    name: WAQI Home
    unique_id: waqi_home
    state_class: measurement
    scan_interval: 60
    timeout: 15
    resource_template: >-
      {%- from 'macros/rest_helpers.jinja' import home_lat, home_lon, home_is_valid, waqi_url -%}
      {%- set lat = home_lat() | int(0) -%}
      {%- set lon = home_lon() | int(0) -%}
      {{- waqi_url(lat, lon) if (home_is_valid() | bool) else 'http://127.0.0.1:65535/' -}}
    params:
      token: !secret waqi_token
    headers:
      Accept: application/json
      User-Agent: HomeAssistant
      Cache-Control: no-cache
    availability: >-
      {%- from 'macros/rest_helpers.jinja' import home_is_valid -%}
      {{- home_is_valid() | bool -}}
    value_template: >-
      {%- from 'metrics/air_quality/helpers.jinja' import aqi_state_from_payload -%}
      {{- aqi_state_from_payload(value_json, this.entity_id) -}}
    json_attributes_path: "$.data"
    json_attributes:
      - idx
      - attributions
      - city
      - dominentpol
      - iaqi
      - time
      - forecast

  # ============== WAQI RV (REST) ==============
  - platform: rest
    name: WAQI RV
    unique_id: waqi_rv
    state_class: measurement
    scan_interval: 60
    timeout: 15
    resource_template: >-
      {%- from 'macros/rest_helpers.jinja' import rv_lat, rv_lon, rv_is_valid, waqi_url -%}
      {%- set lat = rv_lat() | int(0) -%}
      {%- set lon = rv_lon() | int(0) -%}
      {{- waqi_url(lat, lon) if (rv_is_valid() | bool) else 'http://127.0.0.1:65535/' -}}
    params:
      token: !secret waqi_token
    headers:
      Accept: application/json
      User-Agent: HomeAssistant
      Cache-Control: no-cache
    availability: >-
      {%- from 'macros/rest_helpers.jinja' import rv_is_valid -%}
      {{- rv_is_valid() | bool -}}
    value_template: >-
      {%- from 'metrics/air_quality/helpers.jinja' import aqi_state_from_payload -%}
      {{- aqi_state_from_payload(value_json, this.entity_id) -}}
    json_attributes_path: "$.data"
    json_attributes:
      - idx
      - attributions
      - city
      - dominentpol
      - iaqi
      - time
      - forecast

# ===================== Per-location derived sensors =====================
template:

  # -------------------- Nearby block --------------------
  - trigger:
      - platform: state
        entity_id: sensor.waqi_nearby
    variables:
      src: sensor.waqi_nearby
    sensor:
      - name: WAQI Nearby AQI
        unique_id: waqi_nearby_aqi
        device_class: aqi
        state_class: measurement
        availability: "{{ has_value(src) and (states(src) | float(none)) is not none }}"
        state: "{{ states(src) | int(default=none) }}"
        attributes:
          station: "{{ (state_attr(src,'city') or {}).get('name') }}"
          dominentpol: "{{ state_attr(src,'dominentpol') }}"
          last_update: "{{ (state_attr(src,'time') or {}).get('s') }}"
          attributions: "{{ state_attr(src,'attributions') }}"

      # IAQI helpers (reused via macro)
      - name: WAQI Nearby PM2.5
        unique_id: waqi_nearby_pm2_5
        device_class: pm25
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'pm25') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'pm25') | float(default=none) -}}

      - name: WAQI Nearby Temperature
        unique_id: waqi_nearby_temperature
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'t') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'t') | float(default=none) -}}

      - name: WAQI Nearby Humidity
        unique_id: waqi_nearby_humidity
        device_class: humidity
        unit_of_measurement: "%"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'h') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'h') | float(default=none) -}}

      - name: WAQI Nearby Wind Speed
        unique_id: waqi_nearby_wind_speed
        device_class: wind_speed
        unit_of_measurement: "m/s"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'w') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'w') | float(default=none) -}}

      - name: WAQI Nearby Wind Gust
        unique_id: waqi_nearby_wind_gust
        device_class: wind_speed
        unit_of_measurement: "m/s"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'wg') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'wg') | float(default=none) -}}

      - name: WAQI Nearby O3
        unique_id: waqi_nearby_o3
        device_class: ozone
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'o3') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'o3') | float(default=none) -}}

      - name: WAQI Nearby CO
        unique_id: waqi_nearby_co
        device_class: carbon_monoxide
        unit_of_measurement: "ppm"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'co') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'co') | float(default=none) -}}

      - name: WAQI Nearby PM10
        unique_id: waqi_nearby_pm10
        device_class: pm10
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'pm10') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'pm10') | float(default=none) -}}

      - name: WAQI Nearby NO2
        unique_id: waqi_nearby_no2
        device_class: nitrogen_dioxide
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'no2') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'no2') | float(default=none) -}}

      - name: WAQI Nearby SO2
        unique_id: waqi_nearby_so2
        device_class: sulphur_dioxide
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- (iaqi(src,'so2') | float(none)) is not none -}}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}
          {{- iaqi(src,'so2') | float(default=none) -}}

  # Forecast tiles for Nearby (recompute on WAQI change or at midnight)
  - trigger:
      - platform: state
        entity_id:
          - sensor.waqi_nearby
          - sensor.date
      - platform: time
        at: "00:00:15"
    variables:
      src: "sensor.waqi_nearby"
      aqi_days: >-
        {%- from 'metrics/air_quality/helpers.jinja' import forecast_days -%}
        {{- forecast_days(src) -}}
    sensor:
      - name: AQI Forecast Nearby Day 0
        unique_id: aqi_forecast_nearby_day_0
        icon: mdi:calendar-today
        availability: "{{ (aqi_days|count) > 0 and ((aqi_days[0] or {}).get('exists')) }}"
        state: "{{ (aqi_days[0] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[0] or {}).get('date') }}"
          title: "{{ (aqi_days[0] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[0] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[0] or {}).get('hex') }}"
          badge: "{{ (aqi_days[0] or {}).get('badge') }}"
          icon: "{{ (aqi_days[0] or {}).get('icon') }}"

      - name: AQI Forecast Nearby Day 1
        unique_id: aqi_forecast_nearby_day_1
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 1 and ((aqi_days[1] or {}).get('exists')) }}"
        state: "{{ (aqi_days[1] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[1] or {}).get('date') }}"
          title: "{{ (aqi_days[1] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[1] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[1] or {}).get('hex') }}"
          badge: "{{ (aqi_days[1] or {}).get('badge') }}"
          icon: "{{ (aqi_days[1] or {}).get('icon') }}"

      - name: AQI Forecast Nearby Day 2
        unique_id: aqi_forecast_nearby_day_2
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 2 and ((aqi_days[2] or {}).get('exists')) }}"
        state: "{{ (aqi_days[2] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[2] or {}).get('date') }}"
          title: "{{ (aqi_days[2] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[2] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[2] or {}).get('hex') }}"
          badge: "{{ (aqi_days[2] or {}).get('badge') }}"
          icon: "{{ (aqi_days[2] or {}).get('icon') }}"

      - name: AQI Forecast Nearby Day 3
        unique_id: aqi_forecast_nearby_day_3
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 3 and ((aqi_days[3] or {}).get('exists')) }}"
        state: "{{ (aqi_days[3] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[3] or {}).get('date') }}"
          title: "{{ (aqi_days[3] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[3] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[3] or {}).get('hex') }}"
          badge: "{{ (aqi_days[3] or {}).get('badge') }}"
          icon: "{{ (aqi_days[3] or {}).get('icon') }}"

      - name: AQI Forecast Nearby Day 4
        unique_id: aqi_forecast_nearby_day_4
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 4 and ((aqi_days[4] or {}).get('exists')) }}"
        state: "{{ (aqi_days[4] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[4] or {}).get('date') }}"
          title: "{{ (aqi_days[4] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[4] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[4] or {}).get('hex') }}"
          badge: "{{ (aqi_days[4] or {}).get('badge') }}"
          icon: "{{ (aqi_days[4] or {}).get('icon') }}"

  # -------------------- Home block --------------------
  - trigger:
      - platform: state
        entity_id: sensor.waqi_home
    variables:
      src: sensor.waqi_home
    sensor:
      - name: WAQI Home AQI
        unique_id: waqi_home_aqi
        device_class: aqi
        state_class: measurement
        availability: "{{ has_value(src) and (states(src) | float(none)) is not none }}"
        state: "{{ states(src) | int(default=none) }}"
        attributes:
          station: "{{ (state_attr(src,'city') or {}).get('name') }}"
          dominentpol: "{{ state_attr(src,'dominentpol') }}"
          last_update: "{{ (state_attr(src,'time') or {}).get('s') }}"
          attributions: "{{ state_attr(src,'attributions') }}"

      - name: WAQI Home PM2.5
        unique_id: waqi_home_pm2_5
        device_class: pm25
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'pm25') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'pm25') | float(default=none) }}

      - name: WAQI Home Temperature
        unique_id: waqi_home_temperature
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'t') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'t') | float(default=none) }}

      - name: WAQI Home Humidity
        unique_id: waqi_home_humidity
        device_class: humidity
        unit_of_measurement: "%"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'h') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'h') | float(default=none) }}

      - name: WAQI Home Wind Speed
        unique_id: waqi_home_wind_speed
        device_class: wind_speed
        unit_of_measurement: "m/s"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'w') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'w') | float(default=none) }}

      - name: WAQI Home Wind Gust
        unique_id: waqi_home_wind_gust
        device_class: wind_speed
        unit_of_measurement: "m/s"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'wg') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'wg') | float(default=none) }}

      - name: WAQI Home O3
        unique_id: waqi_home_o3
        device_class: ozone
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'o3') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'o3') | float(default=none) }}

      - name: WAQI Home CO
        unique_id: waqi_home_co
        device_class: carbon_monoxide
        unit_of_measurement: "ppm"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'co') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'co') | float(default=none) }}

      - name: WAQI Home PM10
        unique_id: waqi_home_pm10
        device_class: pm10
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'pm10') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'pm10') | float(default=none) }}

      - name: WAQI Home NO2
        unique_id: waqi_home_no2
        device_class: nitrogen_dioxide
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'no2') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'no2') | float(default=none) }}

      - name: WAQI Home SO2
        unique_id: waqi_home_so2
        device_class: sulphur_dioxide
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'so2') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'so2') | float(default=none) }}

  # Forecast tiles for Home
  - trigger:
      - platform: state
        entity_id:
          - sensor.waqi_home
          - sensor.date
    variables:
      src: "sensor.waqi_home"
      aqi_days: >-
        {%- from 'metrics/air_quality/helpers.jinja' import forecast_days -%}
        {{- forecast_days(src) -}}
    sensor:
      - name: AQI Forecast Home Day 0
        unique_id: aqi_forecast_home_day_0
        icon: mdi:calendar-today
        availability: "{{ (aqi_days|count) > 0 and ((aqi_days[0] or {}).get('exists')) }}"
        state: "{{ (aqi_days[0] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[0] or {}).get('date') }}"
          title: "{{ (aqi_days[0] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[0] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[0] or {}).get('hex') }}"
          badge: "{{ (aqi_days[0] or {}).get('badge') }}"
          icon: "{{ (aqi_days[0] or {}).get('icon') }}"

      - name: AQI Forecast Home Day 1
        unique_id: aqi_forecast_home_day_1
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 1 and ((aqi_days[1] or {}).get('exists')) }}"
        state: "{{ (aqi_days[1] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[1] or {}).get('date') }}"
          title: "{{ (aqi_days[1] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[1] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[1] or {}).get('hex') }}"
          badge: "{{ (aqi_days[1] or {}).get('badge') }}"
          icon: "{{ (aqi_days[1] or {}).get('icon') }}"

      - name: AQI Forecast Home Day 2
        unique_id: aqi_forecast_home_day_2
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 2 and ((aqi_days[2] or {}).get('exists')) }}"
        state: "{{ (aqi_days[2] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[2] or {}).get('date') }}"
          title: "{{ (aqi_days[2] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[2] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[2] or {}).get('hex') }}"
          badge: "{{ (aqi_days[2] or {}).get('badge') }}"
          icon: "{{ (aqi_days[2] or {}).get('icon') }}"

      - name: AQI Forecast Home Day 3
        unique_id: aqi_forecast_home_day_3
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 3 and ((aqi_days[3] or {}).get('exists')) }}"
        state: "{{ (aqi_days[3] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[3] or {}).get('date') }}"
          title: "{{ (aqi_days[3] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[3] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[3] or {}).get('hex') }}"
          badge: "{{ (aqi_days[3] or {}).get('badge') }}"
          icon: "{{ (aqi_days[3] or {}).get('icon') }}"

      - name: AQI Forecast Home Day 4
        unique_id: aqi_forecast_home_day_4
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 4 and ((aqi_days[4] or {}).get('exists')) }}"
        state: "{{ (aqi_days[4] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[4] or {}).get('date') }}"
          title: "{{ (aqi_days[4] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[4] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[4] or {}).get('hex') }}"
          badge: "{{ (aqi_days[4] or {}).get('badge') }}"
          icon: "{{ (aqi_days[4] or {}).get('icon') }}"

  # -------------------- RV block --------------------
  - trigger:
      - platform: state
        entity_id: sensor.waqi_rv
    variables:
      src: sensor.waqi_rv
    sensor:
      - name: WAQI RV AQI
        unique_id: waqi_rv_aqi
        device_class: aqi
        state_class: measurement
        availability: "{{ has_value(src) and (states(src) | float(none)) is not none }}"
        state: "{{ states(src) | int(default=none) }}"
        attributes:
          station: "{{ (state_attr(src,'city') or {}).get('name') }}"
          dominentpol: "{{ state_attr(src,'dominentpol') }}"
          last_update: "{{ (state_attr(src,'time') or {}).get('s') }}"
          attributions: "{{ state_attr(src,'attributions') }}"

      - name: WAQI RV PM2.5
        unique_id: waqi_rv_pm2_5
        device_class: pm25
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'pm25') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'pm25') | float(default=none) }}

      - name: WAQI RV Temperature
        unique_id: waqi_rv_temperature
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'t') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'t') | float(default=none) }}

      - name: WAQI RV Humidity
        unique_id: waqi_rv_humidity
        device_class: humidity
        unit_of_measurement: "%"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'h') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'h') | float(default=none) }}

      - name: WAQI RV Wind Speed
        unique_id: waqi_rv_wind_speed
        device_class: wind_speed
        unit_of_measurement: "m/s"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'w') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'w') | float(default=none) }}

      - name: WAQI RV Wind Gust
        unique_id: waqi_rv_wind_gust
        device_class: wind_speed
        unit_of_measurement: "m/s"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'wg') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'wg') | float(default=none) }}

      - name: WAQI RV O3
        unique_id: waqi_rv_o3
        device_class: ozone
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'o3') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'o3') | float(default=none) }}

      - name: WAQI RV CO
        unique_id: waqi_rv_co
        device_class: carbon_monoxide
        unit_of_measurement: "ppm"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'co') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'co') | float(default=none) }}

      - name: WAQI RV PM10
        unique_id: waqi_rv_pm10
        device_class: pm10
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'pm10') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'pm10') | float(default=none) }}

      - name: WAQI RV NO2
        unique_id: waqi_rv_no2
        device_class: nitrogen_dioxide
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'no2') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'no2') | float(default=none) }}

      - name: WAQI RV SO2
        unique_id: waqi_rv_so2
        device_class: sulphur_dioxide
        unit_of_measurement: "µg/m³"
        state_class: measurement
        availability: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ (iaqi(src,'so2') | float(none)) is not none }}
        state: >-
          {%- from 'metrics/air_quality/helpers.jinja' import iaqi -%}{{ iaqi(src,'so2') | float(default=none) }}

  # Forecast tiles for RV
  - trigger:
      - platform: state
        entity_id:
          - sensor.waqi_rv
          - sensor.date
    variables:
      src: "sensor.waqi_rv"
      aqi_days: >-
        {%- from 'metrics/air_quality/helpers.jinja' import forecast_days -%}
        {{- forecast_days(src) -}}
    sensor:
      - name: AQI Forecast RV Day 0
        unique_id: aqi_forecast_rv_day_0
        icon: mdi:calendar-today
        availability: "{{ (aqi_days|count) > 0 and ((aqi_days[0] or {}).get('exists')) }}"
        state: "{{ (aqi_days[0] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[0] or {}).get('date') }}"
          title: "{{ (aqi_days[0] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[0] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[0] or {}).get('hex') }}"
          badge: "{{ (aqi_days[0] or {}).get('badge') }}"
          icon: "{{ (aqi_days[0] or {}).get('icon') }}"

      - name: AQI Forecast RV Day 1
        unique_id: aqi_forecast_rv_day_1
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 1 and ((aqi_days[1] or {}).get('exists')) }}"
        state: "{{ (aqi_days[1] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[1] or {}).get('date') }}"
          title: "{{ (aqi_days[1] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[1] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[1] or {}).get('hex') }}"
          badge: "{{ (aqi_days[1] or {}).get('badge') }}"
          icon: "{{ (aqi_days[1] or {}).get('icon') }}"

      - name: AQI Forecast RV Day 2
        unique_id: aqi_forecast_rv_day_2
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 2 and ((aqi_days[2] or {}).get('exists')) }}"
        state: "{{ (aqi_days[2] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[2] or {}).get('date') }}"
          title: "{{ (aqi_days[2] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[2] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[2] or {}).get('hex') }}"
          badge: "{{ (aqi_days[2] or {}).get('badge') }}"
          icon: "{{ (aqi_days[2] or {}).get('icon') }}"

      - name: AQI Forecast RV Day 3
        unique_id: aqi_forecast_rv_day_3
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 3 and ((aqi_days[3] or {}).get('exists')) }}"
        state: "{{ (aqi_days[3] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[3] or {}).get('date') }}"
          title: "{{ (aqi_days[3] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[3] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[3] or {}).get('hex') }}"
          badge: "{{ (aqi_days[3] or {}).get('badge') }}"
          icon: "{{ (aqi_days[3] or {}).get('icon') }}"

      - name: AQI Forecast RV Day 4
        unique_id: aqi_forecast_rv_day_4
        icon: mdi:calendar
        availability: "{{ (aqi_days|count) > 4 and ((aqi_days[4] or {}).get('exists')) }}"
        state: "{{ (aqi_days[4] or {}).get('state') or 'unknown' }}"
        attributes:
          date:  "{{ (aqi_days[4] or {}).get('date') }}"
          title: "{{ (aqi_days[4] or {}).get('title') }}"
          aqi:   "{{ (aqi_days[4] or {}).get('aqi') }}"
          hex:   "{{ (aqi_days[4] or {}).get('hex') }}"
          badge: "{{ (aqi_days[4] or {}).get('badge') }}"
          icon: "{{ (aqi_days[4] or {}).get('icon') }}"
