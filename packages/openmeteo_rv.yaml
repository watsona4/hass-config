# =====================================================================================
# OpenMeteo: consolidated package with per-location and selector
# Exposes:
#   - Weather entities for RV, Home, RV
#   - Individual current metrics as sensors per-location
#   - Individual daily (index 0 = today) metrics as sensors per-location
# Dependencies:
#   - sensors: sensor.openmeteo_rv, sensor.openmeteo_home, sensor.openmeteo_rv
#   - jinja: env/weather_codes.jinja (for condition mapping)
# Notes:
#   - All templates use has_value and safe indexing to avoid errors.
#   - Units: uses native units coming from your REST/OpenMeteo setup.
# =====================================================================================

sensor:
  - platform: rest
    name: OpenMeteo RV
    unique_id: openmeteo_rv
    state_class: measurement
    device_class: temperature
    unit_of_measurement: "°F"
    scan_interval: 300
    timeout: 60
    resource_template: >-
      {% set rlat = states('sensor.rv_latitude')   | float(0) %}
      {% set alat = states('sensor.aaron_latitude')| float(0) %}
      {% set hlat = states('sensor.home_latitude') | float(0) %}
      {% set rlon = states('sensor.rv_longitude')    | float(0) %}
      {% set alon = states('sensor.aaron_longitude') | float(0) %}
      {% set hlon = states('sensor.home_longitude')  | float(0) %}
      {% set lat = rlat if rlat != 0 else (alat if alat != 0 else hlat) %}
      {% set lon = rlon if rlon != 0 else (alon if alon != 0 else hlon) %}
      {% set ok = lat != 0 and lon != 0 %}
      {{ 'https://api.open-meteo.com/v1/forecast' if ok else 'http://127.0.0.1:65535/' }}
    params:
      latitude: >-
        {% set rlat = states('sensor.rv_latitude')   | float(0) %}
        {% set alat = states('sensor.aaron_latitude')| float(0) %}
        {% set hlat = states('sensor.home_latitude') | float(0) %}
        {{ rlat if rlat != 0 else (alat if alat != 0 else hlat) }}
      longitude: >-
        {% set rlon = states('sensor.rv_longitude')    | float(0) %}
        {% set alon = states('sensor.aaron_longitude') | float(0) %}
        {% set hlon = states('sensor.home_longitude')  | float(0) %}
        {{ rlon if rlon != 0 else (alon if alon != 0 else hlon) }}
      timezone: auto
      current: apparent_temperature,cloud_cover,weather_code,dew_point_2m,relative_humidity_2m,surface_pressure,temperature_2m,uv_index,visibility,wind_gusts_10m,wind_speed_10m,wind_direction_10m,is_day
      daily: rain_sum,snowfall_sum,precipitation_sum,precipitation_probability_max,temperature_2m_max,temperature_2m_min,weathercode,winddirection_10m_dominant,windspeed_10m_max,uv_index_max,sunrise,sunset
      hourly: precipitation,temperature_2m,weathercode,is_day,cloud_cover,uv_index
      temperature_unit: fahrenheit
      wind_speed_unit: mph
      precipitation_unit: inch
    headers:
      Accept: application/json
      User-Agent: HomeAssistant
      Cache-Control: no-cache
    availability: >-
      {% set rlat = states('sensor.rv_latitude') | float(0) %}
      {% set rlon = states('sensor.rv_longitude') | float(0) %}
      {% set alat = states('sensor.aaron_latitude') | float(0) %}
      {% set alon = states('sensor.aaron_longitude') | float(0) %}
      {% set hlat = states('sensor.home_latitude') | float(0) %}
      {% set hlon = states('sensor.home_longitude') | float(0) %}
      {% set lat = rlat if rlat != 0 else (alat if alat != 0 else hlat) %}
      {% set lon = rlon if rlon != 0 else (alon if alon != 0 else hlon) %}
      {{- not (lat == 0 and lon == 0) -}}
    value_template: >-
      {%- set data = value_json if value_json is mapping else {} -%}
      {%- set cur = data.get('current') or {} -%}
      {%- set t = cur.get('temperature_2m') -%}
      {{- t if t is not none else states(this.entity_id) -}}
    json_attributes:
      - timezone
      - timezone_abbreviation
      - elevation
      - current_units
      - current
      - hourly_units
      - hourly
      - daily_units
      - daily

weather:
  - platform: template
    name: OpenMeteo Weather RV
    unique_id: openmeteo_weather_rv
    condition_template: >
      {%- from 'metrics/weather/weather_codes.jinja' import condition -%}
      {%- set c = state_attr('sensor.openmeteo_rv','current') or {} -%}
      {%- set code = c.get('weather_code') -%}
      {%- set is_day = (c.get('is_day')|int(1))|bool -%}
      {%- if code is not none -%}{{- condition(code, is_day) -}}{%- else -%}unknown{%- endif -%}
    apparent_temperature_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('apparent_temperature') -}}"
    cloud_coverage_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('cloud_cover') -}}"
    dew_point_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('dew_point_2m') -}}"
    humidity_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('relative_humidity_2m') -}}"
    pressure_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('surface_pressure') -}}"
    temperature_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('temperature_2m') -}}"
    visibility_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('visibility') -}}"
    wind_bearing_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_direction_10m') -}}"
    wind_gust_speed_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_gusts_10m') -}}"
    wind_speed_template: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_speed_10m') -}}"
    precipitation_unit: "in"
    pressure_unit: "hPa"
    temperature_unit: "°F"
    visibility_unit: "m"
    wind_speed_unit: "mph"
    forecast_daily_template: >
      {%- from 'metrics/weather/weather_codes.jinja' import condition -%}
      {%- set d = state_attr('sensor.openmeteo_rv','daily') or {} -%}
      {%- set tt = d.get('time', []) -%}
      {%- set out = namespace(items=[]) -%}
      {%- set w = d.get('weathercode', []) -%}
      {%- set ps = d.get('precipitation_sum', []) -%}
      {%- set tmax = d.get('temperature_2m_max', []) -%}
      {%- set tmin = d.get('temperature_2m_min', []) -%}
      {%- set wdir = d.get('winddirection_10m_dominant', []) -%}
      {%- set wspd = d.get('windspeed_10m_max', []) -%}
      {%- for i in range(tt|length) -%}
        {%- set dt = (tt[i] | as_datetime | as_local) -%}
        {%- set entry = {
            'datetime': dt|string,
            'condition': condition(w[i]) if i < (w|length) else 'unknown',
            'native_precipitation': ps[i] if i < (ps|length) else none,
            'native_temperature':   tmax[i] if i < (tmax|length) else none,
            'native_templow':       tmin[i] if i < (tmin|length) else none,
            'wind_bearing':         wdir[i] if i < (wdir|length) else none,
            'wind_speed':           wspd[i] if i < (wspd|length) else none
          } -%}
        {%- set out.items = out.items + [entry] -%}
      {%- endfor -%}
      {{- out.items | tojson -}}
    forecast_hourly_template: >
      {%- from 'metrics/weather/weather_codes.jinja' import condition -%}
      {%- set h = state_attr('sensor.openmeteo_rv','hourly') or {} -%}
      {%- set cur = state_attr('sensor.openmeteo_rv','current') or {} -%}
      {%- set cur_dt = (cur.get('time') | as_datetime(default=none)) -%}
      {%- set tt = h.get('time', []) -%}
      {%- set wc  = h.get('weathercode', []) -%}
      {%- set idy = h.get('is_day', []) -%}
      {%- set pr  = h.get('precipitation', []) -%}
      {%- set tmp = h.get('temperature_2m', []) -%}
      {%- set out = namespace(items=[]) -%}
      {%- for i in range(tt|length) -%}
        {%- set dt = (tt[i] | as_datetime | as_local) -%}
        {%- if cur_dt is none or dt >= (cur_dt | as_local) -%}
          {%- set entry = {
                'datetime': dt|string,
                'condition': condition(wc[i], (idy[i]|int(1))|bool) if i < (wc|length) and i < (idy|length) else 'unknown',
                'native_precipitation': pr[i]  if i < (pr|length)  else none,
                'native_temperature':   tmp[i] if i < (tmp|length) else none
              } -%}
          {%- set out.items = out.items + [entry] -%}
        {%- endif -%}
      {%- endfor -%}
      {{- out.items | tojson -}}

template:

  - sensor:
      - name: RV Temperature
        unique_id: rv_current_temperature
        device_class: temperature
        unit_of_measurement: "°F"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('temperature_2m') -}}"

      - name: RV UV Index
        unique_id: rv_current_uv_index
        state_class: measurement
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('uv_index') -}}"

      - name: RV Apparent Temperature
        unique_id: rv_current_apparent_temperature
        device_class: temperature
        unit_of_measurement: "°F"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('apparent_temperature') -}}"

      - name: RV Humidity
        unique_id: rv_current_humidity
        device_class: humidity
        unit_of_measurement: "%"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('relative_humidity_2m') -}}"

      - name: RV Dew Point
        unique_id: rv_current_dew_point
        device_class: temperature
        unit_of_measurement: "°F"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('dew_point_2m') -}}"

      - name: RV Pressure
        unique_id: rv_current_pressure
        device_class: atmospheric_pressure
        unit_of_measurement: "hPa"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('surface_pressure') -}}"

      - name: RV Wind Speed
        unique_id: rv_current_wind_speed
        device_class: wind_speed
        unit_of_measurement: "mph"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_speed_10m') -}}"

      - name: RV Wind Gust
        unique_id: rv_current_wind_gust
        device_class: wind_speed
        unit_of_measurement: "mph"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_gusts_10m') -}}"

      - name: RV Wind Direction
        unique_id: rv_current_wind_direction
        device_class: wind_direction
        unit_of_measurement: "°"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_direction_10m') -}}"

      - name: RV Visibility
        unique_id: rv_current_visibility
        device_class: distance
        unit_of_measurement: "m"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('visibility') -}}"

      - name: RV Cloud Cover
        unique_id: rv_current_cloud_cover
        unit_of_measurement: "%"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('cloud_cover') -}}"

      - name: RV Weather Code
        unique_id: rv_current_weather_code
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('weather_code') -}}"

      - name: RV Observation Time
        unique_id: rv_current_observation_time
        device_class: timestamp
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','current') is mapping) -}}"
        state: "{{- (state_attr('sensor.openmeteo_rv','current') or {}).get('time') | as_datetime | as_local -}}"

      - name: RV Today Temp Max
        unique_id: rv_daily0_temp_max
        device_class: temperature
        unit_of_measurement: "°F"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('temperature_2m_max') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Temp Min
        unique_id: rv_daily0_temp_min
        device_class: temperature
        unit_of_measurement: "°F"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('temperature_2m_min') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Uv Index Max
        unique_id: rv_daily0_uv_index_max
        state_class: measurement
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('uv_index_max') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Precip Sum
        unique_id: rv_daily0_precip_sum
        device_class: precipitation
        unit_of_measurement: "in"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('precipitation_sum') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Rain Sum
        unique_id: rv_daily0_rain_sum
        device_class: precipitation
        unit_of_measurement: "in"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('rain_sum') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Snowfall Sum
        unique_id: rv_daily0_snowfall_sum
        device_class: precipitation
        unit_of_measurement: "in"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('snowfall_sum') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Precip Prob Max
        unique_id: rv_daily0_precip_prob_max
        unit_of_measurement: "%"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('precipitation_probability_max') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Wind Speed Max
        unique_id: rv_daily0_wind_speed_max
        device_class: wind_speed
        unit_of_measurement: "mph"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('windspeed_10m_max') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Wind Dir Dom
        unique_id: rv_daily0_wind_dir_dom
        device_class: wind_direction
        unit_of_measurement: "°"
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('winddirection_10m_dominant') or [] -%}
          {{- _l[0] if (_l | length) > 0 else none -}}

      - name: RV Today Sunrise
        unique_id: rv_daily0_sunrise
        device_class: timestamp
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('sunrise') or [] -%}
          {{- _l[0] | as_datetime | as_local if (_l | length) > 0 else none -}}

      - name: RV Today Sunset
        unique_id: rv_daily0_sunset
        device_class: timestamp
        availability: "{{- has_value('sensor.openmeteo_rv') and (state_attr('sensor.openmeteo_rv','daily') is mapping) -}}"
        state: >-
          {%- set _l = (state_attr('sensor.openmeteo_rv','daily') or {}).get('sunset') or [] -%}
          {{- _l[0] | as_datetime | as_local if (_l | length) > 0 else none -}}

  - sensor:
      - name: RV UV Window JSON
        unique_id: rv_uv_window_json
        icon: mdi:code-json
        availability: "{{- has_value('sensor.openmeteo_rv') -}}"
        state: "{{- now () -}}"
        attributes:
          data: >-
            {%- from 'metrics/uv/protection_window.jinja' import uv_window -%}
            {{- uv_window('sensor.openmeteo_rv', 3.5) | from_json -}}

  - binary_sensor:
      - name: RV UV Protection
        unique_id: rv_uv_protection
        availability: "{{- has_value('sensor.rv_uv_window_json') -}}"
        state: >-
          {%- set window = state_attr('sensor.rv_uv_window_json','data') -%}
          {%- set s = window.get('start') | as_datetime(default=None) -%}
          {%- set e = window.get('end') | as_datetime(default=None) -%}
          {{- s is not none and e is not none and s | as_local <= now() < e | as_local -}}
        attributes:
          start: >-
            {%- set window = state_attr('sensor.rv_uv_window_json','data') -%}
            {%- set dt = window.get('start') | as_datetime(default=none) -%}
            {{- dt | as_local if dt is not none -}}
          end: >-
            {%- set window = state_attr('sensor.rv_uv_window_json','data') -%}
            {%- set dt = window.get('end') | as_datetime(default=none) -%}
            {{- dt | as_local if dt is not none -}}
          duration: >-
            {%- set window = state_attr('sensor.rv_uv_window_json','data') -%}
            {{- timedelta(minutes=window.get('duration_min') | int(0)) -}}

  - sensor:
      - name: RV UV Exposure JSON
        unique_id: rv_uv_exposure_json
        icon: mdi:code-json
        availability: "{{- has_value('sensor.openmeteo_rv') -}}"
        state: "{{- now () -}}"
        attributes:
          data: >-
            {%- from 'metrics/uv/exposure_st.jinja' import uv_safe_exposure_multi -%}
            {{- uv_safe_exposure_multi('sensor.openmeteo_rv') | from_json -}}

  - sensor:
      - name: RV Safe Exposure End ST1
        unique_id: rv_safe_exposure_end_st1
        device_class: timestamp
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st1', {})).get('end_ts')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set ts = (data.get('st1', {}) if data is mapping else {}).get('end_ts') -%}
          {%- set dt = ts | as_datetime(default=none) -%}
          {{- dt | as_local if dt is not none -}}

      - name: RV Safe Exposure End ST2
        unique_id: rv_safe_exposure_end_st2
        device_class: timestamp
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st2', {})).get('end_ts')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set ts = (data.get('st2', {}) if data is mapping else {}).get('end_ts') -%}
          {%- set dt = ts | as_datetime(default=none) -%}
          {{- dt | as_local if dt is not none -}}

      - name: RV Safe Exposure End ST3
        unique_id: rv_safe_exposure_end_st3
        device_class: timestamp
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st3', {})).get('end_ts')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set ts = (data.get('st3', {}) if data is mapping else {}).get('end_ts') -%}
          {%- set dt = ts | as_datetime(default=none) -%}
          {{- dt | as_local if dt is not none -}}

      - name: RV Safe Exposure End ST4
        unique_id: rv_safe_exposure_end_st4
        device_class: timestamp
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st4', {})).get('end_ts')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set ts = (data.get('st4', {}) if data is mapping else {}).get('end_ts') -%}
          {%- set dt = ts | as_datetime(default=none) -%}
          {{- dt | as_local if dt is not none -}}

      - name: RV Safe Exposure End ST5
        unique_id: rv_safe_exposure_end_st5
        device_class: timestamp
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st5', {})).get('end_ts')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set ts = (data.get('st5', {}) if data is mapping else {}).get('end_ts') -%}
          {%- set dt = ts | as_datetime(default=none) -%}
          {{- dt | as_local if dt is not none -}}

      - name: RV Safe Exposure End ST6
        unique_id: rv_safe_exposure_end_st6
        device_class: timestamp
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st6', {})).get('end_ts')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set ts = (data.get('st6', {}) if data is mapping else {}).get('end_ts') -%}
          {%- set dt = ts | as_datetime(default=none) -%}
          {{- dt | as_local if dt is not none -}}

      - name: RV Safe Exposure Minutes ST1
        unique_id: rv_safe_exposure_minutes_st1
        device_class: duration
        unit_of_measurement: "min"
        icon: mdi:timer-sand
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st1', {})).get('mins')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set mins = (data.get('st1', {}) if data is mapping else {}).get('mins') -%}
          {{- mins | int(none) -}}

      - name: RV Safe Exposure Minutes ST2
        unique_id: rv_safe_exposure_minutes_st2
        device_class: duration
        unit_of_measurement: "min"
        icon: mdi:timer-sand
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st2', {})).get('mins')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set mins = (data.get('st2', {}) if data is mapping else {}).get('mins') -%}
          {{- mins | int(none) -}}

      - name: RV Safe Exposure Minutes ST3
        unique_id: rv_safe_exposure_minutes_st3
        device_class: duration
        unit_of_measurement: "min"
        icon: mdi:timer-sand
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st3', {})).get('mins')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set mins = (data.get('st3', {}) if data is mapping else {}).get('mins') -%}
          {{- mins | int(none) -}}

      - name: RV Safe Exposure Minutes ST4
        unique_id: rv_safe_exposure_minutes_st4
        device_class: duration
        unit_of_measurement: "min"
        icon: mdi:timer-sand
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st4', {})).get('mins')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set mins = (data.get('st4', {}) if data is mapping else {}).get('mins') -%}
          {{- mins | int(none) -}}

      - name: RV Safe Exposure Minutes ST5
        unique_id: rv_safe_exposure_minutes_st5
        device_class: duration
        unit_of_measurement: "min"
        icon: mdi:timer-sand
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st5', {})).get('mins')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set mins = (data.get('st5', {}) if data is mapping else {}).get('mins') -%}
          {{- mins | int(none) -}}

      - name: RV Safe Exposure Minutes ST6
        unique_id: rv_safe_exposure_minutes_st6
        device_class: duration
        unit_of_measurement: "min"
        icon: mdi:timer-sand
        availability: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {{- data is mapping and ((data.get('st6', {})).get('mins')) is not none -}}
        state: >-
          {%- set data = state_attr('sensor.rv_uv_exposure_json','data') -%}
          {%- set mins = (data.get('st6', {}) if data is mapping else {}).get('mins') -%}
          {{- mins | int(none) -}}
