- id: '1692822259889'
  alias: Garage Door
  description: 'Automates the garage door: opens or closes based on presence, daylight,
    rain, motion, and obstruction. Closes automatically when left open and no one
    is home. Sends alerts if obstruction detected. Uses timers and multiple safety
    triggers.

    '
  triggers:
  - trigger: state
    entity_id:
    - cover.ratgdov25i_f6128e_door
    to: open
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: One Minute
  - trigger: state
    entity_id:
    - cover.ratgdov25i_f6128e_door
    to: open
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - entity_id:
    - input_boolean.someone_is_home
    to:
    trigger: state
    id: Someone is Home
  - entity_id:
    - binary_sensor.rainy
    to:
    trigger: state
  - entity_id:
    - binary_sensor.dark_outside
    to:
    trigger: state
    id: Dark Outside
  - entity_id:
    - binary_sensor.daytime
    trigger: state
    id: Daytime
  - trigger: state
    entity_id:
    - binary_sensor.ratgdov25i_f6128e_obstruction
    to: 'on'
    id: Obstruction
  - trigger: state
    entity_id:
    - binary_sensor.ratgdov25i_f6128e_motion
    to: 'on'
    id: Motion
  - trigger: state
    entity_id:
    - device_tracker.ashley_iphone
    - device_tracker.aaron_helper_tracker
    from: not_home
    to: home
    id: Coming Home
  - event_type: timer.finished
    event_data:
      entity_id: timer.garage_door_delay
    trigger: event
    id: Timer
  - topic: site/home/devices/frigate/events
    trigger: mqtt
    id: Motion
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: timer.garage_door_delay
      state: idle
    - condition: trigger
      id:
      - One Minute
      - Someone is Home
      - Dark Outside
      - Daytime
      - Coming Home
      - Timer
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Obstruction
      sequence:
      - if:
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: closing
        then:
        - action: notify.aaron_and_ashley_phones
          metadata: {}
          data:
            title: Garage Door
            message: Garage door obstruction detected!
            data:
              push:
                ttl: 0
                priority: high
    - conditions:
      - condition: trigger
        id:
        - Motion
      sequence:
      - if:
        - condition: state
          entity_id: timer.gym_event_loop_running
          state: active
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: closed
        - condition: template
          value_template: '{% set after = trigger.payload_json[''after''] if ''payload_json''
            in trigger else none %}

            {{ after is none or after.camera == ''garage_camera'' }}'
        then:
        - action: cover.open_cover
          metadata: {}
          data: {}
          target:
            entity_id: cover.ratgdov25i_f6128e_door
    - conditions:
      - condition: trigger
        id:
        - One Minute
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.someone_is_home
          state: 'off'
        - not:
          - condition: state
            entity_id: cover.ratgdov25i_f6128e_door
            state: opening
        - not:
          - condition: state
            entity_id: cover.ratgdov25i_f6128e_door
            state: closing
        then:
        - action: cover.close_cover
          metadata: {}
          data: {}
          target:
            entity_id: cover.ratgdov25i_f6128e_door
    - conditions:
      - condition: trigger
        id:
        - Coming Home
      - not:
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: opening
      - not:
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: closing
      sequence:
      - action: cover.open_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.ratgdov25i_f6128e_door
    - conditions:
      - condition: state
        entity_id: binary_sensor.dark_outside
        state: 'off'
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'on'
      - condition: state
        entity_id: binary_sensor.rainy
        state: 'off'
      - condition: state
        entity_id: input_boolean.someone_is_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.home_alone
        state: 'off'
      - not:
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: opening
      - not:
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: closing
      sequence:
      - action: cover.open_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.ratgdov25i_f6128e_door
    default:
    - if:
      - not:
        - condition: trigger
          id:
          - Manual Open
      - not:
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: opening
      - not:
        - condition: state
          entity_id: cover.ratgdov25i_f6128e_door
          state: closing
      then:
      - action: cover.close_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.ratgdov25i_f6128e_door
  - if:
    - not:
      - condition: trigger
        id:
        - Obstruction
        - Motion
        - Timer
    then:
    - action: timer.start
      metadata: {}
      data:
        duration: 00:03:00
      target:
        entity_id: timer.garage_door_delay
  mode: single
  trace:
    stored_traces: 100
- id: '1692822419953'
  alias: Close Windows Temperature
  description: ''
  triggers:
  - entity_id: binary_sensor.front_hallway_closed_temperature
    id: Front Hallway
    trigger: state
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.front_hallway_closed_temperature
    id: Front Hallway
    trigger: state
    from: 'off'
    to: 'on'
  - entity_id: binary_sensor.study_south_closed_temperature
    id: Study South
    trigger: state
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.study_south_closed_temperature
    id: Study South
    trigger: state
    from: 'off'
    to: 'on'
  - entity_id: binary_sensor.study_west_closed_temperature
    id: Study West
    trigger: state
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.study_west_closed_temperature
    id: Study West
    trigger: state
    from: 'off'
    to: 'on'
  - entity_id: binary_sensor.guest_south_closed_temperature
    id: Guest South
    trigger: state
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.guest_south_closed_temperature
    id: Guest South
    trigger: state
    from: 'off'
    to: 'on'
  - entity_id: binary_sensor.west_windows_closed_temperature
    id: West
    trigger: state
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.west_windows_closed_temperature
    id: West
    trigger: state
    from: 'off'
    to: 'on'
  conditions:
  - condition: state
    entity_id: input_boolean.all_windows
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: Front Hallway
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.front_hallway_closed_temperature
          state: 'on'
        then:
        - data:
            entities:
            - cover.front_hallway_window
            action: Closed Up
            reason: Temperature
          action: script.window_position
        else:
        - data:
            entities:
            - cover.front_hallway_window
            action: Open
          action: script.window_position
    - conditions:
      - condition: trigger
        id: Study South
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.study_south_closed_temperature
          state: 'on'
        then:
        - data:
            entities:
            - cover.study_left_window
            - cover.study_right_window
            action: Closed Up
            reason: Temperature
          action: script.window_position
        else:
        - if:
          - condition: state
            entity_id: input_boolean.study_occupied
            state: 'on'
          then:
          - wait_template: '{{ not is_state(''binary_sensor.guest_bedroom_presence_delay'',
              ''on'') }}'
            timeout: 01:00:00
        - data:
            entities:
            - cover.study_left_window
            - cover.study_right_window
            action: Open
            switches:
            - binary_sensor.study_south_closed_brightness
          action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Study West
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.study_west_closed_temperature
          state: 'on'
        then:
        - data:
            entities:
            - cover.study_west_window
            action: Closed Up
            reason: Temperature
          action: script.window_position
        else:
        - if:
          - condition: state
            entity_id: input_boolean.study_occupied
            state: 'on'
          then:
          - wait_template: '{{ not is_state(''binary_sensor.guest_bedroom_presence_delay'',
              ''on'') }}'
            timeout: 01:00:00
        - data:
            entities:
            - cover.study_west_window
            action: Open
            switches:
            - binary_sensor.study_west_closed_brightness
          action: script.window_position
    - conditions:
      - condition: trigger
        id: Guest South
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.guest_south_closed_temperature
          state: 'on'
        then:
        - data:
            entities:
            - cover.guest_bedroom_south_window
            action: Closed Up
            reason: Temperature
          action: script.window_position
        else:
        - wait_template: '{{ not is_state(''binary_sensor.guest_bedroom_presence_delay'',
            ''on'') }}'
          timeout: 01:00:00
        - data:
            entities:
            - cover.guest_bedroom_south_window
            switches:
            - binary_sensor.guest_bedroom_closed_button
            action: Open
          action: script.window_position
    - conditions:
      - condition: trigger
        id: West
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.west_windows_closed_temperature
          state: 'on'
        then:
        - parallel:
          - data:
              entities:
              - cover.guest_bedroom_left_window
              - cover.guest_bedroom_right_window
              action: Closed Up
              reason: Temperature
            action: script.window_position
          - data:
              entities:
              - cover.study_west_window
              action: Closed Up
              reason: Temperature
            action: script.window_position
          - data:
              entities:
              - cover.living_room_left_window
              - cover.living_room_right_window
              action: Closed Up
              reason: Temperature
            action: script.window_position
          - data:
              entities:
              - cover.breakfast_room_window
              action: Closed Up
              reason: Temperature
            action: script.window_position
          - data:
              entities:
              - cover.laundry_room_window
              action: Closed Up
              reason: Temperature
            action: script.window_position
          - if:
            - condition: state
              entity_id: schedule.kids_daytime
              state: 'on'
            then:
            - parallel:
              - data:
                  entities:
                  - cover.michael_room_window
                  action: Closed Up
                  reason: Temperature
                action: script.window_position
              - data:
                  entities:
                  - cover.eleanor_room_window
                  action: Closed Up
                  reason: Temperature
                action: script.window_position
        else:
        - parallel:
          - sequence:
            - if:
              - condition: state
                entity_id: input_boolean.study_occupied
                state: 'on'
              then:
              - wait_template: '{{ not is_state(''binary_sensor.guest_bedroom_presence_delay'',
                  ''on'') }}'
                timeout: 01:00:00
            - data:
                entities:
                - cover.study_west_window
                action: Open
                switches:
                - binary_sensor.study_west_closed_brightness
              action: script.window_position
          - data:
              entities:
              - cover.living_room_left_window
              - cover.living_room_right_window
              action: Open
              switches:
              - binary_sensor.living_room_closed_brightness
              - binary_sensor.living_room_closed_tv
              - binary_sensor.living_room_closed_button
            action: script.window_position
          - data:
              entities:
              - cover.breakfast_room_window
              action: Open
              switches:
              - binary_sensor.breakfast_room_closed_brightness
              - binary_sensor.breakfast_room_closed_button
            action: script.window_position
          - data:
              entities:
              - cover.laundry_room_window
              action: Open
            action: script.window_position
          - if:
            - condition: state
              entity_id: schedule.kids_daytime
              state: 'on'
            then:
            - parallel:
              - data:
                  entities:
                  - cover.eleanor_room_window
                  action: Open
                  switches:
                  - binary_sensor.eleanor_presence_presence_information
                  - binary_sensor.eleanor_room_closed_button
                action: script.window_position
              - data:
                  entities:
                  - cover.michael_room_window
                  action: Open
                  switches:
                  - binary_sensor.michael_presence_presence_information
                  - binary_sensor.michael_room_closed_button
                action: script.window_position
          - sequence:
            - wait_template: '{{ not is_state(''binary_sensor.guest_bedroom_presence_delay'',
                ''on'') }}'
              timeout: 01:00:00
            - data:
                entities:
                - cover.guest_bedroom_left_window
                - cover.guest_bedroom_right_window
                switches:
                - binary_sensor.guest_bedroom_closed_button
                action: Open
              action: script.window_position
  mode: parallel
  trace:
    stored_traces: 100
- id: '1692822473593'
  alias: Exterior Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.dark_outside
    to: 'on'
    trigger: state
  - entity_id:
    - binary_sensor.dark_outside
    to: 'off'
    trigger: state
  - entity_id:
    - binary_sensor.daytime
    to: 'on'
    trigger: state
  - entity_id:
    - binary_sensor.evening
    to: 'off'
    trigger: state
  - trigger: state
    entity_id:
    - input_boolean.daytime_override
  - trigger: homeassistant
    event: start
  conditions: []
  actions:
  - wait_template: '{{ is_state(''timer.exterior_lights_timer'', ''idle'') }}'
    continue_on_timeout: true
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.dark_outside
        state: 'on'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.daytime
          state: 'on'
        - condition: state
          entity_id: binary_sensor.evening
          state: 'on'
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: script.turn_on_exterior_lights
        action: script.turn_on
    - conditions:
      - condition: state
        entity_id: binary_sensor.dark_outside
        state: 'off'
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'on'
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: script.turn_off_exterior_lights
        action: script.turn_on
    - conditions:
      - condition: state
        entity_id: binary_sensor.dark_outside
        state: 'on'
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'off'
      - condition: state
        entity_id: binary_sensor.evening
        state: 'off'
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: script.turn_off_exterior_lights
        action: script.turn_on
  - action: timer.start
    metadata: {}
    data:
      duration: 00:05:00
    target:
      entity_id: timer.exterior_lights_timer
  mode: single
  trace:
    stored_traces: 100
- id: '1692822720736'
  alias: Study Light Off
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.evening
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - parallel:
    - sequence:
      - wait_template: '{{ not (states(''binary_sensor.everything_presence_one_6dbad0_occupancy'')|bool)
          and (now() - states.binary_sensor.everything_presence_one_6dbad0_occupancy.last_changed).total_seconds()
          > 900 }}'
      - target:
          entity_id:
          - switch.parlor_table_lamp
          - switch.living_room_end_table_lamp
        data: {}
        action: switch.turn_off
    - if:
      - condition: state
        entity_id: input_boolean.study_occupied
        state: 'off'
      then:
      - target:
          entity_id:
          - light.study_lamp
        data: {}
        action: light.turn_off
    - if:
      - condition: state
        entity_id: input_boolean.guest_bedroom_occupied
        state: 'off'
      then:
      - target:
          entity_id:
          - switch.guest_bedroom_lamp_socket_1
        data: {}
        action: switch.turn_off
  mode: restart
  trace:
    stored_traces: 100
- id: '1695555678119'
  alias: Plants Inside
  description: ''
  triggers:
  - at: 07:30:00
    trigger: time
  - at: 08:30:00
    trigger: time
  - at: '18:30:00'
    trigger: time
  - entity_id:
    - sensor.outside_temperature_state
    above: 39.9
    trigger: numeric_state
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: Temperature
  - entity_id:
    - sensor.outside_temperature_state
    below: 40
    trigger: numeric_state
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: Temperature
  - trigger: state
    entity_id:
    - person.aaron_watson
    to: home
  - trigger: state
    entity_id:
    - person.ashley_watson
    to: home
  - entity_id:
    - sensor.outside_temperature_state
    above: 44.9
    trigger: numeric_state
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: Temperature
  - entity_id:
    - sensor.outside_temperature_state
    below: 45
    trigger: numeric_state
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: Temperature
  conditions:
  - condition: state
    entity_id: binary_sensor.daytime
    state: 'on'
  actions:
  - if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - Temperature
      - condition: numeric_state
        entity_id: sensor.outside_temperature_state
        above: 39
        below: 44
      - condition: numeric_state
        entity_id: sensor.outside_temperature_rate
        above: -2
        below: 2
    then:
    - stop: 'Temperature changing too slowly '
  - data:
      type: hourly
    target:
      entity_id:
      - weather.openmeteo_weather_home
    response_variable: forecast
    action: weather.get_forecasts
  - variables:
      forecast: "{% set morning = today_at(\"18:30\") if now() < today_at(\"18:30\")
        else today_at(\"07:30\") + timedelta(days=1) %} {% set ns = namespace(data=[])
        %} {% for entry in forecast['weather.openmeteo_weather_home']['forecast']
        %}\n  {% if entry[\"datetime\"] | as_datetime | as_local <= morning %}\n    {%
        set ns.data = ns.data + [entry] %}\n  {% endif %}\n{% endfor %} {{ ns.data
        }}"
      drops_time: "{% set ns = namespace(drops_time=None) %} {% if states(\"sensor.outside_temperature_state\")
        | float >= 40 %}\n  {% for entry in forecast %}\n    {% if ns.drops_time is
        none and entry[\"temperature\"] | float < 40 %}\n      {% set ns.drops_time
        = entry[\"datetime\"] %}\n    {% endif %}\n  {% endfor %}\n{% endif %} {{
        \"nil\" if ns.drops_time is none else ns.drops_time | as_datetime | as_local
        }}"
      min_temp: '{{ forecast | map(attribute=''temperature'') | map(''float'') | min
        | int }}'
      title: "{% set hours = \"nil\" if drops_time == \"nil\" else drops_time | as_datetime
        - now() %} {% if min_temp < 40 and (drops_time == \"nil\" or hours < timedelta(hours=2)
        or drops_time | as_datetime > today_at(\"20:30\") and drops_time | as_datetime
        < today_at(\"07:30\") + timedelta(days=1)) %}\n  Bring plants inside!\n{%
        else %}\n  Put plants outside!\n{% endif %}"
      message: "{% set drops_time = \"nil\" if drops_time == \"nil\" else drops_time
        | as_datetime %}\n{% set hours = \"nil\" if drops_time == \"nil\" else drops_time
        - now() %}\n{% if drops_time == \"nil\" or hours < timedelta(hours=2) %}\n
        \ Minimum temperature is {{ min_temp | string }}°F.\n{% else %}\n  {% set
        drops_time = drops_time | as_datetime %}\n  Temperature above 40°F until {{
        drops_time.strftime(\"%I\").lstrip('0') + drops_time.strftime(\":%M %p\")
        }}.\n{% endif %}"
  - action: input_number.set_value
    target:
      entity_id: input_number.min_temperature
    data:
      value: '{{min_temp}}'
  - wait_template: '{{ is_state("device_tracker.aaron_helper_tracker", "home") or
      is_state("device_tracker.ashley_iphone", "home") }}'
    continue_on_timeout: true
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.plant_location
        state: Outside
      - condition: template
        value_template: '{{ ''inside'' in title }}'
      sequence:
      - parallel:
        - action: notify.mobile_app_pixel_9_pro_xl
          continue_on_error: true
          data:
            title: '{{title}}'
            message: '{{message}}'
            data:
              push:
                ttl: 0
                priority: high
        - action: notify.mobile_app_l144jy6rmq_iphone
          data:
            title: '{{title}}'
            message: '{{message}}'
            data:
              push:
                interruption-level: critical
        - if:
          - condition: state
            entity_id: device_tracker.ashley_iphone
            state: home
          then:
          - action: notify.mobile_app_ashleys_iphone
            data:
              title: '{{title}}'
              message: '{{message}}'
              data:
                push:
                  interruption-level: critical
        - action: notify.persistent_notification
          data:
            title: '{{title}}'
            message: '{{message}}'
      - target:
          entity_id: input_select.plant_location
        data:
          option: Inside
        action: input_select.select_option
    - conditions:
      - condition: state
        entity_id: input_select.plant_location
        state: Inside
      - condition: template
        value_template: '{{ ''outside'' in title }}'
      sequence:
      - parallel:
        - action: notify.mobile_app_pixel_9_pro_xl
          continue_on_error: true
          data:
            title: '{{title}}'
            message: '{{message}}'
            data:
              push:
                ttl: 0
                priority: high
        - action: notify.mobile_app_l144jy6rmq_iphone
          data:
            title: '{{title}}'
            message: '{{message}}'
            data:
              push:
                interruption-level: critical
        - if:
          - condition: state
            entity_id: device_tracker.ashley_iphone
            state: home
          then:
          - action: notify.mobile_app_ashleys_iphone
            data:
              title: '{{title}}'
              message: '{{message}}'
              data:
                push:
                  interruption-level: critical
        - action: notify.persistent_notification
          data:
            title: '{{title}}'
            message: '{{message}}'
      - target:
          entity_id: input_select.plant_location
        data:
          option: Outside
        action: input_select.select_option
  mode: restart
- id: '1695898395461'
  alias: Wood Stove
  description: ''
  triggers:
  - trigger: time_pattern
    minutes: /15
  - trigger: state
    entity_id: schedule.daytime
    to:
    id: Daytime
  - trigger: state
    entity_id:
    - automation.fire
    - input_boolean.someone_is_home
    to:
  conditions:
  - condition: state
    entity_id: input_boolean.wood_stove
    state: 'on'
  - condition: state
    entity_id: schedule.daytime
    state: 'on'
  actions:
  - wait_template: '{{ states(''person.aaron_watson'') == ''home'' or states(''person.ashley_watson'')
      == ''home'' }}'
  - if:
    - condition: trigger
      id:
      - Daytime
    then:
    - if:
      - condition: numeric_state
        entity_id: climate.downstairs_thermostat
        attribute: current_temperature
        below: 65
      then:
      - if:
        - condition: state
          entity_id: person.ashley_watson
          state: home
        - not:
          - condition: state
            entity_id: person.aaron_watson
            state: home
        then:
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Wood Stove
            message: Start a fire in the wood stove!
            data:
              push:
                interruption-level: critical
      - if:
        - condition: state
          entity_id: person.aaron_watson
          state: home
        then:
        - action: notify.mobile_app_pixel_9_pro_xl
          data:
            title: Wood Stove
            message: Start a fire in the wood stove!
            data:
              push:
                ttl: 0
                priority: high
      - action: timer.start
        metadata: {}
        data: {}
        target:
          entity_id: timer.fire_started
    else:
    - if:
      - condition: state
        entity_id: input_boolean.someone_is_home
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.downstairs_temperature_rate
        below: 0
      - condition: numeric_state
        entity_id: climate.downstairs_thermostat
        attribute: current_temperature
        below: 65
      - condition: state
        entity_id: timer.fire_started
        state: idle
      - condition: state
        entity_id: timer.notified_of_wood
        state: idle
      then:
      - if:
        - condition: state
          entity_id: person.ashley_watson
          state: home
        then:
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Wood Stove
            message: Put wood on the fire!
            data:
              push:
                interruption-level: critical
      - if:
        - condition: state
          entity_id: person.aaron_watson
          state: home
        then:
        - action: notify.mobile_app_pixel_9_pro_xl
          data:
            title: Wood Stove
            message: Put wood on then fire!
            data:
              push:
                ttl: 0
                priority: high
        - action: notify.mobile_app_l144jy6rmq_iphone
          data:
            title: Wood Stove
            message: Put wood on the fire!
            data:
              push:
                ttl: 0
                priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Put more wood on the fire!
      - action: timer.start
        data: {}
        target:
          entity_id: timer.notified_of_wood
  mode: restart
- id: '1697740887036'
  alias: Chicken Water
  description: ''
  triggers:
  - at: 07:30:00
    trigger: time
  - trigger: numeric_state
    entity_id:
    - sensor.ambientweather_wh31e_1_167_temperature
    below: 35
  conditions: []
  actions:
  - if:
    - condition: numeric_state
      entity_id: sensor.water_barrel_fill_level
      below: 10
      above: 0
    then:
    - action: notify.aaron_and_ashley_phones
      metadata: {}
      data:
        title: Chicken Water
        message: Fill the chicken water barrel!
        data:
          push:
            ttl: 0
            priority: high
  - if:
    - condition: numeric_state
      entity_id: sensor.chicken_food_sensor_fill_level
      below: 10
      above: 0
    then:
    - action: notify.aaron_and_ashley_phones
      metadata: {}
      data:
        title: Chicken Food
        message: Add food to the hopper!
        data:
          push:
            ttl: 0
            priority: high
  - if:
    - condition: numeric_state
      entity_id: sensor.ambientweather_wh31e_1_167_temperature
      below: 35
    then:
    - wait_template: '{{ states(''timer.water_freezing_timer'', ''idle'') }}'
      continue_on_timeout: true
    - action: notify.aaron_and_ashley_phones
      metadata: {}
      data:
        title: Chicken Water
        message: 'Warning: The chicken water barrel is freezing!'
        data:
          push:
            interruption-level: critical
            ttl: 0
            priority: high
    - action: timer.start
      metadata: {}
      data: {}
      target:
        entity_id: timer.water_freezing_timer
  mode: single
- id: '1698754160000'
  alias: Gas Stove
  description: ''
  triggers:
  - entity_id:
    - climate.downstairs_thermostat
    above: -2
    trigger: numeric_state
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
    value_template: '{{ state.attributes.current_temperature | float - states("input_number.furnace_temperature")
      | float }}'
    enabled: false
  - entity_id:
    - climate.downstairs_thermostat
    trigger: numeric_state
    below: -2
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
    value_template: '{{ state.attributes.current_temperature | float - states("input_number.furnace_temperature")
      | float }}'
    enabled: false
  - entity_id:
    - climate.downstairs_thermostat
    trigger: state
    attribute: temperature
    enabled: false
  - trigger: state
    entity_id:
    - binary_sensor.daytime
    - input_boolean.someone_is_home
    to:
    enabled: false
  - trigger: numeric_state
    entity_id:
    - sensor.parlor_thermometer_temperature
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: 70
  - trigger: numeric_state
    entity_id:
    - sensor.parlor_thermometer_temperature
    for:
      hours: 0
      minutes: 5
      seconds: 0
    above: 70
  conditions: []
  actions:
  - if:
    - condition: numeric_state
      entity_id: climate.downstairs_thermostat
      below: -2
      value_template: '{{ state.attributes.current_temperature | float - states("input_number.furnace_temperature")
        | float }}'
      enabled: false
    - condition: state
      entity_id: binary_sensor.daytime
      state: 'on'
      enabled: false
    - condition: state
      entity_id: input_boolean.someone_is_home
      state: 'on'
      enabled: false
    - condition: template
      value_template: '{% set target_temp = (state_attr(''climate.downstairs_thermostat'',
        ''temperature'') or state_attr(''climate.downstairs_thermostat'', ''target_temp_low''))
        | float %} {% set wood_stove = states(''input_boolean.wood_stove'') | bool
        %}

        {% set furnace = states("input_number.furnace_temperature") | float %}

        {{ wood_stove or target_temp <= furnace }}'
      enabled: false
    - condition: numeric_state
      entity_id: sensor.parlor_thermometer_temperature
      below: 70
    then:
    - action: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.gas_stove_switch
    else:
    - action: switch.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: switch.gas_stove_switch
  mode: single
  trace:
    stored_traces: 100
- id: '1698837376885'
  alias: Christmas Lights
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.daytime
    - binary_sensor.evening
    - input_boolean.someone_is_home
  - trigger: state
    entity_id:
    - media_player.parlor
    attribute: Content ID
    id: Music
  conditions:
  - condition: template
    value_template: '{% set month = now().strftime("%m") | int %}

      {{ month == 12 }}'
  actions:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'on'
      - condition: state
        state: 'on'
        entity_id: binary_sensor.evening
    - condition: state
      entity_id: input_boolean.someone_is_home
      state: 'on'
    then:
    - action: script.turn_on
      data: {}
      target:
        entity_id: script.christmas_lights_on
    else:
    - action: script.turn_on
      data: {}
      target:
        entity_id: script.christmas_lights_off
  - if:
    - condition: trigger
      id:
      - Music
    then:
    - action: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.christmas_music
  mode: single
  trace:
    stored_traces: 100
- id: '1699563020750'
  alias: Living Room Automation
  description: ''
  triggers:
  - seconds: /15
    enabled: true
    trigger: time_pattern
  conditions:
  - condition: state
    entity_id: binary_sensor.daytime
    state: 'on'
  actions:
  - if:
    - condition: state
      entity_id: light.living_room_light
      state: 'off'
    then:
    - action: light.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: light.living_room_light
  - target:
      entity_id: script.living_room_lights
    data: {}
    action: script.turn_on
  mode: restart
- id: '1701214827631'
  alias: Thermostats
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.daytime
    id: Daytime
    trigger: state
  - entity_id:
    - input_boolean.wood_stove
    id: Wood Stove
    trigger: state
  - entity_id:
    - input_boolean.someone_is_home
    id: Someone Home
    trigger: state
  - entity_id:
    - binary_sensor.kitchen_door_contact
    to: 'on'
    for:
      minutes: 5
    trigger: state
  - entity_id:
    - binary_sensor.living_room_door_contact
    to: 'on'
    for:
      minutes: 5
    trigger: state
  - entity_id:
    - binary_sensor.kitchen_door_contact
    to: 'off'
    trigger: state
  - entity_id:
    - binary_sensor.living_room_door_contact
    to: 'off'
    trigger: state
  - entity_id:
    - sensor.downstairs_thermostat_current_temperature
    above: input_number.downstairs_temperature
    trigger: numeric_state
    id: Target
  - entity_id:
    - sensor.upstairs_temperature
    above: 1
    value_template: '{{ state.state|float - states(''input_number.downstairs_temperature'')|float
      }}'
    trigger: numeric_state
    id: Target
  - entity_id:
    - input_number.downstairs_temperature
    - input_number.furnace_temperature
    - automation.thermostats
    - input_boolean.coming_home
    id: Target
    trigger: state
    to:
  - device_id: ffa24dba7efe667f7b158707766c6736
    domain: select
    entity_id: b3171e9d44e389886ab08cb8e3c21a49
    type: current_option_changed
    trigger: device
  conditions: []
  actions:
  - variables:
      furnace_temp: '{{ states(''input_number.furnace_temperature'') if not is_state(''input_boolean.wood_stove'',
        ''on'') else 63 }}'
      downstairs: "{% set temp = states('input_number.downstairs_temperature')|float
        %} {% set upstairs_temp = state_attr('climate.upstairs_thermostat', 'current_temperature')|float
        %} {% set upstairs_action = state_attr('climate.upstairs_thermostat', 'hvac_action')
        %} {% if upstairs_temp > temp + 1 and upstairs_action == 'cooling' %}\n  {{
        temp - 1 }}\n{% else %}\n  {{ [temp, furnace_temp + 3]|max }}\n{% endif %}"
      upstairs: '{{ downstairs|float + 1}}'
      study_heater: '{% set weekday = now().strftime("%w")|int  %} {{ 68 if weekday
        >= 1 and weekday <= 5 else 65 }}'
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.kitchen_door_contact
        state: 'off'
      - condition: state
        entity_id: binary_sensor.living_room_door_contact
        state: 'off'
    then:
    - if:
      - condition: state
        entity_id: climate.downstairs_thermostat
        state: 'off'
      then:
      - metadata: {}
        data:
          hvac_mode: heat_cool
        target:
          entity_id: climate.downstairs_thermostat
        action: climate.set_hvac_mode
    - if:
      - condition: state
        entity_id: climate.upstairs_thermostat
        state: 'off'
      then:
      - metadata: {}
        data:
          hvac_mode: cool
        target:
          entity_id: climate.upstairs_thermostat
        action: climate.set_hvac_mode
    - if:
      - condition: state
        state: 'off'
        entity_id: climate.study_space_heater
      then:
      - metadata: {}
        data:
          hvac_mode: heat
        action: climate.set_hvac_mode
        target:
          entity_id: climate.study_space_heater
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.someone_is_home
        state: 'off'
      - condition: state
        entity_id: input_boolean.coming_home
        state: 'off'
      sequence:
      - type: turn_on
        device_id: bf504d65da756f4a151f42fac791dd08
        entity_id: bec34548b2f45c3381a3824ccc8fb41b
        domain: switch
        continue_on_error: true
      - if:
        - condition: numeric_state
          entity_id: sensor.outside_temperature_filtered
          above: 90
        then:
        - stop: Too hot to go into away mode.
      - metadata: {}
        data:
          target_temp_high: 85
          target_temp_low: 50
          hvac_mode: heat_cool
        target:
          entity_id: climate.downstairs_thermostat
        action: climate.set_temperature
      - metadata: {}
        data:
          hvac_mode: heat_cool
          target_temp_high: 85
          target_temp_low: 50
        action: climate.set_temperature
        target:
          entity_id: climate.downstairs_thermostat
      - metadata: {}
        data:
          hvac_mode: cool
          temperature: 85
        action: climate.set_temperature
        target:
          entity_id: climate.upstairs_thermostat
      - action: climate.set_preset_mode
        metadata: {}
        data:
          preset_mode: away
        target:
          entity_id:
          - climate.upstairs_thermostat
          - climate.gym_minisplit_setall_gym_minisplit
          - climate.playroom_minisplit_setall_playroom_minisplit
      - action: climate.set_temperature
        metadata: {}
        data:
          temperature: 50
        target:
          entity_id: climate.study_space_heater
    - conditions:
      - condition: state
        entity_id: binary_sensor.kitchen_door_contact
        state: 'on'
      - condition: state
        entity_id: binary_sensor.living_room_door_contact
        state: 'on'
      sequence:
      - if:
        - condition: numeric_state
          entity_id: sensor.downstairs_thermostat_current_temperature
          above: 0
          value_template: '{{ state.state|float - downstairs|float }}'
        then:
        - if:
          - condition: state
            entity_id: person.ashley_watson
            state: home
          then:
          - action: notify.mobile_app_ashleys_iphone
            data:
              title: Air Conditioning
              message: Close the kitchen and living room doors!
              data:
                push:
                  interruption-level: critical
                  ttl: 0
                  priority: high
        - if:
          - condition: state
            entity_id: person.aaron_watson
            state: home
          then:
          - action: notify.aaron_phones
            data:
              title: Air Conditioning
              message: Close the kitchen and living room doors!
              data:
                push:
                  interruption-level: critical
                  ttl: 0
                  priority: high
      - if:
        - condition: numeric_state
          entity_id: sensor.upstairs_temperature
          above: 0
          value_template: '{{ state.state|float - upstairs|float }}'
        - condition: device
          device_id: 3802c1cf1c5fe18ef641b5993b0475e0
          domain: climate
          entity_id: 0f90f5c564293543f6939e9d5f44c10c
          type: is_hvac_mode
          hvac_mode: 'off'
        then:
        - device_id: 3802c1cf1c5fe18ef641b5993b0475e0
          domain: climate
          entity_id: 0f90f5c564293543f6939e9d5f44c10c
          type: set_hvac_mode
          hvac_mode: cool
      - if:
        - condition: numeric_state
          entity_id: sensor.study_thermometer_temperature
          above: 0
          value_template: '{{ state.state|float - furnace_temp|float }}'
        - condition: state
          entity_id: climate.study_space_heater
          state: 'off'
        then:
        - action: climate.set_hvac_mode
          target:
            entity_id: climate.study_space_heater
          data:
            hvac_mode: heat
      - if:
        - condition: numeric_state
          entity_id: sensor.downstairs_thermostat_current_temperature
          below: 0
          value_template: '{{ state.state|float - downstairs|float }}'
        - condition: numeric_state
          entity_id: sensor.upstairs_temperature
          below: 0
          value_template: '{{ state.state|float - upstairs|float }}'
        then:
        - data: {}
          target:
            entity_id: climate.downstairs_thermostat
          action: climate.turn_off
        - device_id: 3802c1cf1c5fe18ef641b5993b0475e0
          domain: climate
          entity_id: 0f90f5c564293543f6939e9d5f44c10c
          type: set_hvac_mode
          hvac_mode: 'off'
        - action: climate.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: climate.study_space_heater
        - action: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.humidifiers_enabled
        - action: humidifier.turn_off
          metadata: {}
          data: {}
          target:
            entity_id:
            - humidifier.living_room_dehumidifier
            - humidifier.humidifier
    - conditions:
      - condition: trigger
        id:
        - Daytime
        - Wood Stove
        - Someone Home
        - Target
      - condition: or
        conditions:
        - condition: state
          entity_id: input_boolean.someone_is_home
          state: 'on'
        - condition: state
          entity_id: input_boolean.coming_home
          state: 'on'
      sequence:
      - action: climate.set_preset_mode
        metadata: {}
        data:
          preset_mode: none
        target:
          entity_id:
          - climate.upstairs_thermostat
          - climate.gym_minisplit_setall_gym_minisplit
          - climate.playroom_minisplit_setall_playroom_minisplit
      - data:
          temperature: '{{upstairs}}'
          hvac_mode: cool
        target:
          entity_id: climate.upstairs_thermostat
        action: climate.set_temperature
      - action: climate.set_temperature
        metadata: {}
        data:
          temperature: 64
          hvac_mode: auto
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
      - action: climate.set_temperature
        metadata: {}
        data:
          temperature: 69
          hvac_mode: auto
        target:
          entity_id: climate.playroom_minisplit_setall_playroom_minisplit
      - type: turn_off
        device_id: bf504d65da756f4a151f42fac791dd08
        entity_id: bec34548b2f45c3381a3824ccc8fb41b
        domain: switch
        continue_on_error: true
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.daytime
            state: 'on'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.wood_stove
              state: 'on'
            then:
            - data:
                temperature: '{{furnace_temp}}'
                hvac_mode: heat
              target:
                entity_id: climate.downstairs_thermostat
              action: climate.set_temperature
            else:
            - data:
                target_temp_high: '{{downstairs}}'
                target_temp_low: '{{furnace_temp}}'
                hvac_mode: heat_cool
              target:
                entity_id: climate.downstairs_thermostat
              action: climate.set_temperature
          - action: climate.set_hvac_mode
            target:
              entity_id: climate.study_space_heater
            data:
              hvac_mode: heat
          - action: climate.set_temperature
            data:
              temperature: '{{study_heater}}'
            target:
              entity_id: climate.study_space_heater
        - conditions:
          - condition: state
            entity_id: binary_sensor.daytime
            state: 'off'
          sequence:
          - if:
            - condition: state
              entity_id: input_boolean.wood_stove
              state: 'on'
            then:
            - data:
                temperature: 60
                hvac_mode: heat
              target:
                entity_id: climate.downstairs_thermostat
              action: climate.set_temperature
            else:
            - data:
                target_temp_high: '{{downstairs}}'
                target_temp_low: 60
                hvac_mode: heat_cool
              target:
                entity_id: climate.downstairs_thermostat
              action: climate.set_temperature
          - action: climate.set_hvac_mode
            target:
              entity_id: climate.study_space_heater
            data:
              hvac_mode: heat
          - action: climate.set_temperature
            data:
              temperature: 60
            target:
              entity_id: climate.study_space_heater
  mode: queued
  trace:
    stored_traces: 100
  max: 10
- id: '1702908863907'
  alias: Coming Home
  description: ''
  triggers:
  - entity_id:
    - person.ashley_watson
    to: Taekwondo
    id: Ashley Arriving Taekwondo
    trigger: state
  - entity_id:
    - person.ashley_watson
    from: Taekwondo
    for: 00:00:10
    id: Ashley Leaving Taekwondo
    trigger: state
  - entity_id:
    - person.ashley_watson
    to: Ashley Work
    id: Ashley Arriving Work
    trigger: state
  - entity_id:
    - person.ashley_watson
    from: Ashley Work
    for: 00:00:10
    id: Ashley Leaving Work
    trigger: state
  - entity_id:
    - person.ashley_watson
    to: Glens Falls Hospital
    id: Ashley Arriving GFH
    trigger: state
  - entity_id:
    - person.ashley_watson
    from: Glens Falls Hospital
    for: 00:00:10
    id: Ashley Leaving GFH
    trigger: state
  - entity_id:
    - person.ashley_watson
    to: Willard
    id: Ashley Arriving Willard
    trigger: state
  - entity_id:
    - person.ashley_watson
    from: Willard
    for: 00:00:10
    id: Ashley Leaving Willard
    trigger: state
  - entity_id:
    - person.aaron_watson
    to: Taekwondo
    id: Aaron Arriving Taekwondo
    trigger: state
  - entity_id:
    - person.aaron_watson
    from: Taekwondo
    for: 00:00:10
    id: Aaron Leaving Taekwondo
    trigger: state
  - entity_id:
    - person.aaron_watson
    to: Liberty Street
    id: Aaron Arriving LS
    trigger: state
  - entity_id:
    - person.aaron_watson
    from: Liberty Street
    for: 00:00:10
    id: Aaron Leaving LS
    trigger: state
  - entity_id:
    - person.aaron_watson
    to: Knolls
    id: Aaron Arriving Knolls
    trigger: state
  - entity_id:
    - person.aaron_watson
    from: Knolls
    for: 00:00:10
    id: Aaron Leaving Knolls
    trigger: state
  - entity_id:
    - person.aaron_watson
    to: Willard
    id: Aaron Arriving Willard
    trigger: state
  - entity_id:
    - person.aaron_watson
    from: Willard
    for: 00:00:10
    id: Aaron Leaving Willard
    trigger: state
  - entity_id:
    - person.aaron_watson
    to: Hershey
    id: Aaron Arriving Hershey
    trigger: state
  - entity_id:
    - person.aaron_watson
    from: Hershey
    for: 00:00:10
    id: Aaron Leaving Hershey
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Ashley Arriving Work
        - Ashley Arriving GFH
      sequence:
      - target:
          entity_id: input_datetime.ashley_work_timer
        data:
          datetime: '{{ now() }}'
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Aaron Arriving Knolls
        - Aaron Arriving LS
      sequence:
      - target:
          entity_id: input_datetime.aaron_work_timer
        data:
          datetime: '{{ now() }}'
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Ashley Arriving Taekwondo
        - Aaron Arriving Taekwondo
      sequence:
      - target:
          entity_id: input_datetime.taekwondo_timer
        data:
          datetime: '{{ now() }}'
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Ashley Arriving Willard
        - Aaron Arriving Willard
      sequence:
      - target:
          entity_id: input_datetime.willard_timer
        data:
          datetime: '{{ now() }}'
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Aaron Arriving Hershey
      sequence:
      - target:
          entity_id: input_datetime.hershey_timer
        data:
          datetime: '{{ now() }}'
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Ashley Leaving GFH
      - condition: numeric_state
        entity_id: input_datetime.ashley_work_timer
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
        above: 3600
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.ashley_work_timer
          attribute: timestamp
          state: '1'
      sequence:
      - action: notify.aaron_phones
        metadata: {}
        data:
          title: Coming Home
          message: Ashley Leaving Glens Falls Hospital
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Ashley Leaving Glens Falls Hospital
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.ashley_work_timer
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Ashley Leaving Work
      - condition: numeric_state
        entity_id: input_datetime.ashley_work_timer
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
        above: 3600
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.ashley_work_timer
          attribute: timestamp
          state: '1'
      sequence:
      - action: notify.aaron_phones
        metadata: {}
        data:
          title: Coming Home
          message: Ashley Leaving Work
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Ashley Leaving Work
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.ashley_work_timer
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Aaron Leaving Knolls
        - Aaron Leaving LS
      - condition: numeric_state
        entity_id: input_datetime.aaron_work_timer
        above: 3600
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.aaron_work_timer
          attribute: timestamp
          state: '1'
      sequence:
      - action: notify.mobile_app_ashleys_iphone
        metadata: {}
        data:
          title: Coming Home
          message: Aaron Leaving Work
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Aaron Leaving Work
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.aaron_work_timer
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Aaron Leaving Taekwondo
      - condition: numeric_state
        entity_id: input_datetime.taekwondo_timer
        above: 900
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.taekwondo_timer
          attribute: timestamp
          state: '1'
      sequence:
      - action: notify.mobile_app_ashleys_iphone
        metadata: {}
        data:
          title: Coming Home
          message: Aaron Leaving Taekwondo
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Aaron Leaving Taekwondo
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.taekwondo_timer
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Aaron Leaving Willard
      - condition: numeric_state
        entity_id: input_datetime.willard_timer
        above: 2700
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.willard_timer
          attribute: timestamp
          state: '1'
      sequence:
      - action: notify.mobile_app_ashleys_iphone
        metadata: {}
        data:
          title: Coming Home
          message: Aaron Leaving Willard
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Aaron Leaving Willard
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.willard_timer
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Aaron Leaving Hershey
      - condition: numeric_state
        entity_id: input_datetime.hershey_timer
        above: 50000
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.hershey_timer
          attribute: timestamp
          state: '1'
      sequence:
      - action: notify.mobile_app_ashleys_iphone
        metadata: {}
        data:
          title: Coming Home
          message: Aaron Leaving Hershey
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Aaron Leaving Hershey
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.hershey_timer
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Ashley Leaving Taekwondo
      - condition: numeric_state
        entity_id: input_datetime.taekwondo_timer
        above: 900
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.taekwondo_timer
          attribute: timestamp
          state: '1'
      - condition: template
        value_template: '{{ trigger.to_state.state != "Tow Path" }}'
      sequence:
      - action: notify.aaron_phones
        metadata: {}
        data:
          title: Coming Home
          message: Ashley Leaving Taekwondo
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Ashley Leaving Taekwondo
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.taekwondo_timer
        action: input_datetime.set_datetime
    - conditions:
      - condition: trigger
        id:
        - Ashley Leaving Willard
      - condition: numeric_state
        entity_id: input_datetime.willard_timer
        above: 2700
        value_template: '{{ as_timestamp(now()) - as_timestamp(state.state) }}'
      - condition: not
        conditions:
        - condition: state
          entity_id: input_datetime.willard_timer
          attribute: timestamp
          state: '1'
      sequence:
      - action: notify.aaron_phones
        metadata: {}
        data:
          title: Coming Home
          message: Ashley Leaving Willard
          data:
            push:
              ttl: 0
              priority: high
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Ashley Leaving Willard
      - metadata: {}
        data:
          timestamp: 1
        target:
          entity_id: input_datetime.willard_timer
        action: input_datetime.set_datetime
  mode: single
  trace:
    stored_traces: 100
- id: '1710011695183'
  alias: Gym Event Loop
  description: ''
  triggers:
  - at: 03:00:00
    id: Start
    trigger: time
  - entity_id:
    - sensor.both_temperature_d1f2020f4a37
    below: 63
    trigger: numeric_state
  - entity_id:
    - sensor.both_temperature_d1f2020f4a37
    above: 65
    trigger: numeric_state
  - trigger: numeric_state
    entity_id:
    - sensor.both_humidity_d1f2020f4a37
    above: 60
    id: High Humidity
  - trigger: numeric_state
    entity_id:
    - sensor.both_humidity_d1f2020f4a37
    below: 60
    id: Low Humidity
  - event_type: timer.finished
    event_data:
      entity_id: timer.gym_event_loop_timer
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.gym_event_loop_running
    id: Stop
    trigger: event
  - topic: site/home/devices/zigbee2mqtt/Teams Button/action
    payload: single
    trigger: mqtt
    id: Manual
  - trigger: state
    entity_id: input_button.start_gym_event_loop
    id: Manual
  - trigger: state
    entity_id: sensor.zwift_online_1747373
    to: 'False'
    for: 00:02:00
    id: RideFinished
  conditions:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: Start
      - condition: time
        weekday:
        - tue
        - fri
      - condition: state
        entity_id: person.aaron_watson
        state: home
    - condition: and
      conditions:
      - condition: trigger
        id: Manual
      - condition: state
        entity_id: person.aaron_watson
        state: home
    - condition: not
      conditions:
      - condition: trigger
        id:
        - Start
        - Manual
  actions:
  - action: timer.start
    metadata: {}
    data:
      duration: 00:05:00
    target:
      entity_id: timer.gym_event_loop_timer
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Start
        - Manual
      sequence:
      - action: timer.start
        metadata: {}
        data:
          duration: 04:30:00
        target:
          entity_id: timer.gym_event_loop_running
      - action: climate.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: climate.playroom_minisplit_setall_playroom_minisplit
      - action: climate.set_fan_mode
        metadata: {}
        data:
          fan_mode: high
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
      - action: climate.set_temperature
        metadata: {}
        data:
          hvac_mode: auto
          temperature: 64
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
      - action: climate.set_humidity
        metadata: {}
        data:
          humidity: 55
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - switch.pedestal_fan
          - switch.floor_fan_outlet
        action: switch.turn_on
    - conditions:
      - condition: trigger
        id:
        - High Humidity
      sequence:
      - action: climate.set_hvac_mode
        metadata: {}
        data:
          hvac_mode: dry
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
    - conditions:
      - condition: trigger
        id:
        - Low Humidity
      sequence:
      - action: climate.set_hvac_mode
        metadata: {}
        data:
          hvac_mode: auto
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
    - conditions:
      - condition: trigger
        id:
        - RideFinished
      sequence:
      - action: timer.start
        target:
          entity_id: timer.gym_event_loop_running
        data:
          duration: 01:00:00
    - conditions:
      - condition: trigger
        id:
        - Stop
      sequence:
      - continue_on_error: true
        data: {}
        target:
          entity_id:
          - switch.pedestal_fan
          - switch.floor_fan_outlet
        action: switch.turn_off
      - action: climate.set_temperature
        metadata: {}
        data:
          hvac_mode: auto
          temperature: 64
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
      - action: climate.set_fan_mode
        metadata: {}
        data:
          fan_mode: auto
        target:
          entity_id: climate.gym_minisplit_setall_gym_minisplit
      - action: climate.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: climate.playroom_minisplit_setall_playroom_minisplit
      - action: timer.cancel
        metadata: {}
        data: {}
        target:
          entity_id: timer.gym_event_loop_running
  - action: timer.cancel
    metadata: {}
    data: {}
    target:
      entity_id: timer.gym_event_loop_timer
  mode: single
  trace:
    stored_traces: 100
- id: '1710268340644'
  alias: Lights Out
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.everything_presence_one_6dbad0_occupancy
    to: 'on'
  - trigger: state
    entity_id:
    - binary_sensor.everything_presence_one_6dbad0_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - entity_id:
    - binary_sensor.daytime
    - binary_sensor.evening
    - input_boolean.someone_is_home
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.someone_is_home
        state: 'off'
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.living_room_light
          - light.dining_room_light
    - conditions:
      - condition: state
        entity_id: schedule.daytime
        state: 'off'
      - condition: state
        entity_id: input_boolean.daytime_override
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.everything_presence_one_6dbad0_occupancy
          state: 'off'
          for:
            hours: 0
            minutes: 5
            seconds: 0
        - condition: state
          entity_id: binary_sensor.evening
          state: 'off'
      sequence:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.living_room_light
          - light.dining_room_light
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: light.living_room_light
          state: 'off'
        - condition: state
          entity_id: light.dining_room_light
          state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.living_room_light
          - light.dining_room_light
  mode: single
  trace:
    stored_traces: 100
- id: '1710523255920'
  alias: Playroom door
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.playroom_door_contact
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: Open
    to: Open
    trigger: state
  - entity_id: sensor.playroom_door_battery
    below: 10
    id: Battery
    trigger: numeric_state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Open
      sequence:
      - repeat:
          sequence:
          - action: notify.mobile_app_ashleys_iphone
            data:
              title: Playroom Door
              message: Playroom door was left open!
              data:
                push:
                  interruption-level: critical
          - action: notify.mobile_app_pixel_9_pro_xl
            data:
              title: Playroom Door
              message: Playroom door was left open!
              data:
                push:
                  ttl: 0
                  priority: high
          - delay: 01:00:00
          while:
          - condition: state
            entity_id: binary_sensor.playroom_door_contact
            state: 'on'
    - conditions:
      - condition: trigger
        id:
        - Battery
      sequence:
      - action: notify.mobile_app_pixel_9_pro_xl
        data:
          title: Playroom Door
          message: Replace battery in playroom door!
          data:
            push:
              ttl: 0
              priority: high
  mode: single
- id: '1711132869677'
  alias: Close Windows Brightness
  description: ''
  triggers:
  - trigger: state
    entity_id: binary_sensor.breakfast_room_closed_brightness
    id: Breakfast Room
    from: 'off'
    to: 'on'
  - trigger: state
    entity_id: binary_sensor.breakfast_room_closed_brightness
    id: Breakfast Room
    from: 'on'
    to: 'off'
  - trigger: state
    id: Kitchen
    entity_id: binary_sensor.kitchen_closed_brightness
    from: 'off'
    to: 'on'
  - trigger: state
    id: Kitchen
    entity_id: binary_sensor.kitchen_closed_brightness
    from: 'on'
    to: 'off'
  - trigger: state
    id: Living Room
    entity_id: binary_sensor.living_room_closed_brightness
    from: 'off'
    to: 'on'
  - trigger: state
    id: Living Room
    entity_id: binary_sensor.living_room_closed_brightness
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.study_south_closed_brightness
    id: Study South
    trigger: state
    from: 'off'
    to: 'on'
  - entity_id: binary_sensor.study_south_closed_brightness
    id: Study South
    trigger: state
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.study_west_closed_brightness
    id: Study West
    trigger: state
    from: 'off'
    to: 'on'
  - entity_id: binary_sensor.study_west_closed_brightness
    id: Study West
    trigger: state
    from: 'on'
    to: 'off'
  - entity_id: binary_sensor.laundry_room_closed_brightness
    id: Laundry Room
    trigger: state
    from: 'off'
    to: 'on'
  - entity_id: binary_sensor.laundry_room_closed_brightness
    id: Laundry Room
    trigger: state
    from: 'on'
    to: 'off'
  conditions:
  - condition: state
    entity_id: input_boolean.all_windows
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: Breakfast Room
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.breakfast_room_closed_brightness
          state: 'on'
        then:
        - data:
            entities:
            - cover.breakfast_room_window
            action: Closed Up
            reason: Brightness
          action: script.window_position
        else:
        - data:
            entities:
            - cover.breakfast_room_window
            action: Open
            switches:
            - binary_sensor.west_windows_closed_temperature
            - binary_sensor.breakfast_room_closed_button
          action: script.window_position
    - conditions:
      - condition: trigger
        id: Kitchen
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.kitchen_closed_brightness
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.kitchen_right_window
            action: Closed Up
            reason: Brightness
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.kitchen_right_window
            action: Open
          action: script.window_position
    - conditions:
      - condition: trigger
        id: Living Room
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.living_room_closed_brightness
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.living_room_right_window
            - cover.living_room_left_window
            action: Closed Up
            reason: Brightness
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.living_room_right_window
            - cover.living_room_left_window
            action: Open
            switches:
            - binary_sensor.west_windows_closed_temperature
            - binary_sensor.living_room_closed_tv
            - binary_sensor.living_room_closed_button
          action: script.window_position
    - conditions:
      - condition: trigger
        id: Study South
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.study_south_closed_brightness
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.study_left_window
            - cover.study_right_window
            action: Closed Up
            reason: Brightness
          action: script.window_position
        else:
        - if:
          - condition: state
            entity_id: input_boolean.study_occupied
            state: 'on'
          then:
          - wait_template: '{{ not is_state(''binary_sensor.guest_bedroom_presence_delay'',
              ''on'') }}'
            timeout: 01:00:00
        - metadata: {}
          data:
            entities:
            - cover.study_left_window
            - cover.study_right_window
            action: Open
            switches:
            - binary_sensor.study_south_closed_temperature
          action: script.window_position
    - conditions:
      - condition: trigger
        id: Study West
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.study_west_closed_brightness
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.study_west_window
            action: Closed Up
            reason: Brightness
          action: script.window_position
        else:
        - if:
          - condition: state
            entity_id: input_boolean.study_occupied
            state: 'on'
          then:
          - wait_template: '{{ not is_state(''binary_sensor.guest_bedroom_presence_delay'',
              ''on'') }}'
            timeout: 01:00:00
        - metadata: {}
          data:
            entities:
            - cover.study_west_window
            action: Open
            switches:
            - binary_sensor.west_windows_closed_temperature
            - binary_sensor.study_west_closed_temperature
          action: script.window_position
    - conditions:
      - condition: trigger
        id: Laundry Room
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.laundry_room_closed_brightness
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.laundry_room_window
            action: Closed Up
            reason: Brightness
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.laundry_room_window
            action: Open
            switches:
            - binary_sensor.west_windows_closed_temperature
          action: script.window_position
  mode: parallel
  trace:
    stored_traces: 100
  max: 10
- id: '1711147287901'
  alias: Living Room TV
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.living_room_closed_tv
    trigger: state
  - entity_id:
    - input_boolean.all_windows
    to:
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.living_room_closed_tv
      state: 'on'
    then:
    - if:
      - condition: state
        entity_id: input_boolean.all_windows
        state: 'on'
      then:
      - metadata: {}
        data:
          entities:
          - cover.living_room_right_window
          - cover.living_room_left_window
          action: Closed Up
          reason: Device
        action: script.window_position
    else:
    - if:
      - condition: state
        entity_id: input_boolean.all_windows
        state: 'on'
      then:
      - metadata: {}
        data:
          entities:
          - cover.living_room_right_window
          - cover.living_room_left_window
          action: Open
          switches:
          - binary_sensor.living_room_closed_brightness
          - binary_sensor.west_windows_closed_temperature
          - binary_sensor.living_room_closed_tv
          - binary_sensor.living_room_closed_button
        action: script.window_position
  mode: queued
  trace:
    stored_traces: 100
  max: 10
- id: '1711243967789'
  alias: All Windows
  description: Automatically manages all house windows and kids’ room windows based
    on light level, sun position, and schedules. Opens windows during bright, scheduled
    daytime hours; closes them if it’s dark or at night. Runs every minute or when
    schedules change. Uses scripts for opening/closing, with timers to prevent rapid
    toggling.
  triggers:
  - entity_id:
    - schedule.daytime
    trigger: state
  - entity_id:
    - schedule.kids_daytime
    id: Kids Daytime
    trigger: state
  - trigger: time_pattern
    minutes: /1
  conditions: []
  actions:
  - wait_template: '{{ is_state(''timer.all_windows_timer'', ''idle'') }}'
    continue_on_timeout: true
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.light_sensor_illuminance
        below: 100
      - condition: sun
        before: sunrise
        after: sunset
        after_offset: '-1:00:00'
        before_offset: '+1:00:00'
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id:
          - script.close_all_windows
          - script.kids_windows_closed
        action: script.turn_on
    - conditions:
      - condition: numeric_state
        entity_id: sensor.light_sensor_illuminance
        above: 100
      - condition: not
        conditions:
        - condition: sun
          after: sunset
          after_offset: '-1:00:00'
      sequence:
      - if:
        - condition: state
          entity_id: schedule.daytime
          state: 'on'
        then:
        - metadata: {}
          data: {}
          target:
            entity_id: script.open_all_windows
          action: script.turn_on
        else:
        - metadata: {}
          data: {}
          target:
            entity_id:
            - script.close_all_windows
          action: script.turn_on
      - if:
        - condition: state
          entity_id: schedule.kids_daytime
          state: 'on'
        then:
        - metadata: {}
          data: {}
          target:
            entity_id: script.open_kids_windows
          action: script.turn_on
        else:
        - metadata: {}
          data: {}
          target:
            entity_id:
            - script.kids_windows_closed
          action: script.turn_on
  - action: timer.start
    metadata: {}
    data:
      duration: 00:0:55
    target:
      entity_id: timer.all_windows_timer
  mode: restart
  trace:
    stored_traces: 100
- id: '1711813023796'
  alias: Nest Protect Battery Level
  description: ''
  triggers:
  - entity_id:
    - sensor.nest_protect_battery_level
    below: 26
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: numeric_state
  conditions: []
  actions:
  - action: notify.mobile_app_pixel_9_pro_xl
    data:
      title: Nest Smoke Detectors
      message: '{% set entity = state_attr(''sensor.nest_protect_battery_level'',
        ''min_entity_id'') %} {{ state_attr(entity, ''friendly_name'') }} is at {{
        states(entity, with_unit=True) }}!'
  mode: single
- id: '1711813060737'
  alias: Blind Tilt Battery Level
  description: ''
  triggers:
  - entity_id:
    - sensor.blind_tilt_battery_level
    below: 10
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: numeric_state
  conditions: []
  actions:
  - metadata: {}
    data:
      data:
        push:
          interruption-level: critical
          ttl: 0
          priority: high
      message: '{% set entity = state_attr(''sensor.blind_tilt_battery_level'', ''min_entity_id'')
        %} {{ state_attr(entity, ''friendly_name'') }} is at {{ states(entity, with_unit=True)
        }}!'
      title: Blind Tilt
    action: notify.mobile_app_pixel_9_pro_xl
  mode: single
- id: '1712784588419'
  alias: Someone is Home
  description: ''
  triggers:
  - entity_id:
    - lock.side_door
    to: unlocked
    id: Unlocking
    trigger: state
  - entity_id:
    - lock.side_door
    to: locked
    trigger: state
  - entity_id:
    - person.ashley_watson
    from: not_home
    to: home
    for: 00:00:10
    trigger: state
    id: Ashley
  - entity_id:
    - person.aaron_watson
    from: not_home
    to: home
    for: 00:00:10
    trigger: state
    id: Aaron
  - trigger: state
    entity_id:
    - person.eleanor_watson
    from: not_home
    to: home
    for: 00:00:10
    id: Eleanor
    enabled: true
  - trigger: state
    entity_id:
    - person.michael_watson
    from: not_home
    to: home
    for: 00:00:10
    id: Michael
  - entity_id:
    - person.ashley_watson
    - person.aaron_watson
    from: home
    trigger: state
    to:
    id: Leaving
  - trigger: state
    entity_id:
    - person.eleanor_watson
    to:
    from: home
    enabled: true
  - trigger: state
    entity_id:
    - person.michael_watson
    to:
    from: home
  conditions:
  - condition: template
    value_template: '{{ (now() - states(''sensor.uptime'')|as_datetime|as_local) >
      timedelta(minutes=1) }}

      '
  - condition: or
    conditions:
    - condition: state
      entity_id: schedule.daytime
      state: 'on'
    - condition: state
      entity_id: binary_sensor.evening
      state: 'on'
  actions:
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: person.ashley_watson
        state: home
        enabled: true
      - condition: state
        entity_id: person.aaron_watson
        state: home
      - condition: trigger
        id:
        - Unlocking
        - Eleanor
        - Michael
      - condition: and
        conditions:
        - condition: trigger
          id: Leaving
        - condition: state
          entity_id: person.eleanor_watson
          state: home
        - condition: state
          entity_id: person.michael_watson
          state: home
        - condition: state
          entity_id: binary_sensor.before_school_time
          state: 'on'
      - condition: state
        entity_id: input_boolean.home_alone
        state: 'on'
    then:
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: person.ashley_watson
          state: home
          enabled: true
        - condition: state
          entity_id: person.aaron_watson
          state: home
      then:
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.home_alone
    - action: input_boolean.turn_on
      metadata: {}
      target:
        entity_id: input_boolean.someone_is_home
      data: {}
    - action: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.coming_home
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: person.ashley_watson
          state: home
      - condition: not
        conditions:
        - condition: state
          entity_id: person.aaron_watson
          state: home
      - condition: trigger
        id:
        - Unlocking
      then:
      - action: notify.aaron_phones
        data:
          title: Someone Home
          message: Someone is home!
    - if:
      - condition: trigger
        id:
        - Ashley
      then:
      - action: notify.aaron_phones
        metadata: {}
        data:
          title: Someone Home
          message: Ashley is home!
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Ashley is home!
    - if:
      - condition: trigger
        id:
        - Aaron
      then:
      - if:
        - condition: not
          conditions:
          - condition: state
            state: home
            entity_id: person.ashley_watson
        then:
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Someone Home
            message: Aaron is home!
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Aaron is home!
    - if:
      - condition: trigger
        id:
        - Eleanor
      then:
      - if:
        - condition: not
          conditions:
          - condition: state
            state: home
            entity_id: person.ashley_watson
        then:
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Someone Home
            message: Eleanor is home!
      - action: notify.aaron_phones
        metadata: {}
        data:
          title: Someone Home
          message: Eleanor is home!
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Eleanor is home!
    - if:
      - condition: trigger
        id:
        - Michael
      then:
      - if:
        - condition: not
          conditions:
          - condition: state
            state: home
            entity_id: person.ashley_watson
        then:
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Someone Home
            message: Michael is home!
      - action: notify.aaron_phones
        metadata: {}
        data:
          title: Someone Home
          message: Michael is home!
      - action: script.announce
        metadata: {}
        data:
          players:
          - media_player.announce_group
          message: Michael is home!
    else:
    - action: input_boolean.turn_off
      target:
        entity_id: input_boolean.someone_is_home
      data: {}
  mode: single
  trace:
    stored_traces: 100
- id: '1713570414566'
  alias: Upstairs Duct Fan
  description: ''
  triggers:
  - entity_id:
    - climate.upstairs_thermostat
    attribute: hvac_action
    trigger: state
  conditions: []
  actions:
  - if:
    - or:
      - not:
        - condition: state
          state: idle
          entity_id: climate.upstairs_thermostat
          attribute: hvac_action
        - condition: state
          state: 'off'
          entity_id: climate.upstairs_thermostat
          attribute: hvac_action
      - condition: state
        entity_id: binary_sensor.hot_in_study
        state: 'on'
    then:
    - type: turn_on
      device_id: 895b906ea999229a016bf4301f05cf8e
      entity_id: b42628a5aef82809229e3e533e8674dd
      domain: switch
    else:
    - type: turn_off
      device_id: 895b906ea999229a016bf4301f05cf8e
      entity_id: b42628a5aef82809229e3e533e8674dd
      domain: switch
  mode: single
- id: '1713825401607'
  alias: Battery Backup Restart
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.cyberpower850_battery_charge
    below: 20
  - platform: homeassistant
    event: start
    id: Startup
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.cyberpower850_status_data
        state: OB DISCHRG
      - condition: numeric_state
        entity_id: sensor.cyberpower850_battery_charge
        below: 20
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id:
          - input_boolean.reboot_needed
        data: {}
      - service: hassio.host_shutdown
        metadata: {}
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Startup
      - condition: state
        entity_id: input_boolean.reboot_needed
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.reboot_needed
        data: {}
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
      - service: hassio.host_reboot
        metadata: {}
        data: {}
  mode: single
- id: '1714036816380'
  alias: Platform Battery
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.platform_battery_monitor_voltmeter
    below: 12
  condition: []
  action:
  - service: notify.mobile_app_pixel_9_pro_xl
    data:
      title: Platform Battery
      message: Charge platform battery!
      data:
        push:
          interruption-level: critical
          ttl: 0
          priority: high
  mode: single
- id: '1714070468628'
  alias: Playroom Lights
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.everything_presence_one_6dbdf0_occupancy
    to: 'on'
  - trigger: state
    entity_id:
    - binary_sensor.everything_presence_one_6dbdf0_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.everything_presence_one_6dbdf0_occupancy
      state: 'on'
    then:
    - action: light.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: light.playroom_lights
    else:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.playroom_lights
  mode: single
- id: '1714213889654'
  alias: Side Door Lock
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.daytime
    - input_boolean.someone_is_home
    - binary_sensor.dark_outside
    trigger: state
    to:
  - device_id: 6c9aed40494e1b52b2cf82d499f60d0b
    domain: lock
    entity_id: 8faf28ebb01ba5cb31620ba6fea47dcf
    type: unlocked
    for:
      hours: 0
      minutes: 0
      seconds: 2
    trigger: device
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_boolean.someone_is_home
          state: 'off'
        - condition: state
          entity_id: input_boolean.home_alone
          state: 'on'
        - condition: state
          entity_id: binary_sensor.daytime
          state: 'off'
        - condition: state
          entity_id: binary_sensor.dark_outside
          state: 'on'
      - condition: state
        entity_id: lock.side_door
        state: unlocked
      sequence:
      - wait_template: '{{ not has_value(''binary_sensor.kitchen_door_contact'') or
          is_state(''binary_sensor.kitchen_door_contact'', ''off'') }}'
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: input_boolean.someone_is_home
            state: 'off'
          - condition: state
            entity_id: input_boolean.home_alone
            state: 'on'
        then:
        - delay:
            seconds: 2
        else:
        - delay:
            minutes: 5
      - if:
        - condition: state
          entity_id: lock.side_door
          state: unlocked
        then:
        - device_id: 6c9aed40494e1b52b2cf82d499f60d0b
          domain: lock
          entity_id: 8faf28ebb01ba5cb31620ba6fea47dcf
          type: lock
    - conditions:
      - condition: state
        entity_id: input_boolean.someone_is_home
        state: 'on'
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'on'
      - condition: state
        entity_id: binary_sensor.dark_outside
        state: 'off'
      - condition: device
        device_id: 6c9aed40494e1b52b2cf82d499f60d0b
        domain: lock
        entity_id: 8faf28ebb01ba5cb31620ba6fea47dcf
        type: is_locked
      sequence:
      - device_id: 6c9aed40494e1b52b2cf82d499f60d0b
        domain: lock
        entity_id: 8faf28ebb01ba5cb31620ba6fea47dcf
        type: unlock
  mode: single
  trace:
    stored_traces: 100
- id: '1714473824822'
  alias: Water Meter Reset
  description: ''
  triggers:
  - trigger: calendar
    entity_id: calendar.local
    event: start
  conditions:
  - condition: template
    value_template: '{{ ''Water Meter Reset'' in trigger.calendar_event }}'
  actions:
  - metadata: {}
    data: {}
    action: utility_meter.reset
    target:
      entity_id: sensor.water_meter_relay
  mode: single
- id: '1715863110380'
  alias: Updater
  description: ''
  triggers:
  - hours: /1
    trigger: time_pattern
  conditions:
  - condition: state
    entity_id: binary_sensor.updates_available
    state: 'on'
  actions:
  - variables:
      candidates: "{{ states.update\n   | selectattr('state','eq','on')\n   | map(attribute='entity_id')\n
        \  | list }}"
  - repeat:
      for_each: '{{ candidates }}'
      sequence:
      - variables:
          item: '{{ repeat.item }}'
          features: '{{ state_attr(item,''supported_features'')|int(0) }}'
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ (features | int(0) | bitwise_and(1)) > 0 }}'
          - condition: template
            value_template: '{{ not is_state_attr(item,''title'',''ESPHome'') }}'
          sequence:
          - target:
              entity_id: '{{ item }}'
            action: update.install
            continue_on_error: true
          - wait_template: '{{ is_state(item,''off'') }}'
            timeout: 00:10:00
            continue_on_timeout: true
        default: []
  mode: single
- id: '1715881884406'
  alias: Breakfast Room Window Button
  description: ''
  triggers:
  - topic: site/home/devices/zigbee2mqtt/Breakfast Room Window Button/action
    payload: single
    trigger: mqtt
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.daytime
      state: 'on'
    - condition: state
      state: 'on'
      entity_id: binary_sensor.evening
  actions:
  - data:
      duration: '1:00:00'
    target:
      entity_id: timer.breakfast_room_timer
    action: timer.start
  - choose:
    - conditions:
      - condition: state
        entity_id: cover.breakfast_room_window
        state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.breakfast_room_window
            action: Closed Up
            reason: Button
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.breakfast_room_window
            action: Closed Down
            reason: Button
          action: script.window_position
    - conditions:
      - condition: state
        entity_id: cover.breakfast_room_window
        state: closed
      sequence:
      - metadata: {}
        data:
          entities:
          - cover.breakfast_room_window
          action: Open
        action: script.window_position
  mode: single
- id: '1716040396166'
  alias: Living Room Windows Button
  description: ''
  triggers:
  - domain: mqtt
    device_id: de8aa47d28d3f695933e77b0c7ac3ee0
    type: action
    subtype: single
    trigger: device
  conditions: []
  actions:
  - data:
      duration: '1:00:00'
    target:
      entity_id: timer.living_room_timer
    action: timer.start
  - choose:
    - conditions:
      - or:
        - condition: state
          entity_id: cover.living_room_left_window
          state: open
        - condition: state
          entity_id: cover.living_room_right_window
          state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.living_room_right_window
            - cover.living_room_left_window
            action: Closed Up
            reason: Button
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.living_room_right_window
            - cover.living_room_left_window
            action: Closed Down
            reason: Button
          action: script.window_position
    - conditions:
      - or:
        - condition: state
          entity_id: cover.living_room_left_window
          state: closed
        - condition: state
          entity_id: cover.living_room_right_window
          state: closed
      sequence:
      - metadata: {}
        data:
          entities:
          - cover.living_room_right_window
          - cover.living_room_left_window
          action: Open
        action: script.window_position
  mode: single
- id: '1716478440911'
  alias: Chicken Coop Decrease Temp
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  condition: []
  action:
  - variables:
      start: '{{ states(''input_datetime.chicken_hatching_day'')|as_datetime|as_local
        }}'
      days: '{{ (now() - start|as_datetime).total_seconds()/86400 }}'
  - if:
    - condition: template
      value_template: '{{ days < 42 }}'
    then:
    - service: climate.set_temperature
      metadata: {}
      data:
        temperature: '{{ 95 - days|float*5/7 }}'
      target:
        entity_id: climate.chicken_heat_lamp
    else:
    - service: climate.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: climate.chicken_heat_lamp
  mode: single
- id: '1716636312124'
  alias: Chicken Coop Heater Sync
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.chicken_coop_outlet
    to: 'on'
    from:
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - platform: state
    entity_id:
    - switch.chicken_coop_outlet
    from:
    to: 'off'
  condition: []
  action:
  - if:
    - condition: state
      entity_id: switch.chicken_coop_outlet
      state: 'on'
    then:
    - service: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.chicken_coop_outlet_2
    else:
    - service: switch.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: switch.chicken_coop_outlet_2
  mode: single
  trace:
    stored_traces: 100
- id: '1717462841985'
  alias: Guest Bedroom Window Button
  description: ''
  triggers:
  - topic: site/home/devices/zigbee2mqtt/Guest Bedroom Window Button/action
    payload: single
    trigger: mqtt
  conditions: []
  actions:
  - target:
      entity_id: input_boolean.guest_bedroom_window_button_active
    action: input_boolean.turn_on
    data: {}
  - action: timer.start
    data:
      duration: '1:00:00'
    target:
      entity_id: timer.guest_bedroom_timer
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: cover.guest_bedroom_left_window
          state: open
        - condition: state
          entity_id: cover.guest_bedroom_right_window
          state: open
        - condition: state
          entity_id: cover.guest_bedroom_south_window
          state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - parallel:
          - data:
              entities:
              - cover.guest_bedroom_south_window
              action: Closed Up
              reason: Button
            action: script.window_position
          - data:
              entities:
              - cover.guest_bedroom_left_window
              - cover.guest_bedroom_right_window
              action: Closed Up
              reason: Button
            action: script.window_position
        else:
        - parallel:
          - data:
              entities:
              - cover.guest_bedroom_south_window
              action: Closed Down
              reason: Button
            action: script.window_position
          - data:
              entities:
              - cover.guest_bedroom_left_window
              - cover.guest_bedroom_right_window
              reason: Button
              action: Closed Down
            action: script.window_position
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: cover.guest_bedroom_left_window
          state: closed
        - condition: state
          entity_id: cover.guest_bedroom_right_window
          state: closed
        - condition: state
          entity_id: cover.guest_bedroom_south_window
          state: closed
      sequence:
      - parallel:
        - metadata: {}
          data:
            entities:
            - cover.guest_bedroom_south_window
            action: Open
          action: script.window_position
        - metadata: {}
          data:
            entities:
            - cover.guest_bedroom_left_window
            - cover.guest_bedroom_right_window
            action: Open
          action: script.window_position
  - delay: 00:00:02
  - target:
      entity_id: input_boolean.guest_bedroom_window_button_active
    action: input_boolean.turn_off
    data: {}
  mode: single
- id: '1717499080551'
  alias: Eleanor Room Window Button
  description: ''
  triggers:
  - topic: site/home/devices/zigbee2mqtt/Eleanor Room Window Button/action
    payload: single
    trigger: mqtt
  conditions: []
  actions:
  - data:
      duration: '1:00:00'
    target:
      entity_id: timer.eleanor_room_timer
    action: timer.start
  - choose:
    - conditions:
      - condition: state
        entity_id: cover.eleanor_room_window
        state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.kids_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.eleanor_room_window
            action: Closed Up
            reason: Button
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.eleanor_room_window
            action: Closed Down
            reason: Button
          action: script.window_position
    - conditions:
      - condition: state
        entity_id: cover.eleanor_room_window
        state: closed
      sequence:
      - metadata: {}
        data:
          entities:
          - cover.eleanor_room_window
          action: Open
        action: script.window_position
  mode: single
- id: '1717499932701'
  alias: Michael Room Window Button
  description: ''
  triggers:
  - topic: site/home/devices/zigbee2mqtt/Michael Room Window Button/action
    payload: single
    trigger: mqtt
  conditions: []
  actions:
  - data:
      duration: '1:00:00'
    target:
      entity_id: timer.michael_room_timer
    action: timer.start
  - choose:
    - conditions:
      - condition: state
        entity_id: cover.michael_room_window
        state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.kids_windows
          state: 'on'
        then:
        - data:
            entities:
            - cover.michael_room_window
            action: Closed Up
            reason: Button
          action: script.window_position
        else:
        - data:
            entities:
            - cover.michael_room_window
            action: Closed Down
            reason: Button
          action: script.window_position
    - conditions:
      - condition: state
        entity_id: cover.michael_room_window
        state: closed
      sequence:
      - data:
          entities:
          - cover.michael_room_window
          action: Open
        action: script.window_position
  mode: single
- id: '1717500033717'
  alias: Kids Bathroom Window Button
  description: ''
  triggers:
  - topic: site/home/devices/zigbee2mqtt/Kids Bathroom Window Button/action
    payload: single
    trigger: mqtt
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.daytime
      state: 'on'
    - condition: state
      state: 'on'
      entity_id: binary_sensor.evening
  actions:
  - data:
      duration: '1:00:00'
    target:
      entity_id: timer.kids_bathroom_timer
    action: timer.start
  - choose:
    - conditions:
      - condition: state
        entity_id: cover.kids_bathroom_window
        state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.kids_bathroom_window
            action: Closed Down
            reason: Button
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.kids_bathroom_window
            action: Closed Down
            reason: Button
          action: script.window_position
    - conditions:
      - condition: state
        entity_id: cover.kids_bathroom_window
        state: closed
      sequence:
      - metadata: {}
        data:
          entities:
          - cover.kids_bathroom_window
          action: Open
        action: script.window_position
  mode: single
- id: '1717500093912'
  alias: Master Bathroom Window Button
  description: ''
  triggers:
  - topic: site/home/devices/zigbee2mqtt/Master Bathroom Window Button/action
    payload: single
    trigger: mqtt
  conditions:
  - condition: state
    entity_id: binary_sensor.daytime
    state: 'on'
  actions:
  - data:
      duration: '1:00:00'
    target:
      entity_id: timer.master_bathroom_timer
    action: timer.start
  - choose:
    - conditions:
      - or:
        - condition: state
          entity_id: cover.master_bathroom_left_window
          state: open
        - condition: state
          entity_id: cover.master_bathroom_right_window
          state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - data:
            entities:
            - cover.master_bathroom_left_window
            - cover.master_bathroom_right_window
            action: Closed Down
            reason: Button
          action: script.window_position
        else:
        - data:
            entities:
            - cover.master_bathroom_left_window
            - cover.master_bathroom_right_window
            action: Closed Down
          action: script.window_position
    - conditions:
      - or:
        - condition: state
          entity_id: cover.master_bathroom_left_window
          state: closed
        - condition: state
          entity_id: cover.master_bathroom_right_window
          state: closed
      sequence:
      - data:
          entities:
          - cover.master_bathroom_left_window
          - cover.master_bathroom_right_window
          action: Open
        action: script.window_position
  mode: single
- id: '1717500150941'
  alias: Master Bedroom Window Button
  description: ''
  triggers:
  - topic: site/home/devices/zigbee2mqtt/Master Bedroom Window Button/action
    payload: single
    trigger: mqtt
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.daytime
      state: 'on'
    - condition: state
      state: 'on'
      entity_id: binary_sensor.evening
  actions:
  - data:
      duration: '1:00:00'
    target:
      entity_id: timer.master_bedroom_timer
    action: timer.start
  - choose:
    - conditions:
      - or:
        - condition: state
          entity_id: cover.master_bedroom_left_window
          state: open
        - condition: state
          entity_id: cover.master_bedroom_right_window
          state: open
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - data:
            entities:
            - cover.master_bedroom_left_window
            - cover.master_bedroom_right_window
            action: Closed Down
            reason: Button
          action: script.window_position
        else:
        - data:
            entities:
            - cover.master_bedroom_left_window
            - cover.master_bedroom_right_window
            action: Closed Down
            reason: Button
          action: script.window_position
    - conditions:
      - or:
        - condition: state
          entity_id: cover.master_bedroom_left_window
          state: closed
        - condition: state
          entity_id: cover.master_bedroom_right_window
          state: closed
      sequence:
      - data:
          entities:
          - cover.master_bedroom_left_window
          - cover.master_bedroom_right_window
          action: Open
        action: script.window_position
  mode: single
- id: '1717539165055'
  alias: Notify of events
  description: ''
  triggers:
  - topic: site/home/devices/frigate/events
    trigger: mqtt
  conditions:
  - condition: state
    entity_id: binary_sensor.daytime
    state: 'on'
  - condition: time
    after: 06:30:00
  actions:
  - if:
    - condition: template
      value_template: '{{ trigger.payload_json[''after''][''area''] > 1000 }}'
    - condition: template
      value_template: '{% set rv_camera = trigger.payload_json[''after''][''camera'']
        == ''rv_camera'' %}

        {% set someone_home = states(''input_boolean.someone_is_home'')|bool %}

        {{ rv_camera and not someone_home or not rv_camera and someone_home }}'
    - condition: template
      value_template: '{{ trigger.payload_json[''after''][''camera''] != ''garage_camera''
        }}'
    then:
    - data_template:
        title: Frigate Event
        message: A {{trigger.payload_json["after"]["label"]}} was detected.
        data:
          image: https://hass.battenkillwoodworks.com/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg?format=android
          tag: '{{trigger.payload_json[''after''][''id'']}}'
          when: '{{trigger.payload_json[''after''][''start_time'']|int}}'
          data:
            clickAction: https://hass.battenkillwoodworks.com/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg?format=android
      action: notify.mobile_app_pixel_9_pro_xl
    - data:
        title: Frigate Event
        message: A {{trigger.payload_json["after"]["label"]}} was detected.
        data:
          image: https://hass.battenkillwoodworks.com/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
          tag: '{{trigger.payload_json[''after''][''id'']}}'
          when: '{{trigger.payload_json[''after''][''start_time'']|int}}'
          entity_id: camera.{{trigger.payload_json["after"]["camera"] | replace("-","_")
            | lower}}
          data:
            url: https://hass.battenkillwoodworks.com/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
      action: notify.mobile_app_l144jy6rmq_iphone
    - data:
        title: Frigate Event
        message: A {{trigger.payload_json["after"]["label"]}} was detected.
        data:
          image: https://hass.battenkillwoodworks.com/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
          tag: '{{trigger.payload_json[''after''][''id'']}}'
          when: '{{trigger.payload_json[''after''][''start_time'']|int}}'
          entity_id: camera.{{trigger.payload_json["after"]["camera"] | replace("-","_")
            | lower}}
          data:
            url: https://hass.battenkillwoodworks.com/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/thumbnail.jpg
      enabled: false
      action: notify.mobile_app_ashleys_iphone
    - if:
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''camera''] in [''doorbell_camera'',
          ''kitchen_porch''] }}'
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''area''] > 6000 }}'
      - condition: template
        value_template: '{{ trigger.payload_json[''after''][''label''] == ''person''
          }}'
      - condition: state
        entity_id: input_boolean.in_a_teams_meeting
        state: 'off'
      then:
      - variables:
          name: "{% if trigger.payload_json['after']['sub_label'] is none %}\n  \"Someone\"\n{%
            else %}\n  {{ trigger.payload_json['after']['sub_label'][0]|title }}\n{%
            endif %}"
          door: "{% if trigger.payload_json['after']['camera'] == 'doorbell_camera'
            %}\n  \"Front Door\"\n{% elif trigger.payload_json['after']['camera']
            == 'kitchen_porch' %}\n  \"Kitchen Door\"\n{% endif %}"
      - metadata: {}
        data:
          players:
          - media_player.kitchen_hub
          - media_player.play_room_hub
          - media_player.sonos_play_3
          - media_player.sonos_five
          name: '{{name}}'
          door: '{{door}}'
        action: script.announce_door
    - delay:
        hours: 0
        minutes: 0
        seconds: 30
        milliseconds: 0
  mode: single
  trace:
    stored_traces: 100
- id: '1717956396987'
  alias: Open Windows Timers
  description: ''
  triggers:
  - event_type: timer.finished
    event_data:
      entity_id: timer.breakfast_room_timer
    id: Breakfast Room
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.living_room_timer
    id: Living Room
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.guest_bedroom_timer
    id: Guest Bedroom
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.eleanor_room_timer
    id: Eleanor Room
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.michael_room_timer
    id: Michael Room
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.kids_bathroom_timer
    id: Kids Bathroom
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.master_bathroom_timer
    id: Master Bathroom
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.master_bathroom_presence_timer
    id: Master Bathroom
    trigger: event
  - event_type: timer.finished
    event_data:
      entity_id: timer.master_bedroom_timer
    id: Master Bedroom
    trigger: event
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Breakfast Room
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.breakfast_room_window
            switches:
            - binary_sensor.breakfast_room_closed_brightness
            - binary_sensor.west_windows_closed_temperature
            action: Open
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.breakfast_room_window
            action: Closed Down
          action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Living Room
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.living_room_left_window
            - cover.living_room_right_window
            switches:
            - binary_sensor.living_room_closed_brightness
            - binary_sensor.living_room_closed_tv
            - binary_sensor.west_windows_closed_temperature
            action: Open
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.living_room_left_window
            - cover.living_room_right_window
            action: Closed Down
          action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Guest Bedroom
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - parallel:
          - metadata: {}
            data:
              entities:
              - cover.guest_bedroom_south_window
              switches:
              - binary_sensor.guest_south_closed_temperature
              action: Open
            action: script.window_position
          - metadata: {}
            data:
              entities:
              - cover.guest_bedroom_left_window
              - cover.guest_bedroom_right_window
              switches:
              - binary_sensor.guest_bedroom_presence_presence_sensor_1
              - binary_sensor.west_windows_closed_temperature
              action: Open
            action: script.window_position
        else:
        - parallel:
          - metadata: {}
            data:
              entities:
              - cover.guest_bedroom_south_window
              action: Closed Down
            action: script.window_position
          - metadata: {}
            data:
              entities:
              - cover.guest_bedroom_left_window
              - cover.guest_bedroom_right_window
              action: Closed Down
            action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Eleanor Room
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.kids_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.eleanor_room_window
            switches:
            - binary_sensor.eleanor_closed_presence
            - binary_sensor.west_windows_closed_temperature
            action: Open
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.eleanor_room_window
            action: Closed Down
          action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Michael Room
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.kids_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.michael_room_window
            switches:
            - binary_sensor.michael_closed_presence
            - binary_sensor.west_windows_closed_temperature
            action: Open
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.michael_room_window
            action: Closed Down
          action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Kids Bathroom
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.kids_bathroom_window
            switches:
            - binary_sensor.kids_bathroom_closed_presence
            action: Open
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.kids_bathroom_window
            action: Closed Down
          action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Master Bathroom
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        then:
        - metadata: {}
          data:
            entities:
            - cover.master_bathroom_left_window
            - cover.master_bathroom_right_window
            switches:
            - binary_sensor.master_bathroom_closed_presence
            - binary_sensor.master_bathroom_closed_button
            action: Open
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.master_bathroom_left_window
            - cover.master_bathroom_right_window
            action: Closed Down
          action: script.window_position
    - conditions:
      - condition: trigger
        id:
        - Master Bedroom
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.all_windows
          state: 'on'
        - condition: time
          before: '18:00:00'
        then:
        - metadata: {}
          data:
            entities:
            - cover.master_bedroom_left_window
            - cover.master_bedroom_right_window
            action: Open
          action: script.window_position
        else:
        - metadata: {}
          data:
            entities:
            - cover.master_bedroom_left_window
            - cover.master_bedroom_right_window
            action: Closed Down
          action: script.window_position
  mode: single
- id: '1717978197130'
  alias: Dishwasher
  description: ''
  triggers:
  - at: '21:24:00'
    trigger: time
    id: Start Time
  - trigger: homeassistant
    event: start
    id: HA Start
  - trigger: state
    entity_id:
    - sensor.dishwasher_operation_state
    id: Finished
    from: run
    to: finished
  - trigger: state
    entity_id:
    - sensor.dishwasher_door
    to: open
    id: Opened
  - trigger: time_pattern
    hours: /3
    id: Reload
  - trigger: state
    entity_id:
    - switch.dishwasher_power
    to: unavailable
    id: Reload
    enabled: true
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Finished
      sequence:
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.dishwasher_ready
    - conditions:
      - condition: trigger
        id:
        - Opened
      - condition: state
        entity_id: input_boolean.dishwasher_ready
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.dishwasher_ready
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Start Time
        - condition: and
          conditions:
          - condition: trigger
            id: HA Start
          - condition: template
            value_template: '{% set due = today_at(''21:24:00'') %} {% set last =
              state_attr(this.entity_id, ''last_triggered'') %} {{ now() > due and
              (last is none or last < due) }}

              '
      - condition: state
        entity_id: input_boolean.dishwasher_ready
        state: 'on'
      sequence:
      - if:
        - condition: state
          entity_id: sensor.dishwasher_door
          state: open
        then:
        - action: notify.mobile_app_pixel_9_pro_xl
          data:
            title: Dishwasher
            message: Dishwasher door is open!
            data:
              push:
                interruption-level: critical
                ttl: 0
                priority: high
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Dishwasher
            message: Dishwasher door is open!
            data:
              push:
                interruption-level: critical
                ttl: 0
                priority: high
      - wait_template: '{{ is_state(''sensor.dishwasher_door'', ''closed'') }}'
        continue_on_timeout: true
        timeout: 0:30:00
      - if:
        - condition: state
          entity_id: switch.dishwasher_power
          state: 'off'
        then:
        - action: switch.turn_on
          target:
            entity_id: switch.dishwasher_power
        - delay: 00:01:00
        - wait_template: '{{ is_state(''switch.dishwasher_power'', ''on'') }}'
          continue_on_timeout: true
      - action: select.select_option
        target:
          entity_id: select.dishwasher_active_program
        data:
          option: dishcare_dishwasher_program_auto_2
      - delay: 00:05:00
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: sensor.dishwasher_operation_state
            state: run
        then:
        - action: notify.mobile_app_pixel_9_pro_xl
          data:
            title: Dishwasher
            message: Unable to start dishwasher!
            data:
              push:
                interruption-level: critical
                ttl: 0
                priority: high
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Dishwasher
            message: Unable to start dishwasher!
            data:
              push:
                interruption-level: critical
                ttl: 0
                priority: high
    - conditions:
      - condition: trigger
        id:
        - Reload
      sequence:
      - if:
        - condition: state
          entity_id: timer.dishwasher_reload
          state: active
        then:
        - stop: Reload timer
      - action: homeassistant.reload_config_entry
        target:
          device_id: 6f12ad210cb6fef870433036dae2c1bd
      - delay: 00:01:00
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: sensor.dishwasher_door
            state: unavailable
          - condition: state
            entity_id: switch.dishwasher_power
            state: unavailable
        then:
        - action: notify.mobile_app_pixel_9_pro_xl
          data:
            title: Dishwasher
            message: Something wrong with dishwasher integration!
            data:
              push:
                interruption-level: critical
                ttl: 0
                priority: high
        - action: notify.mobile_app_ashleys_iphone
          data:
            title: Dishwasher
            message: Something wrong with dishwasher integration!
            data:
              push:
                interruption-level: critical
                ttl: 0
                priority: high
          enabled: false
      - action: timer.start
        target:
          entity_id: timer.dishwasher_reload
  mode: queued
  trace:
    stored_traces: 1000
  max: 10
- id: '1722333401098'
  alias: Temperature Target
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.evening
    - binary_sensor.dark_outside
    - input_number.a_c_target
    - binary_sensor.daytime
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.dark_outside
        state: 'off'
      sequence:
      - target:
          entity_id: input_number.downstairs_temperature
        data:
          value: '{{ states(''input_number.a_c_target'') }}'
        action: input_number.set_value
    - conditions:
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'off'
      - condition: state
        entity_id: binary_sensor.evening
        state: 'off'
        enabled: false
      sequence:
      - target:
          entity_id: input_number.downstairs_temperature
        data:
          value: '{{ states(''input_number.a_c_target'')|int + 2 }}'
        action: input_number.set_value
  mode: single
- id: '1723291193109'
  alias: Outlet Alarms
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
    minutes: '8'
  condition: []
  action:
  - if:
    - condition: state
      entity_id: switch.freezer_outlet
      state: 'off'
      for:
        hours: 0
        minutes: 15
        seconds: 0
    then:
    - action: notify.mobile_app_pixel_9_pro_xl
      metadata: {}
      data:
        title: Basement Freezer
        message: 'Warning: Freezer outlet is off!'
        data:
          push:
            interruption-level: critical
            ttl: 0
            priority: high
  - if:
    - condition: state
      entity_id: switch.water_heater_outlet
      state: 'off'
      for:
        hours: 0
        minutes: 15
        seconds: 0
    then:
    - action: notify.mobile_app_pixel_9_pro_xl
      metadata: {}
      data:
        message: 'Warning: Water heater outlet is off!'
        title: Water Heater
        data:
          push:
            interruption-level: critical
            ttl: 0
            priority: high
  - if:
    - condition: state
      entity_id: switch.dehumidifier_outlet
      state: 'off'
      for:
        hours: 0
        minutes: 15
        seconds: 0
    then:
    - action: notify.mobile_app_pixel_9_pro_xl
      metadata: {}
      data:
        message: 'Warning: Basement dehumidifier outlet is off!'
        title: Basement Dehumidifier
        data:
          push:
            interruption-level: critical
            ttl: 0
            priority: high
  - if:
    - condition: state
      entity_id: switch.dryer
      state: 'off'
      for:
        hours: 0
        minutes: 15
        seconds: 0
    then:
    - action: notify.mobile_app_pixel_9_pro_xl
      metadata: {}
      data:
        message: 'Warning: Dryer outlet is off!'
        title: Dryer Outlet
        data:
          push:
            interruption-level: critical
            ttl: 0
            priority: high
  mode: single
- id: '1724344753529'
  alias: Late Night Out
  description: ''
  triggers:
  - device_id: 16344a01ee262cbe905f83f476fa46c2
    domain: device_tracker
    entity_id: 5901843d95bd30f1922cbb3ecbdb67c2
    type: enters
    zone: zone.home
    trigger: device
  - device_id: 045c6e3f4a803de14d798fe274ade9d9
    domain: device_tracker
    entity_id: 5ceeb96ddd48a6aa3e4cbc4cc534cce9
    type: enters
    trigger: device
    zone: zone.home
  conditions:
  - condition: state
    entity_id: binary_sensor.dark_outside
    state: 'on'
  actions:
  - action: script.turn_on
    metadata: {}
    data: {}
    target:
      entity_id:
      - script.turn_on_exterior_lights
      - script.turn_on_interior_lights
  - device_id: feb41ed109a272e0e43e683fc809f09f
    domain: cover
    entity_id: edc2419f8848486ac424927164837f0c
    type: open
  - device_id: 6c9aed40494e1b52b2cf82d499f60d0b
    domain: lock
    entity_id: 8faf28ebb01ba5cb31620ba6fea47dcf
    type: unlock
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - if:
    - condition: state
      entity_id: binary_sensor.daytime
      state: 'off'
    - condition: state
      entity_id: binary_sensor.evening
      state: 'off'
    then:
    - action: script.turn_on
      metadata: {}
      data: {}
      target:
        entity_id:
        - script.turn_off_exterior_lights
        - script.turn_off_interior_lights
  - device_id: feb41ed109a272e0e43e683fc809f09f
    domain: cover
    entity_id: edc2419f8848486ac424927164837f0c
    type: close
  - device_id: 6c9aed40494e1b52b2cf82d499f60d0b
    domain: lock
    entity_id: 8faf28ebb01ba5cb31620ba6fea47dcf
    type: lock
  mode: single
- id: '1724715439449'
  alias: Kitchen Hub Playing
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.kitchen_closed_hub
    for:
      hours: 0
      minutes: 0
      seconds: 10
    to: 'on'
    trigger: state
  - entity_id:
    - binary_sensor.kitchen_closed_hub
    for:
      hours: 0
      minutes: 5
      seconds: 0
    to: 'off'
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.kitchen_closed_hub
      state: 'on'
    then:
    - if:
      - condition: state
        entity_id: input_boolean.all_windows
        state: 'on'
      then:
      - action: script.window_position
        data:
          entities:
          - cover.kitchen_right_window
          action: Closed Up
          reason: Device
    else:
    - if:
      - condition: state
        entity_id: input_boolean.all_windows
        state: 'on'
      then:
      - action: script.window_position
        data:
          entities:
          - cover.kitchen_right_window
          action: Open
          switches:
          - binary_sensor.kitchen_closed_brightness
          - binary_sensor.kitchen_closed_hub
      else:
      - action: script.window_position
        data:
          entities:
          - cover.kitchen_right_window
          action: Closed Down
          reason: Device
  mode: queued
  trace:
    stored_traces: 100
  max: 10
- id: '1725015230057'
  alias: Interior Lights
  description: ''
  triggers:
  - entity_id:
    - sensor.light_sensor_illuminance
    above: 300
    trigger: numeric_state
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - entity_id:
    - sensor.light_sensor_illuminance
    below: 300
    trigger: numeric_state
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - entity_id:
    - binary_sensor.daytime
    to: 'on'
    trigger: state
  - entity_id:
    - binary_sensor.evening
    to: 'off'
    trigger: state
  - trigger: homeassistant
    event: start
  conditions: []
  actions:
  - wait_template: '{{ is_state(''timer.interior_lights_timer'', ''idle'') }}'
    continue_on_timeout: true
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.light_sensor_illuminance
        below: 300
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.daytime
          state: 'on'
        - condition: state
          entity_id: binary_sensor.evening
          state: 'on'
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: script.turn_on_interior_lights
        action: script.turn_on
    - conditions:
      - condition: numeric_state
        entity_id: sensor.light_sensor_illuminance
        above: 300
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'on'
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: script.turn_off_interior_lights
        action: script.turn_on
    - conditions:
      - condition: numeric_state
        entity_id: sensor.light_sensor_illuminance
        below: 300
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'off'
      - condition: state
        entity_id: binary_sensor.evening
        state: 'off'
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: script.turn_off_interior_lights
        action: script.turn_on
  - action: timer.start
    metadata: {}
    data:
      duration: 0:05:00
    target:
      entity_id: timer.interior_lights_timer
  mode: queued
  trace:
    stored_traces: 100
  max: 10
- id: '1725097305049'
  alias: Daytime Override
  description: ''
  triggers:
  - entity_id:
    - schedule.daytime
    to: 'on'
    trigger: state
    id: Daytime On
  - entity_id:
    - schedule.daytime
    to: 'off'
    trigger: state
    id: Daytime Off
  - topic: site/home/devices/zigbee2mqtt/Master Bedroom Window Button/action
    payload: single
    trigger: mqtt
    id: Button
  - topic: site/home/devices/zigbee2mqtt/Master Bathroom Window Button/action
    payload: single
    trigger: mqtt
    id: Button
  - topic: site/home/devices/zigbee2mqtt/Breakfast Room Window Button/action
    payload: single
    trigger: mqtt
    id: Button
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Daytime On
        - Daytime Off
      sequence:
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.daytime_override
    - conditions:
      - condition: trigger
        id:
        - Button
      - condition: state
        entity_id: binary_sensor.daytime
        state: 'off'
      sequence:
      - variables:
          action_yes: '{{ ''YES_'' ~ context.id }}'
          action_no: '{{ ''NO_'' ~ context.id }}'
      - action: notify.mobile_app_pixel_9_pro_xl
        data:
          data:
            actions:
            - action: '{{ action_yes }}'
              title: 'Yes'
            - action: '{{ action_no }}'
              title: 'No'
          title: Daytime Override
          message: Daytime Override activated. Did you mean to do this?
      - wait_for_trigger:
        - event_type: mobile_app_notification_action
          event_data:
            action: '{{ action_yes }}'
          trigger: event
        - event_type: mobile_app_notification_action
          event_data:
            action: '{{ action_no }}'
          trigger: event
        timeout:
          minutes: 30
      - if:
        - condition: template
          value_template: '{{ wait.trigger.event.data.action == action_yes }}'
        then:
        - action: input_boolean.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.daytime_override
  mode: single
- id: '1725814750087'
  alias: Fish Tank Light
  description: ''
  triggers:
  - at: 06:00:00
    trigger: time
  - at: '18:00:00'
    trigger: time
  - entity_id:
    - switch.fish_tank_light_outlet
    from: unavailable
    trigger: state
  - entity_id:
    - switch.fish_tank_light_outlet
    from: unknown
    trigger: state
  - event: start
    trigger: homeassistant
  conditions: []
  actions:
  - if:
    - condition: time
      after: 06:00:00
      before: '18:00:00'
    then:
    - action: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.fish_tank_light_outlet
    else:
    - action: switch.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: switch.fish_tank_light_outlet
  mode: single
- id: '1726506936783'
  alias: Aaron Location Tracker
  description: Updates Aaron's virtual device_tracker from composite location.
  triggers:
  - entity_id: sensor.aaron_composite_location
    trigger: state
  - trigger: homeassistant
    event: start
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ lat is not none and lon is not none }}'
      sequence:
      - data:
          dev_id: aaron_helper_tracker
          source_type: gps
          gps:
          - '{{ lat }}'
          - '{{ lon }}'
          gps_accuracy: '{{ acc | int(0) }}'
          attributes:
            source_entity: '{{ src }}'
            last_updated: '{{ (now() | as_local).isoformat() }}'
        action: device_tracker.see
    default:
    - data:
        dev_id: aaron_helper_tracker
        location_name: not_home
        attributes:
          source_entity: '{{ src }}'
          last_updated: '{{ (now() | as_local).isoformat() }}'
      action: device_tracker.see
  mode: restart
  variables:
    lat: '{{ state_attr(''sensor.aaron_composite_location'',''latitude'')      | float(default=none)
      }}'
    lon: '{{ state_attr(''sensor.aaron_composite_location'',''longitude'')     | float(default=none)
      }}'
    acc: '{{ state_attr(''sensor.aaron_composite_location'',''gps_accuracy'')  | float(0)
      }}'
    src: '{{ state_attr(''sensor.aaron_composite_location'',''source_entity'') | string
      }}'
- id: '1729861910506'
  alias: Shop Lights
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.dark_outside
    to:
  - trigger: state
    entity_id:
    - binary_sensor.daytime
    to:
  - trigger: state
    entity_id:
    - input_select.plant_location
    to:
  - trigger: state
    entity_id:
    - binary_sensor.shop_lights_input_0_input
  - trigger: state
    entity_id:
    - binary_sensor.shop_lights_input_0_input
    from: 'off'
    to: 'on'
    id: Switched
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Switched
      sequence:
      - action: switch.turn_on
        target:
          entity_id: switch.shop_lights_switch_0
        data: {}
    - conditions:
      - condition: state
        entity_id: input_select.plant_location
        state: Inside
      - condition: state
        entity_id: binary_sensor.dark_outside
        state: 'off'
      sequence:
      - action: switch.turn_on
        target:
          entity_id: switch.shop_lights_switch_0
        data: {}
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.shop_lights_input_0_input
          state: 'off'
        - condition: state
          entity_id: binary_sensor.daytime
          state: 'off'
      sequence:
      - action: switch.turn_off
        target:
          entity_id: switch.shop_lights_switch_0
        data: {}
  mode: single
- id: '1729965425028'
  alias: Wind Clock
  description: ''
  triggers:
  - trigger: time
    at: '18:50:00'
  conditions:
  - condition: template
    value_template: '{{ (now() - states.automation.wind_clock.attributes.last_triggered|as_datetime).total_seconds()
      >= 2.5*3600*24 }}'
  actions:
  - action: notify.aaron_and_ashley_phones
    metadata: {}
    data:
      title: Grandfather Clock
      message: Wind and set grandfather clock!
  mode: single
- id: '1730027981405'
  alias: Fish Water
  description: ''
  triggers:
  - trigger: time
    at: '15:00:00'
  conditions:
  - condition: time
    weekday:
    - sun
  - condition: template
    value_template: '{{ (now() - states.automation.fish_water.attributes.last_triggered|as_datetime).total_seconds()
      >= 7*3600*24 }}'
  actions:
  - action: notify.aaron_and_ashley_phones
    metadata: {}
    data:
      title: Fish Tank
      message: Change fish water!
      data:
        push:
          ttl: 0
          priority: high
  - if:
    - condition: template
      value_template: '{{ now().day <= 7 }}'
    then:
    - action: notify.aaron_and_ashley_phones
      metadata: {}
      data:
        title: Fish Tank
        message: Change fish tank filter!
        data:
          push:
            ttl: 0
            priority: high
  mode: single
- id: '1730055873597'
  alias: Mouse Trap
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.new_trap_capture
    to: 'on'
  - trigger: numeric_state
    entity_id:
    - sensor.new_trap_battery_level
    below: 10
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.new_trap_capture
      state: 'on'
    then:
    - action: notify.mobile_app_ashleys_iphone
      data:
        title: Mouse Trap
        message: Mouse caught!
    - action: notify.mobile_app_l144jy6rmq_iphone
      data:
        title: Mouse Trap
        message: Mouse caught!
    - action: notify.mobile_app_pixel_9_pro_xl
      data:
        title: Mouse Trap
        message: Mouse caught!
    - wait_template: '{{ is_state(''schedule.daytime'', ''on'') }}'
      continue_on_timeout: true
  - if:
    - condition: numeric_state
      entity_id: sensor.new_trap_battery_level
      below: 10
    then:
    - action: notify.aaron_phones
      metadata: {}
      data:
        title: Mouse Trap
        message: Replace mouse trap batteries
        data:
          push:
            interruption-level: critical
            ttl: 0
            priority: high
  mode: single
- id: '1730769553572'
  alias: 'Power Outage '
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.cyberpower850_status
    to: discharging
  conditions: []
  actions:
  - action: notify.aaron_and_ashley_phones
    metadata: {}
    data:
      message: Power outage detected! Check air purifiers, humidifier, and space heaters.
      title: Power Outage
      data:
        push:
          interruption-level: critical
          ttl: 0
          priority: high
  mode: single
- id: '1734815601637'
  alias: Guests Arrived
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - input_boolean.guest_bedroom_occupied
    - input_boolean.study_occupied
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: input_boolean.guest_bedroom_occupied
      state: 'on'
    then:
    - action: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.guest_bedroom_lamp_socket_1
  - if:
    - condition: state
      entity_id: input_boolean.study_occupied
      state: 'on'
    then:
    - action: light.turn_on
      metadata: {}
      data:
        brightness_pct: 100
      target:
        entity_id: light.study_lamp
  mode: single
- id: '1736339280770'
  alias: Prevent Circuit Breaker
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.none_4_1min
    above: 2000
    id: Power High
  - trigger: numeric_state
    entity_id:
    - sensor.none_4_1min
    below: 500
    id: Power Low
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Power High
      sequence:
      - action: climate.turn_off
        target:
          entity_id: climate.chicken_heat_lamp
    - conditions:
      - condition: trigger
        id:
        - Power Low
      sequence:
      - action: climate.turn_on
        target:
          entity_id: climate.chicken_heat_lamp
  mode: single
- id: '1737448864796'
  alias: Xiaomi Thermometer Battery Level
  description: ''
  triggers:
  - entity_id:
    - sensor.xaiomi_thermometer_battery_level
    below: 10
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: numeric_state
  conditions: []
  actions:
  - metadata: {}
    data:
      title: Xiaomi Thermometers
      message: '{% set entity = state_attr(''sensor.xaiomi_thermometer_battery_level'',
        ''min_entity_id'') %} {{ state_attr(entity, ''friendly_name'') }} is at {{
        states(entity, with_unit=True) }}!'
      data:
        push:
          interruption-level: critical
          ttl: 0
          priority: high
    action: notify.mobile_app_pixel_9_pro_xl
  mode: single
- id: '1737449702257'
  alias: Outdoor Thermometer Battery OK
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.outdoor_thermometer_battery
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  conditions: []
  actions:
  - metadata: {}
    data:
      title: Outdoor Thermometer
      message: Replace outdoor thermometer battery!
      data:
        push:
          interruption-level: critical
          ttl: 0
          priority: high
    action: notify.mobile_app_pixel_9_pro_xl
  mode: single
- id: '1737450643460'
  alias: Chicken Water Thermometer Battery OK
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.ambientweather_wh31e_1_167_battery
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  conditions: []
  actions:
  - metadata: {}
    data:
      title: Chicken Water Thermometer
      message: Replace chicken water thermometer battery!
      data:
        push:
          interruption-level: critical
          ttl: 0
          priority: high
    action: notify.mobile_app_pixel_9_pro_xl
  mode: single
- id: '1740620470289'
  alias: Nightly Reboot
  description: ''
  triggers:
  - trigger: time_pattern
    hours: '0'
    minutes: '30'
  conditions: []
  actions:
  - action: hassio.host_reboot
    metadata: {}
    data: {}
  mode: single
- id: '1743974906486'
  alias: Teams Meeting
  description: 'Sets meeting state automatically based on webcam activity, with manual
    button override as backup. Updates the input_boolean.in_a_teams_meeting and triggers
    related actions (pause media, toggle lamp) when meetings start or end.

    '
  triggers:
  - trigger: state
    entity_id: binary_sensor.webcam_running
    to: 'on'
    id: webcam_on
  - trigger: state
    entity_id: binary_sensor.webcam_running
    to: 'off'
    id: webcam_off
  actions:
  - variables:
      current: '{{ states(''input_boolean.in_a_teams_meeting'') }}'
      intended: "{% if trigger.id == 'webcam_on' %}\n  on\n{% elif trigger.id == 'webcam_off'
        %}\n  off\n{% elif trigger.id == 'button' %}\n  {% if current == 'on' %}\n
        \   off\n  {% else %}\n    on\n  {% endif %}\n{% else %}\n  {{ current }}\n{%
        endif %}"
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ intended != current }}'
      sequence:
      - action: input_boolean.turn_{{ intended }}
        target:
          entity_id: input_boolean.in_a_teams_meeting
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ intended == ''on'' }}'
      sequence:
      - if:
        - condition: state
          entity_id: media_player.study
          state: playing
        then:
        - action: media_player.media_pause
          target:
            entity_id: media_player.study
          data: {}
      - action: light.turn_on
        target:
          entity_id: light.study_lamp
        data: {}
        enabled: false
    - conditions:
      - condition: template
        value_template: '{{ intended == ''off'' }}'
      sequence:
      - action: light.turn_off
        target:
          entity_id: light.study_lamp
        data: {}
        enabled: false
  mode: single
- id: '1747133593742'
  alias: Home Alone
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - person.eleanor_watson
    - person.michael_watson
    to: School
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: Kids
  - trigger: state
    entity_id:
    - person.ashley_watson
    - person.aaron_watson
    to: home
    for:
      hours: 0
      minutes: 30
      seconds: 0
    id: Parents Home
  - trigger: state
    entity_id:
    - person.aaron_watson
    - person.ashley_watson
    from: home
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: Parents Away
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Kids
        - Parents Away
      - condition: state
        entity_id: input_boolean.home_alone
        state: 'off'
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: state
            entity_id: person.eleanor_watson
            state: home
          - condition: state
            entity_id: person.michael_watson
            state: School
        - condition: and
          conditions:
          - condition: state
            entity_id: person.michael_watson
            state: home
          - condition: state
            entity_id: person.eleanor_watson
            state: School
      - condition: not
        conditions:
        - condition: state
          entity_id: person.aaron_watson
          state: home
        - condition: state
          entity_id: person.ashley_watson
          state: home
      sequence:
      - variables:
          action_yes: '{{ ''YES_'' ~ context.id }}'
          action_no: '{{ ''NO_'' ~ context.id }}'
      - action: notify.mobile_app_pixel_9_pro_xl
        data:
          title: Home Alone
          message: Is someone home alone today?
          data:
            actions:
            - action: '{{ action_yes }}'
              title: 'Yes'
            - action: '{{ action_no }}'
              title: 'No'
      - action: notify.mobile_app_ashleys_iphone
        data:
          title: Home Alone
          message: Is someone home alone today? (Press and hold to respond)
          data:
            actions:
            - action: '{{ action_yes }}'
              title: 'Yes'
            - action: '{{ action_no }}'
              title: 'No'
      - wait_for_trigger:
        - event_type: mobile_app_notification_action
          event_data:
            action: '{{ action_yes }}'
          trigger: event
        - event_type: mobile_app_notification_action
          event_data:
            action: '{{ action_no }}'
          trigger: event
        timeout:
          minutes: 30
      - if:
        - condition: template
          value_template: '{{ wait.trigger.event.data.action == action_yes }}'
        then:
        - action: input_boolean.turn_on
          target:
            entity_id:
            - input_boolean.home_alone
          data: {}
          metadata: {}
        - delay:
            hours: 0
            minutes: 0
            seconds: 5
            milliseconds: 0
        - action: input_boolean.turn_on
          target:
            entity_id:
            - input_boolean.home_alone
          data: {}
          metadata: {}
    - conditions:
      - condition: trigger
        id:
        - Parents Home
      - condition: state
        entity_id: input_boolean.home_alone
        state: 'on'
      sequence:
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.home_alone
  mode: single
- id: '1747574542794'
  alias: Chicken Roosting Box
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.chicken_roosting
    to: 'off'
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: schedule.daytime
      state: 'on'
    - condition: state
      entity_id: schedule.evening
      state: 'on'
  actions:
  - if:
    - condition: template
      value_template: '{{ trigger.from_state.state | bool }}'
    then:
    - action: notify.mobile_app_ashleys_iphone
      metadata: {}
      data:
        title: Roosting Box
        message: Chicken has left the roosting box!
        data:
          push:
            interruption-level: critical
  mode: single
  trace:
    stored_traces: 100
- id: '1748461182023'
  alias: Kitchen Door
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.kitchen_door_contact
    to:
  - event_type: timer.finished
    event_data:
      entity_id: timer.kitchen_door_announce_timer
    trigger: event
  - trigger: state
    entity_id:
    - binary_sensor.kitchen_door_contact
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  conditions:
  - condition: state
    entity_id: binary_sensor.daytime
    state: 'on'
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.kitchen_door_contact
      state: 'on'
      for:
        hours: 0
        minutes: 5
        seconds: 0
    - condition: state
      entity_id: binary_sensor.living_room_door_contact
      state: 'off'
    - condition: template
      value_template: '{% set inside = states(''sensor.downstairs_thermostat_current_temperature'')
        | float(0) %} {% set outside = states(''sensor.outside_temperature_state'')
        | float(0) %} {% set diff = outside - inside %} {{ diff > 5 or diff < -10
        }}'
    then:
    - action: script.announce
      metadata: {}
      data:
        players:
        - media_player.announce_group
        message: Close the kitchen door!
    - action: timer.start
      metadata: {}
      data: {}
      target:
        entity_id: timer.kitchen_door_announce_timer
  mode: single
- id: '1748698958206'
  alias: Rain Sensor Unavailable
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.rainy
    to: unavailable
    for:
      hours: 0
      minutes: 15
      seconds: 0
  conditions: []
  actions:
  - action: notify.aaron_phones
    metadata: {}
    data:
      title: Rain Sensor
      message: Rain sensor unavailable!
  mode: single
- id: '1749491593018'
  alias: Weight
  description: ''
  triggers:
  - trigger: calendar
    entity_id: calendar.weight
    event: start
    offset: 0:0:0
  conditions: []
  actions:
  - variables:
      action_dismiss: '{{ ''DISMISS_'' ~ context.id }}'
  - action: notify.mobile_app_pixel_9_pro_xl
    data:
      message: Measure your weight and body fat.
      title: Weight
      data:
        actions:
        - action: '{{ action_dismiss }}'
          title: Dismiss
  - wait_for_trigger:
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_dismiss }}'
      trigger: event
    timeout:
      minutes: 30
    continue_on_timeout: false
  - if:
    - condition: template
      value_template: '{{ wait.trigger.event.data.action == action_dismiss }}'
    then: []
  mode: single
- id: '1750667975418'
  alias: Water Heater Boost
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.water_heater_hot_water_available
    below: 10
  conditions: []
  actions:
  - action: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.water_heater_boost
  mode: single
- id: parlor_humidifier_50pct_control
  alias: Parlor Humidifier, keep ~50%
  description: Turn humidifier off above 50%, on below 50%
  triggers:
  - entity_id: sensor.parlor_humidity
    above: 50
    for: 00:02:00
    trigger: numeric_state
  - entity_id: sensor.parlor_humidity
    below: 50
    for: 00:02:00
    trigger: numeric_state
  actions:
  - choose:
    - conditions: '{{ states(''sensor.parlor_humidity'')|float(0) > 50 }}'
      sequence:
      - target:
          entity_id: switch.parlor_humidifier
        action: switch.turn_off
    - conditions: '{{ states(''sensor.parlor_humidity'')|float(0) < 50 }}'
      sequence:
      - target:
          entity_id: switch.parlor_humidifier
        action: switch.turn_on
  mode: single
- id: '1757846645392'
  alias: Parlor Humidifier, keep ~50%
  description: Turn humidifier off above 50%, on below 50%
  triggers:
  - entity_id:
    - sensor.humidifier_humidity
    above: 50
    for:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
    trigger: numeric_state
  - entity_id:
    - sensor.humidifier_humidity
    below: 50
    for:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
    trigger: numeric_state
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ states(''sensor.humidifier_humidity'')|float(0) > 50 }}'
      sequence:
      - action: humidifier.turn_off
        target:
          entity_id: humidifier.humidifier
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ states(''sensor.humidifier_humidity'')|float(0) < 50 }}'
      sequence:
      - action: humidifier.turn_on
        target:
          entity_id: humidifier.humidifier
        data: {}
  mode: single
