{# # File: config/custom_templates/vpd.jinja ## #}
{# Macros for Vapor Pressure Deficit (VPD):
   - Inputs:
       • Air temperature (defaults to °F) and relative humidity (%)
       • Optional leaf temperature for leaf VPD
   - Outputs:
       • VPD in kPa, categories, icons, colors, descriptions
       • Stage-aware levels (seedling/veg/flower/general)
       • Labels, chips, advice
       • RH target for a desired VPD at a given temperature
#}

{% from 'helpers.jinja' import level_find, convert_temp_value %}

{# ========================= Core thermo helpers ========================= #}

{# Convert to °C using your helper (incoming temps default to °F) #}
{% macro to_c(t, unit='f') -%}
  {{ convert_temp_value(t, unit, 'c') }}
{%- endmacro %}

{# Saturation vapor pressure over water (kPa) at T°C (FAO-56 / Tetens) #}
{% macro es_kpa_c(tc) -%}
  {%- set T = tc|float -%}
  {%- set x = (17.27 * T) / (T + 237.3) -%}
  {{ 0.6108 * (2.718281828459045 ** x) }}
{%- endmacro %}

{# Actual vapor pressure (kPa) from T & RH% #}
{% macro ea_kpa(t, rh_pct, unit='f') -%}
  {%- set tc = to_c(t, unit)|float -%}
  {%- set rh = (0 if rh_pct|float < 0 else (100 if rh_pct|float > 100 else rh_pct|float)) -%}
  {{ es_kpa_c(tc) * (rh / 100.0) }}
{%- endmacro %}

{# Air VPD (kPa): deficit between saturation at air T and actual vapor pressure #}
{% macro vpd_kpa(t, rh_pct, unit='f') -%}
  {%- set tc = to_c(t, unit)|float -%}
  {%- set es = es_kpa_c(tc)|float -%}
  {%- set ea = ea_kpa(t, rh_pct, unit)|float -%}
  {%- set v = es - ea -%}
  {{ 0 if v < 0 else v }}
{%- endmacro %}

{# Leaf VPD (kPa): saturation at leaf T minus actual vapor pressure of ambient air #}
{% macro vpd_leaf_kpa(t_air, rh_pct, t_leaf, unit='f') -%}
  {%- set tlc = to_c(t_leaf, unit)|float -%}
  {%- set es_leaf = es_kpa_c(tlc)|float -%}
  {%- set ea = ea_kpa(t_air, rh_pct, unit)|float -%}
  {%- set v = es_leaf - ea -%}
  {{ 0 if v < 0 else v }}
{%- endmacro %}

{# RH (%) needed at temperature to achieve a target VPD (kPa) #}
{% macro rh_for_vpd(target_vpd_kpa, t, unit='f') -%}
  {%- set tc = to_c(t, unit)|float -%}
  {%- set es = es_kpa_c(tc)|float -%}
  {%- set v = target_vpd_kpa|float -%}
  {%- set rh = (1.0 - (v / (es if es>0 else 1e-9))) * 100.0 -%}
  {{ 0 if rh < 0 else (100 if rh > 100 else rh) }}
{%- endmacro %}

{# ========================= Stages & buckets ========================= #}
{# Breakpoints are lower bounds in kPa. We use stage-specific ranges:
   - Seedling/Clone: target ~0.4–0.8
   - Vegetative:     target ~0.8–1.2
   - Flower:         target ~1.2–1.6
   - General:        target ~0.8–1.2
#}
{% set bps_general  = [0, 0.40, 0.80, 1.20, 1.60, 2.00] %}
{% set bps_seedling = [0, 0.20, 0.40, 0.80, 1.20, 1.60] %}
{% set bps_veg      = [0, 0.40, 0.80, 1.20, 1.60, 2.00] %}
{% set bps_flower   = [0, 0.60, 1.20, 1.60, 2.00, 2.40] %}

{# Common category labels across stages (6 levels) #}
{% set names = ["Too Humid","Low","Optimal","High","Very High","Extreme"] %}
{% set shorts = ["Humid","Low","Opt","High","V High","X High"] %}
{% set longs = [
  "VPD: Too Humid (risk of mold/edema)",
  "VPD: Low (slow transpiration)",
  "VPD: Optimal (healthy gas exchange)",
  "VPD: High (faster transpiration)",
  "VPD: Very High (stress risk)",
  "VPD: Extreme (severe stress)"
] %}
{% set icons = [
  "mdi:water",            # Too Humid
  "mdi:water-percent",    # Low
  "mdi:leaf",             # Optimal
  "mdi:weather-windy",    # High
  "mdi:fire",             # Very High
  "mdi:alert-decagram"    # Extreme
] %}
{% set colors = [
  "#3b82f6",  # Too Humid (blue)
  "#60a5fa",  # Low
  "#22c55e",  # Optimal (green)
  "#eab308",  # High (amber)
  "#f97316",  # Very High (orange)
  "#ef4444",  # Extreme (red)
  "disabled"
] %}
{% set descriptions = [
  "Air is very humid; transpiration suppressed. Improve airflow or dehumidify.",
  "On the humid side; acceptable for seedlings/clones.",
  "In the sweet spot for the selected stage.",
  "Dry side; increase RH or reduce temperature.",
  "Very dry; leaf stress likely—raise RH, lower temperature.",
  "Extremely dry; immediate action needed."
] %}

{# Select bucket set by stage #}
{% macro _pick_bps(stage='general') -%}
  {%- set s = (stage|string|lower) -%}
  {%- if s in ['seed','seedling','clone','clones'] -%}seedling
  {%- elif s in ['veg','vegetative'] -%}veg
  {%- elif s in ['flower','bloom'] -%}flower
  {%- else -%}general
  {%- endif -%}
{%- endmacro %}

{% macro level_from_value(vpd_kpa_value, stage='general') -%}
  {%- set which = _pick_bps(stage) -%}
  {%- if which == 'seedling' -%}
    {{ level_find(vpd_kpa_value|float, bps_seedling) }}
  {%- elif which == 'veg' -%}
    {{ level_find(vpd_kpa_value|float, bps_veg) }}
  {%- elif which == 'flower' -%}
    {{ level_find(vpd_kpa_value|float, bps_flower) }}
  {%- else -%}
    {{ level_find(vpd_kpa_value|float, bps_general) }}
  {%- endif -%}
{%- endmacro %}

{# ========================= Wrappers (by temp/RH) ========================= #}
{% macro level(t, rh_pct, unit='f', stage='general') -%}
  {{ level_from_value(vpd_kpa(t, rh_pct, unit)|float, stage) }}
{%- endmacro %}

{# djlint:off #}
{% macro name(t, rh_pct, unit='f', stage='general') %}{{ names[level(t, rh_pct, unit, stage)|int - 1] }}{% endmacro %}
{% macro short(t, rh_pct, unit='f', stage='general') %}{{ shorts[level(t, rh_pct, unit, stage)|int - 1] }}{% endmacro %}
{% macro long(t, rh_pct, unit='f', stage='general') %}{{ longs[level(t, rh_pct, unit, stage)|int - 1] }}{% endmacro %}
{% macro icon(t, rh_pct, unit='f', stage='general') %}{{ icons[level(t, rh_pct, unit, stage)|int - 1] }}{% endmacro %}
{% macro color(t, rh_pct, unit='f', stage='general') %}{{ colors[level(t, rh_pct, unit, stage)|int - 1] }}{% endmacro %}
{% macro desc(t, rh_pct, unit='f', stage='general') %}{{ descriptions[level(t, rh_pct, unit, stage)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# ========================= Quality & bars ========================= #}
{# Compute a simple quality %: 100% inside target window; linearly drop to 0 at caps #}
{% macro _target_bounds(stage='general') -%}
  {%- set which = _pick_bps(stage) -%}
  {%- if which == 'seedling' -%}[0.40, 0.80]
  {%- elif which == 'veg' -%}[0.80, 1.20]
  {%- elif which == 'flower' -%}[1.20, 1.60]
  {%- else -%}[0.80, 1.20]
  {%- endif -%}
{%- endmacro %}

{% macro quality_pct(vpd_value, stage='general', cap_low=0.0, cap_high=2.5) -%}
  {%- set v = vpd_value|float -%}
  {%- set b = _target_bounds(stage) -%}
  {# 'b' renders as text; unpack by splitting #}
  {%- set low = (b|string).strip('[]').split(',')[0]|float -%}
  {%- set high = (b|string).strip('[]').split(',')[1]|float -%}
  {%- if v >= low and v <= high -%}
    100
  {%- elif v < low -%}
    {%- set q = 100.0 * ( (v - (cap_low|float)) / ( (low - (cap_low|float)) if (low - (cap_low|float))>0 else 1e-9 ) ) -%}
    {{ 0 if q < 0 else q }}
  {%- else -%}
    {%- set q = 100.0 * ( ((cap_high|float) - v) / ( ((cap_high|float) - high) if ((cap_high|float) - high)>0 else 1e-9 ) ) -%}
    {{ 0 if q < 0 else q }}
  {%- endif -%}
{%- endmacro %}

{% macro bars_from_quality(qpct) -%}
  {%- set p = qpct|float -%}
  {%- if p < 10 -%}0
  {%- elif p < 35 -%}1
  {%- elif p < 60 -%}2
  {%- elif p < 85 -%}3
  {%- else -%}4
  {%- endif -%}
{%- endmacro %}

{% macro bars(t, rh_pct, unit='f', stage='general') -%}
  {%- set v = vpd_kpa(t, rh_pct, unit)|float -%}
  {{ bars_from_quality(quality_pct(v, stage)) }}
{%- endmacro %}

{# ========================= Labels & chips ========================= #}
{% macro label(t, rh_pct, unit='f', stage='general') -%}
  {%- set v = vpd_kpa(t, rh_pct, unit)|float -%}
  {{ name(t, rh_pct, unit, stage) }} • {{ v|round(2) }} kPa • T {{ (convert_temp_value(to_c(t, unit), 'c', 'f')|round(0)) }}°F • RH {{ (rh_pct|float)|round(0) }}%
{%- endmacro %}

{% macro chip(t, rh_pct, unit='f', stage='general') -%}
  {%- set v = vpd_kpa(t, rh_pct, unit)|float -%}
  VPD {{ v|round(2) }} kPa • {{ short(t, rh_pct, unit, stage) }}
{%- endmacro %}

{% macro leaf_label(t_air, rh_pct, t_leaf, unit='f', stage='general') -%}
  {%- set v = vpd_leaf_kpa(t_air, rh_pct, t_leaf, unit)|float -%}
  Leaf VPD • {{ v|round(2) }} kPa (leaf {{ (convert_temp_value(to_c(t_leaf, unit),'c','f')|round(0)) }}°F, air {{ (convert_temp_value(to_c(t_air, unit),'c','f')|round(0)) }}°F, RH {{ (rh_pct|float)|round(0) }}%)
{%- endmacro %}

{% macro target_rh_label(target_vpd, t, unit='f', stage='general') -%}
  {%- set rh = rh_for_vpd(target_vpd, t, unit)|float -%}
  Target RH for {{ target_vpd|round(2) }} kPa @ {{ (convert_temp_value(to_c(t, unit), 'c', 'f')|round(0)) }}°F: ~{{ rh|round(0) }}% ({{ stage }})
{%- endmacro %}

{# ========================= Guidance ========================= #}
{% macro advice(t, rh_pct, unit='f', stage='general') -%}
  {%- set L = level(t, rh_pct, unit, stage)|int -%}
  {%- if L == 1 -%}
    Air too humid—raise temperature slightly, increase airflow, or dehumidify.
  {%- elif L == 2 -%}
    Slightly humid—fine for seedlings; otherwise increase VPD by lowering RH or raising temperature.
  {%- elif L == 3 -%}
    Perfect for {{ stage }}. Maintain airflow and stable RH.
  {%- elif L == 4 -%}
    On the dry side—lower temperature a bit or add humidity.
  {%- elif L == 5 -%}
    Very dry—humidify and/or lower temperature; watch for leaf curl.
  {%- else -%}
    Extreme deficit—humidify immediately, reduce heat, and protect sensitive plants.
  {%- endif -%}
{%- endmacro %}

{# ========================= Trends ========================= #}
{% macro delta_vpd(curr_t, curr_rh, prev_t, prev_rh, unit='f') -%}
  {{ vpd_kpa(curr_t, curr_rh, unit)|float - vpd_kpa(prev_t, prev_rh, unit)|float }}
{%- endmacro %}

{% macro trend_label(curr_t, curr_rh, prev_t, prev_rh, unit='f') -%}
  {%- set d = (vpd_kpa(curr_t, curr_rh, unit)|float - vpd_kpa(prev_t, prev_rh, unit)|float) -%}
  {%- if d > 0.05 -%}
    Rising (+{{ d|round(2) }} kPa)
  {%- elif d < -0.05 -%}
    Falling ({{ d|round(2) }} kPa)
  {%- else -%}
    Stable
  {%- endif -%}
{%- endmacro %}
