{%- macro wx_condition(code, is_day=true) -%}
    {%- if code in [0,1] -%}{{ 'sunny' if is_day else 'clear-night' }}
    {%- elif code in [2] -%}partlycloudy
    {%- elif code in [3] -%}cloudy
    {%- elif code in [45,48] -%}fog
    {%- elif code in [51,53,55,56,57,61,63,66,80,81] -%}rainy
    {%- elif code in [65,67,82] -%}pouring
    {%- elif code in [71,73,75,77,85,86] -%}snowy
    {%- elif code in [95,96,99] -%}lightning
    {%- else -%}unknown
    {%- endif -%}
{%- endmacro -%}

{%- macro uv_factor_sigmoid(c) -%}
    {%- set L = 1.0 -%}
    {%- set x0 = 81.0837 -%}
    {%- set k = -0.0897371 -%}
    {%- set denom = 1 + (2.718281828459045 ** (-k * ((c|float(0)) - x0))) -%}
    {{ L / denom }}
{%- endmacro -%}

{% macro convert_temp(value, from_unit, to_unit) %}
  {%- set v = value | float(0) %}
  {%- set from_unit = from_unit | lower %}
  {%- set to_unit = to_unit | lower %}

  {#--- Normalize everything to Kelvin ---#}
  {%- if from_unit in ['k', 'kelvin'] %}
    {%- set k = v %}
  {%- elif from_unit in ['c', '째c', 'celsius'] %}
    {%- set k = v + 273.15 %}
  {%- elif from_unit in ['f', '째f', 'fahrenheit'] %}
    {%- set k = (v - 32) * 5/9 + 273.15 %}
  {%- else %}
    {{ 'unknown from_unit' }}
  {%- endif %}

  {#--- Convert Kelvin to target ---#}
  {%- if to_unit in ['k', 'kelvin'] %}
    {{ k }}
  {%- elif to_unit in ['c', '째c', 'celsius'] %}
    {{ (k - 273.15) | round(2) }}
  {%- elif to_unit in ['f', '째f', 'fahrenheit'] %}
    {{ ((k - 273.15) * 9/5 + 32) | round(2) }}
  {%- else %}
    {{ 'unknown to_unit' }}
  {%- endif %}
{% endmacro %}

{% macro entity_temp(eid) %}
    {%- set val = states(eid) -%}
    {%- set unit = state_attr(eid,'unit_of_measurement') -%}
    {% set t = convert_temp(val, unit or 'c', 'c') | float(0) %}
    {{ t | round(1) }}
{% endmacro %}

{%- macro abs(x) -%}
  {%- set x = x | float(0) -%}
  {{ iif(x < 0, -x, x) }}
{%- endmacro -%}

{# Smart formatter with integer-only rule, sig figs, and commas #}
{% macro smartfmt(x) -%}
  {%- set v = x | float(none) -%}
  {%- if v is not number -%}{{ x }}{%- else -%}
    {%- set sign = '-' if v < 0 else '' -%}
    {%- set a = v | abs -%}
    {%- set s = ("%0.15f") | format(a) -%}
    {%- set parts = s.split('.') -%}
    {%- set int = parts[0] -%}
    {%- set frac = parts[1] -%}
    {%- set int_nz = int.lstrip('0') -%}
    {%- set D = int_nz | length -%}

    {# Keep integer only if: starts with 1 and D>3, or starts not 1 and D>2 #}
    {%- set keep_int_only = (D>3 and (D>0 and int_nz[0]=='1')) or (D>2 and (D==0 or int_nz[0] != '1')) -%}

    {%- if keep_int_only -%}
      {{ sign ~ '{:,}'.format(int|int) }}
    {%- else -%}
      {# Determine decimal places from sig-fig rule #}
      {%- if D >= 1 -%}
        {%- set first_sig = int_nz[0] -%}
        {%- set L = 4 if first_sig == '1' else 3 -%}
        {%- set decimals = L - D -%}
      {%- else -%}
        {# first sig digit in fraction #}
        {%- set k = -1 -%}
        {%- for i in range(frac|length) -%}
          {%- if k == -1 and frac[i] != '0' -%}{%- set k = i -%}{%- endif -%}
        {%- endfor -%}
        {%- if k == -1 -%}
          {{ '0' }}{%- set decimals = none -%}
        {%- else -%}
          {%- set first_sig = frac[k] -%}
          {%- set L = 4 if first_sig == '1' else 3 -%}
          {%- set decimals = k + L -%}
        {%- endif -%}
      {%- endif -%}

      {%- if decimals is not none -%}
        {%- set out = ("%." ~ (decimals if decimals > 0 else 0) ~ "f") | format(a) -%}
        {%- set op = out.split('.') -%}
        {%- if op|length == 1 -%}
          {%- set i = op[0] -%}
          {{ sign ~ ('{:,}'.format(i|int) if (i|int) >= 1000 else i) }}
        {%- else -%}
          {%- set i = op[0] -%}
          {%- set f = op[1].rstrip('0') -%}
          {%- set i2 = ('{:,}'.format(i|int) if (i|int) >= 1000 else i) -%}
          {{ sign ~ i2 ~ ('.' ~ f if f else '') }}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
  {%- endif -%}
{%- endmacro %}
