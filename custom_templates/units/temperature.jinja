{# Temperature conversion utilities #}

{% macro normalize_unit(unit) -%}
    {# Normalize unit string to standard format #}
    {%- set u = unit | string | trim | replace('°', '') | upper -%}
    {%- if u in ['C', 'CELSIUS', 'DEG C', 'DEGC'] -%}
        {{ '°C' }}
    {%- elif u in ['F', 'FAHRENHEIT', 'DEG F', 'DEGF'] -%}
        {{ '°F' }}
    {%- elif u in ['K', 'KELVIN', 'DEG K', 'DEGK'] -%}
        {{ 'K' }}
    {%- else -%}
        {{ unit }}
    {%- endif -%}
{%- endmacro %}

{% macro normalize(value, unit) %}
    {# Always normalize to Celsius #}
    {%- set v = value | float(0) -%}
    {%- set u = normalize_unit(unit) -%}
    {% if u == '°C' %}
        {{ {'value': v, 'unit': '°C'} | tojson }}
    {% elif u == '°F' %}
        {{ {'value': (v - 32) * 5/9, 'unit': '°C'} | tojson }}
    {% elif u == 'K' %}
        {{ {'value': v - 273.15, 'unit': '°C'} | tojson }}
    {% else %}
        {{ {'error': 'Invalid temperature unit: ' ~ unit} | tojson }}
    {% endif %}
{% endmacro %}

{% macro from_standard(value, to_unit) %}
    {# Convert from Celsius to the desired unit #}
    {%- set v = value | float(0) -%}
    {%- set u = normalize_unit(to_unit) -%}
    {% if u == '°C' %}
        {{ {'value': v, 'unit': '°C'} | tojson }}
    {% elif u == '°F' %}
        {{ {'value': (v * 9/5) + 32, 'unit': '°F'} | tojson }}
    {% elif u == 'K' %}
        {{ {'value': v + 273.15, 'unit': 'K'} | tojson }}
    {% else %}
        {{ {'error': 'Invalid temperature unit: ' ~ to_unit} | tojson }}
    {% endif %}
{% endmacro %}

{% macro convert_temp(value, from_unit, to_unit) %}
    {# Convert temperature between any supported units using normalize and from_standard #}
    {%- set from_u = normalize_unit(from_unit) -%}
    {%- set to_u = normalize_unit(to_unit) -%}

    {# First normalize to Celsius #}
    {%- set normalized = normalize(value, from_u) | from_json -%}

    {# Check for errors in normalization #}
    {%- if normalized.error is defined -%}
        {{ normalized | tojson }}
    {%- else -%}
        {# Convert to target unit #}
        {%- set converted = from_standard(normalized.value, to_u) | from_json -%}
        {# Add source/target unit info to result #}
        {%- if converted.error is defined -%}
            {{ converted | tojson }}
        {%- else -%}
            {{ {'value': converted.value, 'unit': converted.unit, 'from': from_u, 'to': to_u} | tojson }}
        {%- endif -%}
    {%- endif -%}
{% endmacro %}

{% macro convert_entity_temp(entity_id, to_unit) %}
    {# Convert an entity's temperature to the specified unit #}
    {%- set value = states(entity_id) | float(0) -%}
    {%- set from_unit = state_attr(entity_id, 'unit_of_measurement') -%}
    {%- if not from_unit -%}
        {{ {'error': 'Entity has no unit_of_measurement attribute: ' ~ entity_id} | tojson }}
    {%- else -%}
        {{ convert_temp(value, from_unit, to_unit) }}
    {%- endif -%}
{% endmacro %}

{# -------------------- Wind Chill calculation -------------------- #}
{# NWS wind chill, valid for T <= 50°F and wind >= 3 mph. Returns °F. #}
{% macro wc_f(t_f, wind_mph) %}
    {%- set T = t_f|float -%}
    {%- set V = wind_mph|float -%}
    {%- set T = regex.T -%}
    {%- set V = 0 if V < 0 else (150 if V > 150 else V) -%}

    {%- if T <= 50 and V >= 3 -%}
        {{ 35.74 + 0.6215*T - 35.75*(V**0.16) + 0.4275*T*(V**0.16) }}
    {%- else -%}
        {{ T }}
    {%- endif -%}
{% endmacro %}

{# Wrapper that returns Wind Chill in requested unit.
   Assume input temperature is Fahrenheit and wind speed is mph by default. #}
{% macro wc(t, wind, temp_unit='f', wind_unit='mph', out_unit=None) -%}
    {%- set outu = (out_unit if out_unit is not none else temp_unit) -%}
    {%- set Tf = convert_temp(t, temp_unit, 'f')|float -%}
    {%- set Vm = convert_speed(wind, wind_unit, 'mph')|float -%}
    {%- set wcf = wc_f(Tf, Vm)|float -%}
    {{ convert_temp(wcf, 'f', outu) }}
{%- endmacro %}

{# -------------------- Heat Index calculation -------------------- #}
{# Returns Heat Index in °F using NOAA Rothfusz regression with adjustments #}
{% macro hi_f(t_f, rh_pct) -%}
    {%- set T = t_f|float -%}
    {%- set RH = rh_pct|float -%}
    {%- set RH = 0 if RH < 0 else (100 if RH > 100 else RH) -%}

    {# Simple approximation for T < 80°F #}
    {%- if T < 80 -%}
        {{ 0.5 * (T + 61.0 + ((T - 68.0) * 1.2) + (RH * 0.094)) }}
    {%- else -%}
        {# Rothfusz regression #}
        {%- set HI = (
                -42.379
                + 2.04901523 * T
                + 10.14333127 * RH
                - 0.22475541 * T * RH
                - 0.00683783 * T * T
                - 0.05481717 * RH * RH
                + 0.00122874 * T * T * RH
                + 0.00085282 * T * RH * RH
                - 0.00000199 * T * T * RH * RH
                ) -%}

        {# Low humidity adjustment: RH < 13% and 80–112°F #}
        {%- if RH < 13 and 80 <= T <= 112 -%}
            {%- set adj = ((13 - RH) / 4.0) * (((17 - (T - 95)|abs) / 17.0) ** 0.5) -%}
            {%- set HI = HI - adj -%}
        {%- endif -%}

        {# High humidity adjustment: RH > 85% and 80–87°F #}
        {%- if RH > 85 and 80 <= T <= 87 -%}
            {%- set adj = ((RH - 85) / 10.0) * ((87 - T) / 5.0) -%}
            {%- set HI = HI + adj -%}
        {%- endif -%}

        {{ HI }}
    {%- endif -%}
{%- endmacro %}

{# Wrapper that returns Heat Index in requested unit.
   Assume input temperature unit is Fahrenheit by default. #}
{% macro hi(t, rh_pct, unit='f') -%}
    {%- set Tf = convert_temp(t, unit, 'f')|float -%}
    {%- set hif = hi_f(Tf, rh_pct)|float -%}
    {{ convert_temp(hif, 'f', unit) }}
{%- endmacro %}
