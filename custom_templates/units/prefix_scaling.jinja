{# Prefix helpers; longest-prefix wins to avoid "m" vs "Mi" mixups #}

{# djlint:off #}
{% set SI_PREFIXES = {
    'Y': 24, 'Z': 21, 'E': 18, 'P': 15, 'T': 12, 'G': 9, 'M': 6, 'k': 3, 'h': 2, 'da': 1,
    '': 0, 'd': -1, 'c': -2, 'm': -3, 'µ': -6, 'n': -9, 'p': -12, 'f': -15, 'a': -18, 'z': -21, 'y': -24
} %}

{% set IEC_PREFIXES = { 'Yi': 80, 'Zi':70, 'Ei':60, 'Pi':50, 'Ti':40, 'Gi':30, 'Mi':20, 'Ki':10, '':0 } %}
{# djlint:on #}

{% macro split_prefix_unit(unit_str) %}
  {%- set u = unit_str | string -%}
  {%- set special = {"min": {"prefix": "", "base": "min"}, "ms": {"prefix": "m", "base": "s"}} -%}
  {%- if u in special -%}
    {{- special[u] | tojson -}}
  {%- else -%}
    {# try IEC first (two letters), then SI #}
    {%- set ns = namespace(_=none) -%}
    {%- for p in ['Yi','Zi','Ei','Pi','Ti','Gi','Mi','Ki'] -%}
      {%- if u.startswith(p) -%}
        {{- {'prefix': p, 'base': u[p | length:]} | tojson -}}
        {% set ns._ = 1 %}
        {% break %}
      {%- endif -%}
    {%- endfor -%}
    {%- if ns._ is not defined -%}
      {%- for p in ['da','Y','Z','E','P','T','G','M','k','h','d','c','m','µ','n','p','f','a','z','y',''] -%}
        {%- if p != '' and u.startswith(p) -%}
          {{- {'prefix': p, 'base': u[p | length:]} | tojson -}}
          {% set ns._ = 1 %}
          {% break %}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
    {%- if ns._ is not defined -%}
      {{- {'prefix':'', 'base': u} | tojson -}}
    {%- endif -%}
  {%- endif -%}
{% endmacro %}

{% macro scale_value(value, from_prefix, to_prefix, system='SI') %}
  {%- set v = value | float -%}
  {%- if system == 'IEC' -%}
    {%- set from_e = IEC_PREFIXES[from_prefix] -%}
    {%- set to_e = IEC_PREFIXES[to_prefix] -%}
    {{- v * (2 ** (from_e - to_e)) -}}
  {%- else -%}
    {%- set from_e = SI_PREFIXES[from_prefix] -%}
    {%- set to_e = SI_PREFIXES[to_prefix] -%}
    {{- v * (10 ** (from_e - to_e)) -}}
  {%- endif -%}
{% endmacro %}
