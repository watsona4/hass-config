{# # File: config/custom_templates/disk_usage.jinja ## #}
{# Macros for Disk / Filesystem Usage:
   - Accepts % used or raw bytes for total/used/free/available
   - Provides icons, colors, labels, bars, advice
   - Extras: inode usage, headroom, time-to-full projection, multi-mount helpers
#}

{% from 'helpers.jinja' import level_find %}

{# -------------------- Buckets (lower bounds) in % used -------------------- #}
{# Tuned for storage: keep warnings more aggressive than RAM.
   0–50  Low
   50–70 Moderate
   70–85 High
   85–90 Very High
   90–95 Near Full
   95–98 Critical
   >=98  Full / No Space
#}
{% set bps_pct = [0, 50, 70, 85, 90, 95, 98] %}

{% set names = [
  "Low",
  "Moderate",
  "High",
  "Very High",
  "Near Full",
  "Critical",
  "Full"
] %}

{% set shorts = [
  "Low",
  "Moder",
  "High",
  "V High",
  "Near",
  "Crit",
  "Full"
] %}

{% set longs = [
  "Disk Usage: Low",
  "Disk Usage: Moderate",
  "Disk Usage: High",
  "Disk Usage: Very High",
  "Disk Usage: Near Full",
  "Disk Usage: Critical",
  "Disk Usage: Full / No Space"
] %}

{% set icons = [
  "mdi:harddisk",            # Low
  "mdi:harddisk",            # Moderate
  "mdi:harddisk",            # High
  "mdi:harddisk",            # Very High
  "mdi:alert",               # Near Full
  "mdi:alert-octagon",       # Critical
  "mdi:close-octagon"        # Full
] %}

{% set colors = [
  "#22c55e",  # Low
  "#84cc16",  # Moderate
  "#eab308",  # High
  "#f59e0b",  # Very High
  "#ef4444",  # Near Full
  "#dc2626",  # Critical
  "#7c3aed",  # Full
  "disabled"
] %}

{% set descriptions = [
  "Plenty of free space.",
  "Healthy usage.",
  "High usage; monitor growth.",
  "Very high usage; consider pruning large files.",
  "Near capacity—cleanup recommended.",
  "Critically low free space—free space now.",
  "No free space remaining—writes will fail."
] %}

{# -------------------- Byte conversion & formatting -------------------- #}
{# Binary units. Accepts B, KB/KiB, MB/MiB, GB/GiB, TB/TiB. #}
{% macro to_bytes(value, unit='B') -%}
  {%- set v = (value|float if value is not none else 0.0) -%}
  {%- set u = (unit|string|lower) -%}
  {%- if u in ['b','byte','bytes'] -%}{% set m = 1 %}
  {%- elif u in ['kb','kib'] -%}{% set m = 1024 %}
  {%- elif u in ['mb','mib'] -%}{% set m = 1024**2 %}
  {%- elif u in ['gb','gib'] -%}{% set m = 1024**3 %}
  {%- elif u in ['tb','tib'] -%}{% set m = 1024**4 %}
  {%- else -%}{% set m = 1 %}{% endif -%}
  {{ v * m }}
{%- endmacro %}

{% macro format_bytes(bytes_val) -%}
  {%- set b = (bytes_val|float if bytes_val is not none else 0.0) -%}
  {%- if b >= 1024**4 -%}{{ (b / 1024**4)|round(2) }} TiB
  {%- elif b >= 1024**3 -%}{{ (b / 1024**3)|round(2) }} GiB
  {%- elif b >= 1024**2 -%}{{ (b / 1024**2)|round(2) }} MiB
  {%- elif b >= 1024 -%}{{ (b / 1024)|round(2) }} KiB
  {%- else -%}{{ b|round(0) }} B
  {%- endif -%}
{%- endmacro %}

{# -------------------- Percent helpers -------------------- #}
{# Convert to % (0..100). If unit='ratio' assume 0..1; 'auto' infers. #}
{% macro to_pct(value, unit='pct') -%}
  {%- set v = value|float -%}
  {%- set u = (unit|string|lower) -%}
  {{ (v * 100.0) if (u in ['ratio','frac','fraction'] or (u=='auto' and v>=0 and v<=1)) else v }}
{%- endmacro %}

{# Compute % used from total with any of: available, used, or free (prefers available). #}
{% macro used_pct(total, used=None, free=None, available=None, unit='GB') -%}
  {%- set T = to_bytes(total, unit)|float -%}
  {%- set Av = (to_bytes(available, unit)|float) if available is not none else none -%}
  {%- set U = (to_bytes(used, unit)|float) if used is not none else none -%}
  {%- set F = (to_bytes(free, unit)|float) if free is not none else none -%}
  {%- if Av is not none -%}
    {%- set p = (1.0 - (Av / (T if T>0 else 1e-9))) * 100.0 -%}
  {%- elif U is not none -%}
    {%- set p = (U / (T if T>0 else 1e-9)) * 100.0 -%}
  {%- elif F is not none -%}
    {%- set p = (1.0 - (F / (T if T>0 else 1e-9))) * 100.0 -%}
  {%- else -%}
    {%- set p = 0.0 -%}
  {%- endif -%}
  {{ 0 if p < 0 else (100 if p > 100 else p) }}
{%- endmacro %}

{# -------------------- Core level & lookups -------------------- #}
{% macro level(pct_used, unit='pct') -%}
  {{ level_find(to_pct(pct_used, unit)|float, bps_pct) }}
{%- endmacro %}

{# djlint:off #}
{% macro name(pct_used, unit='pct') %}{{ names[level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro short(pct_used, unit='pct') %}{{ shorts[level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro long(pct_used, unit='pct') %}{{ longs[level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro icon(pct_used, unit='pct') %}{{ icons[level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro color(pct_used, unit='pct') %}{{ colors[level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro desc(pct_used, unit='pct') %}{{ descriptions[level(pct_used, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Bars (0..4) from percent used #}
{% macro bars(pct_used, unit='pct') -%}
  {%- set p = to_pct(pct_used, unit)|float -%}
  {%- if p < 10 -%}0
  {%- elif p < 35 -%}1
  {%- elif p < 60 -%}2
  {%- elif p < 85 -%}3
  {%- else -%}4
  {%- endif -%}
{%- endmacro %}

{# -------------------- Labels -------------------- #}
{# Label using raw values with smart semantics (prefers 'available') #}
{% macro label_from_values(total, used=None, free=None, available=None, mount=None, unit='GB') -%}
  {%- set p = used_pct(total, used, free, available, unit)|float -%}
  {%- set T = to_bytes(total, unit) -%}
  {%- if available is not none -%}
    {%- set Av = to_bytes(available, unit) -%}
    {%- set U = T - Av -%}
  {%- elif used is not none -%}
    {%- set U = to_bytes(used, unit) -%}
  {%- else -%}
    {%- set U = T - to_bytes(free, unit) -%}
  {%- endif -%}
  {{ mount ~ ' • ' if mount else '' }}{{ name(p, 'pct') }} • {{ p|round(0) }}% used ({{ format_bytes(U) }} / {{ format_bytes(T) }})
{%- endmacro %}

{# Label when you already have % and totals #}
{% macro label_pct(pct_used, total=None, unit='GB', mount=None) -%}
  {%- set p = to_pct(pct_used, 'pct')|float -%}
  {%- if total is not none -%}
    {%- set T = to_bytes(total, unit) -%}
    {%- set U = (p / 100.0) * T -%}
    {{ mount ~ ' • ' if mount else '' }}{{ name(p, 'pct') }} • {{ p|round(0) }}% used ({{ format_bytes(U) }} / {{ format_bytes(T) }})
  {%- else -%}
    {{ mount ~ ' • ' if mount else '' }}{{ name(p, 'pct') }} • {{ p|round(0) }}% used
  {%- endif -%}
{%- endmacro %}

{# Compact chip: "/data 91% • 1.2/1.3 TiB" #}
{% macro chip_from_values(mount, total, used=None, free=None, available=None, unit='GB') -%}
  {%- set p = used_pct(total, used, free, available, unit)|float -%}
  {%- set T = to_bytes(total, unit) -%}
  {%- if available is not none -%}
    {%- set Av = to_bytes(available, unit) -%}
    {%- set U = T - Av -%}
  {%- elif used is not none -%}
    {%- set U = to_bytes(used, unit) -%}
  {%- else -%}
    {%- set U = T - to_bytes(free, unit) -%}
  {%- endif -%}
  {{ mount }} {{ p|round(0) }}% • {{ format_bytes(U) }}/{{ format_bytes(T) }}
{%- endmacro %}

{# -------------------- Guidance & booleans -------------------- #}
{% macro is_high(pct_used, unit='pct') -%}{{ level(pct_used, unit)|int >= 3 }}{%- endmacro %}
{% macro is_near_full(pct_used, unit='pct') -%}{{ level(pct_used, unit)|int >= 5 }}{%- endmacro %}
{% macro is_full(pct_used, unit='pct') -%}{{ level(pct_used, unit)|int >= 7 }}{%- endmacro %}

{% macro advice(pct_used, unit='pct') -%}
  {%- set L = level(pct_used, unit)|int -%}
  {%- if L <= 2 -%}
    Usage is healthy.
  {%- elif L == 3 -%}
    High usage—monitor growth and consider housekeeping.
  {%- elif L == 4 -%}
    Very high—prune logs/caches, move media, or expand storage.
  {%- elif L == 5 -%}
    Near full—free space immediately to avoid failures.
  {%- elif L == 6 -%}
    Critical—delete or archive large files; rotate logs now.
  {%- else -%}
    Full—writes will fail; free space before proceeding.
  {%- endif -%}
{%- endmacro %}

{# -------------------- Headroom & projections -------------------- #}
{% macro headroom_bytes(total, used=None, free=None, available=None, unit='GB') -%}
  {%- set T = to_bytes(total, unit)|float -%}
  {%- if available is not none -%}
    {{ to_bytes(available, unit)|float }}
  {%- elif free is not none -%}
    {{ to_bytes(free, unit)|float }}
  {%- elif used is not none -%}
    {{ T - to_bytes(used, unit)|float }}
  {%- else -%}
    0
  {%- endif -%}
{%- endmacro %}

{# days until full given average daily growth (bytes/day). Returns float days. #}
{% macro days_to_full(total, used=None, free=None, available=None, daily_growth_bytes=0, unit='GB') -%}
  {%- set head = headroom_bytes(total, used, free, available, unit)|float -%}
  {%- set g = daily_growth_bytes|float -%}
  {{ (head / g) if g > 0 else 0 }}
{%- endmacro %}

{% macro projection_label(total, used=None, free=None, available=None, daily_growth_bytes=0, unit='GB') -%}
  {%- set d = days_to_full(total, used, free, available, daily_growth_bytes, unit)|float -%}
  {%- if d <= 0 -%}
    No growth rate provided.
  {%- elif d < 1 -%}
    ~{{ (d*24)|round(0) }}h to full at current growth
  {%- else -%}
    ~{{ d|round(1) }} days to full at current growth
  {%- endif -%}
{%- endmacro %}

{# -------------------- Inode usage (optional separate meter) -------------------- #}
{% set bps_inode = [0, 50, 70, 85, 90, 95, 98] %}
{% set inode_names = ["Low","Moderate","High","Very High","Near Full","Critical","Full"] %}
{% set inode_icons = ["mdi:format-list-bulleted","mdi:format-list-bulleted","mdi:format-list-bulleted","mdi:format-list-bulleted","mdi:alert","mdi:alert-octagon","mdi:close-octagon"] %}
{% set inode_colors = ["#22c55e","#84cc16","#eab308","#f59e0b","#ef4444","#dc2626","#7c3aed","disabled"] %}
{% set inode_desc = [
  "Plenty of free inodes.",
  "Healthy inode usage.",
  "High inode usage; many small files.",
  "Very high inode usage.",
  "Near inode capacity; cleanup small/temp files.",
  "Critical inode pressure; remove small files.",
  "No free inodes; cannot create files."
] %}

{% macro inode_level(pct_used, unit='pct') -%}
  {{ level_find(to_pct(pct_used, unit)|float, bps_inode) }}
{%- endmacro %}

{# djlint:off #}
{% macro inode_name(pct_used, unit='pct') %}{{ inode_names[inode_level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro inode_icon(pct_used, unit='pct') %}{{ inode_icons[inode_level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro inode_color(pct_used, unit='pct') %}{{ inode_colors[inode_level(pct_used, unit)|int - 1] }}{% endmacro %}
{% macro inode_desc_text(pct_used, unit='pct') %}{{ inode_desc[inode_level(pct_used, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{% macro inode_label(pct_used, mount=None, unit='pct') -%}
  {%- set p = to_pct(pct_used, unit)|float -%}
  {{ mount ~ ' • ' if mount else '' }}Inodes • {{ inode_name(p, 'pct') }} • {{ p|round(0) }}% used
{%- endmacro %}

{# -------------------- Multi-mount helpers -------------------- #}
{# Compute the highest (worst) utilization across mounts given a list of % used #}
{% macro max_used_pct(pcts) -%}
  {%- set m = 0 -%}
  {%- for p in pcts -%}{% set x = (p|float) %}{% set m = x if x > m else m %}{%- endfor -%}
  {{ m }}
{%- endmacro %}

{% macro fleet_label(mount_labels, pcts_used) -%}
  {%- set worst = max_used_pct(pcts_used)|float -%}
  Fleet • Worst {{ worst|round(0) }}% • {{ names[level(worst, 'pct')|int - 1] }}
{%- endmacro %}
