{# # File: config/custom_templates/utilization.jinja ## #}
{# Macros for CPU / GPU / TPU Utilization:
   - Accepts % (default) or ratio (0..1)
   - Provides: levels, names, icons, colors, bars (0–4), labels, advice
   - Extras: estimate from load average, array helpers, smoothing, trends
#}

{% from 'helpers.jinja' import level_find %}

{# -------------------- Breakpoints (lower bounds) in % -------------------- #}
{# 0–5 Idle, 5–20 Low, 20–40 Moderate, 40–60 High, 60–80 Very High, 80–95 Near Max, >=95 Pegged #}
{% set bps_pct = [0, 5, 20, 40, 60, 80, 95] %}

{% set names = [
  "Idle",
  "Low",
  "Moderate",
  "High",
  "Very High",
  "Near Max",
  "Pegged"
] %}

{% set shorts = [
  "Idle",
  "Low",
  "Moder",
  "High",
  "V High",
  "Near",
  "Max"
] %}

{% set longs = [
  "Utilization: Idle",
  "Utilization: Low",
  "Utilization: Moderate",
  "Utilization: High",
  "Utilization: Very High",
  "Utilization: Near Maximum",
  "Utilization: Pegged"
] %}

{# Category icons (safe, widely available MDI) #}
{% set icons = [
  "mdi:power-sleep",      # Idle
  "mdi:progress-clock",   # Low
  "mdi:chart-line",       # Moderate
  "mdi:chart-areaspline", # High
  "mdi:fire",             # Very High
  "mdi:alert",            # Near Max
  "mdi:alert-decagram"    # Pegged
] %}

{% set colors = [
  "#9ca3af",  # Idle
  "#22c55e",  # Low
  "#84cc16",  # Moderate
  "#eab308",  # High
  "#f59e0b",  # Very High
  "#ef4444",  # Near Max
  "#7c3aed",  # Pegged
  "disabled"
] %}

{% set descriptions = [
  "Plenty of headroom.",
  "Light load.",
  "Healthy workload.",
  "Elevated load.",
  "Very high load—latency may increase.",
  "Near saturation—throttling/queuing likely.",
  "Fully saturated—expect contention and throttling."
] %}

{# -------------------- Unit helpers -------------------- #}
{# Convert to percent (0..100). unit in ['pct','%','percent'] or ['ratio','frac','fraction'].
   If unit='auto', treat 0..1 as ratio else percent. #}
{% macro to_pct(value, unit='pct') -%}
  {%- set v = value|float -%}
  {%- set u = (unit|string|lower) -%}
  {%- if u in ['ratio','frac','fraction'] -%}
    {{ v * 100.0 }}
  {%- elif u in ['auto'] -%}
    {{ v * 100.0 if (v >= 0 and v <= 1) else v }}
  {%- else -%} {# default percent #}
    {{ v }}
  {%- endif -%}
{%- endmacro %}

{# Bars 0..4 from percent for UI glyphs #}
{% macro bars(value, unit='pct') -%}
  {%- set p = to_pct(value, unit)|float -%}
  {%- if p < 10 -%}0
  {%- elif p < 35 -%}1
  {%- elif p < 60 -%}2
  {%- elif p < 85 -%}3
  {%- else -%}4
  {%- endif -%}
{%- endmacro %}

{# Clamp to sensible range and bucket #}
{% macro level(value, unit='pct') -%}
  {%- set p = to_pct(value, unit)|float -%}
  {%- set p = 0 if p < 0 else (200 if p > 200 else p) -%}
  {{ level_find(p, bps_pct) }}
{%- endmacro %}

{# djlint:off #}
{% macro name(value, unit='pct') %}{{ names[level(value, unit)|int - 1] }}{% endmacro %}
{% macro short(value, unit='pct') %}{{ shorts[level(value, unit)|int - 1] }}{% endmacro %}
{% macro long(value, unit='pct') %}{{ longs[level(value, unit)|int - 1] }}{% endmacro %}
{% macro icon(value, unit='pct') %}{{ icons[level(value, unit)|int - 1] }}{% endmacro %}
{% macro color(value, unit='pct') %}{{ colors[level(value, unit)|int - 1] }}{% endmacro %}
{% macro desc(value, unit='pct') %}{{ descriptions[level(value, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# -------------------- Device-flavored helpers -------------------- #}
{# Device glyphs for context (not level-dependent) #}
{% macro device_glyph(device='cpu') -%}
  {%- set d = (device|string|lower) -%}
  {%- if d in ['cpu','processor'] -%}mdi:cpu-64-bit
  {%- elif d in ['gpu','graphics'] -%}mdi:gpu
  {%- elif d in ['tpu','accelerator','ai'] -%}mdi:robot-industrial
  {%- else -%}mdi:chip
  {%- endif -%}
{%- endmacro %}

{# Label like "CPU • High • 87% • 3/4 bars" #}
{% macro label(value, unit='pct', device='cpu') -%}
  {%- set p = to_pct(value, unit)|float -%}
  {{ (device|string|upper) }} • {{ name(p, 'pct') }} • {{ p|round(0) }}% • {{ bars(p, 'pct') }}/4 bars
{%- endmacro %}

{# Compact chip like "GPU: 63%" #}
{% macro chip(value, unit='pct', device='cpu') -%}
  {%- set p = to_pct(value, unit)|float -%}
  {{ (device|string|upper) ~ ': ' ~ (p|round(0)|string) ~ '%' }}
{%- endmacro %}

{# -------------------- Guidance & booleans -------------------- #}
{% macro is_high(value, unit='pct') -%}{{ level(value, unit)|int >= 4 }}{%- endmacro %}
{% macro is_maxing(value, unit='pct') -%}{{ level(value, unit)|int >= 6 }}{%- endmacro %}
{% macro is_pegged(value, unit='pct') -%}{{ level(value, unit)|int >= 7 }}{%- endmacro %}

{% macro advice(value, unit='pct', device='cpu') -%}
  {%- set L = level(value, unit)|int -%}
  {%- if L <= 3 -%}
    Load is healthy.
  {%- elif L == 4 -%}
    Elevated load—monitor temperatures and fan curves.
  {%- elif L == 5 -%}
    Very high load—expect higher latency; consider staggering jobs.
  {%- elif L == 6 -%}
    Near saturation—throttle or shed background tasks; check cooling.
  {%- else -%}
    Pegged—limit workloads or scale resources for {{ device|upper }}.
  {%- endif -%}
{%- endmacro %}

{# -------------------- Estimation helpers -------------------- #}
{# Rough utilization estimate from 1-min load average and core count:
   util% ≈ min(100, 100 * load / cores) #}
{% macro util_pct_from_load(load_avg_1m, cores=1) -%}
  {%- set c = (cores|float if cores|float > 0 else 1.0) -%}
  {%- set p = (load_avg_1m|float) * 100.0 / c -%}
  {{ 0 if p < 0 else (100 if p > 100 else p) }}
{%- endmacro %}

{# -------------------- Trend & smoothing -------------------- #}
{% macro delta_pct(curr, prev, unit='pct') -%}
  {{ to_pct(curr, unit)|float - to_pct(prev, unit)|float }}
{%- endmacro %}

{% macro trend_label(curr, prev, unit='pct') -%}
  {%- set d = delta_pct(curr, prev, unit)|float -%}
  {%- if d > 2 -%}
    Rising (+{{ d|round(0) }}%)
  {%- elif d < -2 -%}
    Falling ({{ d|round(0) }}%)
  {%- else -%}
    Stable
  {%- endif -%}
{%- endmacro %}

{# Exponential smoothing (alpha in 0..1). Returns new smoothed value in %. #}
{% macro smooth(prev_smoothed_pct, new_value, alpha=0.3, unit='pct') -%}
  {%- set s = prev_smoothed_pct|float -%}
  {%- set x = to_pct(new_value, unit)|float -%}
  {{ (alpha|float) * x + (1.0 - (alpha|float)) * s }}
{%- endmacro %}

{# -------------------- Array helpers (per-core/per-SM) -------------------- #}
{% macro avg_pct(values, unit='pct') -%}
  {%- set n = values|count -%}
  {%- if n == 0 -%}0
  {%- else -%}
    {%- set total = 0 -%}
    {%- for v in values -%}{% set total = total + (to_pct(v, unit)|float) %}{%- endfor -%}
    {{ total / n }}
  {%- endif -%}
{%- endmacro %}

{% macro max_pct(values, unit='pct') -%}
  {%- set m = -1e9 -%}
  {%- for v in values -%}
    {%- set p = to_pct(v, unit)|float -%}
    {%- set m = p if p > m else m -%}
  {%- endfor -%}
  {{ 0 if m < 0 else m }}
{%- endmacro %}

{% macro group_label(values, unit='pct', device='cpu') -%}
  {%- set a = avg_pct(values, unit)|float -%}
  {%- set mx = max_pct(values, unit)|float -%}
  {{ (device|string|upper) }} • {{ name(a, 'pct') }} • avg {{ a|round(0) }}% • max {{ mx|round(0) }}%
{%- endmacro %}

{# -------------------- Device-specific convenience -------------------- #}
{% macro cpu_label(value, unit='pct') -%}{{ label(value, unit, 'cpu') }}{% endmacro %}
{% macro gpu_label(value, unit='pct') -%}{{ label(value, unit, 'gpu') }}{% endmacro %}
{% macro tpu_label(value, unit='pct') -%}{{ label(value, unit, 'tpu') }}{% endmacro %}

{% macro cpu_level(value, unit='pct') -%}{{ level(value, unit) }}{% endmacro %}
{% macro gpu_level(value, unit='pct') -%}{{ level(value, unit) }}{% endmacro %}
{% macro tpu_level(value, unit='pct') -%}{{ level(value, unit) }}{% endmacro %}
