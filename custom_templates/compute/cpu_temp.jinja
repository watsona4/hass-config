{# # File: config/custom_templates/cpu_temp.jinja ## #}
{# Macros for CPU temperature categories, icons, colors, labels, and safety helpers.
   Notes:
   - Use your convert_temp_value from helpers.jinja (incoming temps default to °F).
   - Levels are computed as % of TjMax (default 100°C) so it adapts to different CPUs.
#}

{% from 'helpers.jinja' import level_find, convert_temp_value %}

{# ------------------------------------------------------------------
   Buckets: lower bounds in % of TjMax
   0–40%  : Cool / Idle
   40–60% : Normal
   60–70% : Warm
   70–80% : Hot
   80–90% : Very Hot
   90–100%: Critical
   >=100% : Thermal Limit
   ------------------------------------------------------------------ #}
{% set bps_pct = [0, 40, 60, 70, 80, 90, 100] %}

{% set names = [
  "Cool",
  "Normal",
  "Warm",
  "Hot",
  "Very Hot",
  "Critical",
  "Thermal Limit"
] %}

{% set shorts = [
  "Cool",
  "Normal",
  "Warm",
  "Hot",
  "V Hot",
  "Critical",
  "TjMax"
] %}

{% set longs = [
  "CPU: Cool / Idle",
  "CPU: Normal Temperature",
  "CPU: Warm",
  "CPU: Hot",
  "CPU: Very Hot",
  "CPU: Critical",
  "CPU: At Thermal Limit"
] %}

{% set icons = [
  "mdi:thermometer-low",     # Cool
  "mdi:thermometer",         # Normal
  "mdi:thermometer",         # Warm
  "mdi:thermometer-high",    # Hot
  "mdi:fire",                # Very Hot
  "mdi:alert",               # Critical
  "mdi:alert-decagram"       # Thermal Limit
] %}

{% set colors = [
  "#60a5fa",  # Cool (blue)
  "#10b981",  # Normal (green)
  "#84cc16",  # Warm (lime)
  "#f59e0b",  # Hot (amber)
  "#f97316",  # Very Hot (orange)
  "#ef4444",  # Critical (red)
  "#7c3aed",  # Thermal Limit (violet)
  "disabled"
] %}

{% set descriptions = [
  "Well below operating stress; plenty of thermal headroom.",
  "Within normal operating range.",
  "Getting warm; extended heavy load is fine if cooling is adequate.",
  "Hot; ensure fans and heatsinks are clear and working.",
  "Very hot; boost clocks may reduce, check cooling and airflow.",
  "Critical; throttling likely. Reduce load and improve cooling.",
  "At or above TjMax; immediate throttling/shutdown risk."
] %}

{# -------------------- Core helpers -------------------- #}

{# Convert any input temp to °C (default input is Fahrenheit). #}
{% macro to_c(temp, unit='f') -%}
  {{ convert_temp_value(temp, unit, 'c') }}
{%- endmacro %}

{# Percent of TjMax (0..100+). Default TjMax = 100°C. #}
{% macro pct_of_tj(temp, unit='f', tjmax_c=100) -%}
  {%- set c = to_c(temp, unit)|float -%}
  {%- set tj = (tjmax_c|float if tjmax_c else 100.0) -%}
  {{ (c / (tj if tj != 0 else 100.0)) * 100.0 }}
{%- endmacro %}

{# Level (1..7) based on % of TjMax. #}
{% macro level(temp, unit='f', tjmax_c=100) -%}
  {%- set p = pct_of_tj(temp, unit, tjmax_c)|float -%}
  {%- set p = 0 if p < 0 else (200 if p > 200 else p) -%}
  {{ level_find(p, bps_pct) }}
{%- endmacro %}

{# -------------------- Wrappers -------------------- #}
{# djlint:off #}
{% macro name(temp, unit='f', tjmax_c=100) %}{{ names[level(temp, unit, tjmax_c)|int - 1] }}{% endmacro %}
{% macro short(temp, unit='f', tjmax_c=100) %}{{ shorts[level(temp, unit, tjmax_c)|int - 1] }}{% endmacro %}
{% macro long(temp, unit='f', tjmax_c=100) %}{{ longs[level(temp, unit, tjmax_c)|int - 1] }}{% endmacro %}
{% macro icon(temp, unit='f', tjmax_c=100) %}{{ icons[level(temp, unit, tjmax_c)|int - 1] }}{% endmacro %}
{% macro color(temp, unit='f', tjmax_c=100) %}{{ colors[level(temp, unit, tjmax_c)|int - 1] }}{% endmacro %}
{% macro desc(temp, unit='f', tjmax_c=100) %}{{ descriptions[level(temp, unit, tjmax_c)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# -------------------- Labels -------------------- #}

{# Example: "Hot • 86.4°C (187.5°F) • 86% of TjMax (100°C)" #}
{% macro label(temp, unit='f', tjmax_c=100) -%}
  {%- set c = to_c(temp, unit)|float -%}
  {%- set f = convert_temp_value(c, 'c', 'f')|float -%}
  {%- set p = pct_of_tj(c, 'c', tjmax_c)|float -%}
  {{ name(c, 'c', tjmax_c) }} • {{ c|round(1) }}°C ({{ f|round(1) }}°F) • {{ p|round(0) }}% of TjMax ({{ tjmax_c|round(0) }}°C)
{%- endmacro %}

{# Compact chip: "Warm • 72°C" (always displays Celsius) #}
{% macro chip(temp, unit='f', tjmax_c=100) -%}
  {%- set c = to_c(temp, unit)|float -%}
  {{ short(c, 'c', tjmax_c) }} • {{ c|round(0) }}°C
{%- endmacro %}

{# -------------------- Safety & guidance -------------------- #}

{% macro is_warm(temp, unit='f', tjmax_c=100) -%}
  {{ level(temp, unit, tjmax_c)|int >= 3 }}
{%- endmacro %}

{% macro is_hot(temp, unit='f', tjmax_c=100) -%}
  {{ level(temp, unit, tjmax_c)|int >= 4 }}
{%- endmacro %}

{% macro is_critical(temp, unit='f', tjmax_c=100) -%}
  {{ level(temp, unit, tjmax_c)|int >= 6 }}
{%- endmacro %}

{% macro throttle_risk(temp, unit='f', tjmax_c=100) -%}
  {{ pct_of_tj(temp, unit, tjmax_c)|float >= 90.0 }}
{%- endmacro %}

{% macro throttle_now(temp, unit='f', tjmax_c=100) -%}
  {%- set c = to_c(temp, unit)|float -%}
  {{ c >= (tjmax_c|float) }}
{%- endmacro %}

{% macro advice(temp, unit='f', tjmax_c=100) -%}
  {%- set L = level(temp, unit, tjmax_c)|int -%}
  {%- if L <= 2 -%}
    Temperature is healthy. No action needed.
  {%- elif L == 3 -%}
    Warm under load is normal; ensure unobstructed airflow.
  {%- elif L == 4 -%}
    Hot—clean dust filters, verify fan curves, and check case airflow.
  {%- elif L == 5 -%}
    Very hot—re-paste heatsink if old, increase fan speed, or reduce boost limits.
  {%- elif L == 6 -%}
    Critical—throttling likely. Reduce load and improve cooling immediately.
  {%- else -%}
    At thermal limit—system may shut down to protect hardware. Power off and inspect cooling.
  {%- endif -%}
{%- endmacro %}

{# -------------------- Trend helpers -------------------- #}

{# Delta (current - previous) in °C; positive means rising. #}
{% macro delta_c(curr_temp, prev_temp, unit='f') -%}
  {{ to_c(curr_temp, unit)|float - to_c(prev_temp, unit)|float }}
{%- endmacro %}

{% macro trend_label(curr_temp, prev_temp, unit='f') -%}
  {%- set d = delta_c(curr_temp, prev_temp, unit)|float -%}
  {%- if d > 0.2 -%}
    Rising (+{{ d|round(1) }}°C)
  {%- elif d < -0.2 -%}
    Falling ({{ d|round(1) }}°C)
  {%- else -%}
    Stable
  {%- endif -%}
{%- endmacro %}
