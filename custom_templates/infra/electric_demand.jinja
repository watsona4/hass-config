{# # File: config/custom_templates/electric_demand.jinja ## #}
{# Macros for Electric Demand categories, icons, colors, labels, and helpers.
   Focus: whole-home demand vs. service capacity (main breaker).
   Defaults:
     - Demand input unit: kW (real power)
     - Service: 200 A @ 240 V split-phase (North America)
     - Power factor (pf): 1.0 (set lower for motor-heavy loads)
     - Continuous rating rule: 80% of breaker (True by default)
#}

{% from 'helpers.jinja' import level_find %}

{# ------------------------------------------------------------------
   Category breakpoints by % of service apparent capacity (kVA).
   We compute utilization using kVA (demand_kVA = kW / pf).
   Bands (percent of usable capacity): 
     0–10   Idle
     10–25  Low
     25–50  Moderate
     50–75  High
     75–90  Very High
     90–100 Near Limit
     >=100  Over Limit
   ------------------------------------------------------------------ #}
{% set bps_pct = [0, 10, 25, 50, 75, 90, 100] %}

{% set names = [
  "Idle",
  "Low",
  "Moderate",
  "High",
  "Very High",
  "Near Limit",
  "Over Limit"
] %}

{% set shorts = [
  "Idle",
  "Low",
  "Moder",
  "High",
  "V High",
  "Near",
  "Over"
] %}

{% set longs = [
  "Electric Demand: Idle",
  "Electric Demand: Low",
  "Electric Demand: Moderate",
  "Electric Demand: High",
  "Electric Demand: Very High",
  "Electric Demand: Near Service Limit",
  "Electric Demand: Over Service Limit"
] %}

{% set icons = [
  "mdi:flash-off",             # Idle
  "mdi:flash-outline",         # Low
  "mdi:flash",                 # Moderate
  "mdi:flash",                 # High
  "mdi:flash-alert",           # Very High
  "mdi:alert",                 # Near Limit
  "mdi:alert-octagon-outline"  # Over Limit
] %}

{% set colors = [
  "#10b981",  # Idle
  "#22c55e",  # Low
  "#84cc16",  # Moderate
  "#eab308",  # High
  "#f59e0b",  # Very High
  "#ef4444",  # Near Limit
  "#7c3aed",  # Over Limit
  "disabled"
] %}

{% set descriptions = [
  "Plenty of headroom. Most loads off or idling.",
  "Light usage. Minimal impact on service capacity.",
  "Normal household usage.",
  "Elevated usage; large appliances likely running.",
  "Very high usage; stagger major loads if possible.",
  "Approaching main breaker limit; avoid starting additional large loads.",
  "Over service limit; risk of breaker trip—shed load immediately."
] %}

{# -------------------- Unit & electrical helpers -------------------- #}

{# Convert power between W, kW, MW. Default in/out: kW. #}
{% macro convert_power_value(value, from_unit='kW', to_unit='kW') -%}
  {%- set v = value|float -%}
  {%- set fu = (from_unit|string|lower) -%}
  {%- set tu = (to_unit|string|lower) -%}
  {%- if fu in ['w','watt','watts'] -%}{% set fu = 'w' %}{% endif -%}
  {%- if fu in ['kw','kilowatt','kilowatts'] -%}{% set fu = 'kw' %}{% endif -%}
  {%- if fu in ['mw','megawatt','megawatts'] -%}{% set fu = 'mw' %}{% endif -%}
  {%- if tu in ['w','watt','watts'] -%}{% set tu = 'w' %}{% endif -%}
  {%- if tu in ['kw','kilowatt','kilowatts'] -%}{% set tu = 'kw' %}{% endif -%}
  {%- if tu in ['mw','megawatt','megawatts'] -%}{% set tu = 'mw' %}{% endif -%}

  {# to kW #}
  {%- if fu == 'w' -%}
    {%- set kw = v / 1000.0 -%}
  {%- elif fu == 'mw' -%}
    {%- set kw = v * 1000.0 -%}
  {%- else -%}
    {%- set kw = v -%}
  {%- endif -%}

  {# from kW #}
  {%- if tu == 'w' -%}
    {{ kw * 1000.0 }}
  {%- elif tu == 'mw' -%}
    {{ kw / 1000.0 }}
  {%- else -%}
    {{ kw }}
  {%- endif -%}
{%- endmacro %}

{# Electrical phase factor:
   split/1φ => 1.0; 3φ => √3. Used for VA/W<->A conversions. #}
{% macro phase_factor(phases='split') -%}
  {%- set p = (phases|string|lower) -%}
  {%- if p in ['3','3p','3ph','three','three-phase','threephase'] -%}
    {{ 1.7320508076 }}
  {%- else -%}
    {{ 1.0 }}
  {%- endif -%}
{%- endmacro %}

{# Service apparent capacity in kVA (applies 80% continuous rule by default). #}
{% macro service_kva(service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {%- set pfac = phase_factor(phases)|float -%}
  {%- set base_kva = (voltage|float * service_amps|float * pfac) / 1000.0 -%}
  {%- if continuous -%}
    {{ base_kva * 0.8 }}
  {%- else -%}
    {{ base_kva }}
  {%- endif -%}
{%- endmacro %}

{# Given real power (kW) and pf, compute equivalent apparent kVA. #}
{% macro demand_kva_from_kw(kw, pf=1.0) -%}
  {%- set kW = convert_power_value(kw, 'kW', 'kW')|float -%}
  {%- set PF = (pf|float if pf else 1.0) -%}
  {{ kW / (PF if PF > 0 else 1.0) }}
{%- endmacro %}

{# Amps from kW (useful for display): I = (kW/pf * 1000) / (V * phase_factor) #}
{% macro amps_from_kw(kw, voltage=240, phases='split', pf=1.0) -%}
  {%- set S_kVA = demand_kva_from_kw(kw, pf)|float -%}
  {%- set pfac = phase_factor(phases)|float -%}
  {{ (S_kVA * 1000.0) / ((voltage|float) * pfac) }}
{%- endmacro %}

{# kW from amps (assuming pf): kW = V * I * pf * phase_factor / 1000 #}
{% macro kw_from_amps(amps, voltage=240, phases='split', pf=1.0) -%}
  {%- set pfac = phase_factor(phases)|float -%}
  {{ (voltage|float) * (amps|float) * (pf|float if pf else 1.0) * pfac / 1000.0 }}
{%- endmacro %}

{# -------------------- Utilization & categorization -------------------- #}

{# Percent utilization from kW, pf, and service. #}
{% macro utilization_pct_from_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {%- set need_kVA = demand_kva_from_kw(kw, pf)|float -%}
  {%- set cap_kVA = service_kva(service_amps, voltage, phases, continuous)|float -%}
  {%- set pct = (need_kVA / (cap_kVA if cap_kVA > 0 else 1e-9)) * 100.0 -%}
  {{ 0 if pct < 0 else (500 if pct > 500 else pct) }}
{%- endmacro %}

{# Percent utilization from amps directly. #}
{% macro utilization_pct_from_amps(amps, service_amps=200, continuous=true) -%}
  {%- set cap = (service_amps|float) * (0.8 if continuous else 1.0) -%}
  {%- set pct = (amps|float / (cap if cap > 0 else 1e-9)) * 100.0 -%}
  {{ 0 if pct < 0 else (500 if pct > 500 else pct) }}
{%- endmacro %}

{# Core level: from a percent value #}
{% macro level_pct(pct) -%}
  {{ level_find(pct|float, bps_pct) }}
{%- endmacro %}

{# Convenience: level from kW #}
{% macro level_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {{ level_pct(utilization_pct_from_kw(kw, pf, service_amps, voltage, phases, continuous)) }}
{%- endmacro %}

{# Convenience: level from amps #}
{% macro level_amps(amps, service_amps=200, continuous=true) -%}
  {{ level_pct(utilization_pct_from_amps(amps, service_amps, continuous)) }}
{%- endmacro %}

{# -------------------- Standard wrappers (by percent) -------------------- #}
{# djlint:off #}
{% macro name_pct(pct) %}{{ names[level_pct(pct)|int - 1] }}{% endmacro %}
{% macro short_pct(pct) %}{{ shorts[level_pct(pct)|int - 1] }}{% endmacro %}
{% macro long_pct(pct) %}{{ longs[level_pct(pct)|int - 1] }}{% endmacro %}
{% macro icon_pct(pct) %}{{ icons[level_pct(pct)|int - 1] }}{% endmacro %}
{% macro desc_pct(pct) %}{{ descriptions[level_pct(pct)|int - 1] }}{% endmacro %}
{% macro color_pct(pct) %}{{ colors[level_pct(pct)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Wrappers from kW directly #}
{# djlint:off #}
{% macro name_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) %}{{ names[level_kw(kw, pf, service_amps, voltage, phases, continuous)|int - 1] }}{% endmacro %}
{% macro short_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) %}{{ shorts[level_kw(kw, pf, service_amps, voltage, phases, continuous)|int - 1] }}{% endmacro %}
{% macro long_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) %}{{ longs[level_kw(kw, pf, service_amps, voltage, phases, continuous)|int - 1] }}{% endmacro %}
{% macro icon_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) %}{{ icons[level_kw(kw, pf, service_amps, voltage, phases, continuous)|int - 1] }}{% endmacro %}
{% macro desc_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) %}{{ descriptions[level_kw(kw, pf, service_amps, voltage, phases, continuous)|int - 1] }}{% endmacro %}
{% macro color_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) %}{{ colors[level_kw(kw, pf, service_amps, voltage, phases, continuous)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# -------------------- Labels -------------------- #}

{# Service label like "200A @ 240V (80% = 38.4 kVA usable)" #}
{% macro service_label(service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {%- set kva = service_kva(service_amps, voltage, phases, false)|float -%}
  {%- set usable = service_kva(service_amps, voltage, phases, continuous)|float -%}
  {%- set phase_txt = '3φ' if (phase_factor(phases)|float > 1.0) else '1φ' -%}
  {{ service_amps }}A @ {{ voltage }}V {{ phase_txt }}{{ ' (80% = ' ~ usable|round(1) ~ ' kVA usable)' if continuous else ' (' ~ kva|round(1) ~ ' kVA)' }}
{%- endmacro %}

{# Label from kW, e.g., "High • 9.5 kW • 62% of 200A @ 240V" #}
{% macro label_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {%- set pct = utilization_pct_from_kw(kw, pf, service_amps, voltage, phases, continuous)|float -%}
  {{ names[level_pct(pct)|int - 1] }} • {{ kw|round(1) }} kW • {{ pct|round(0) }}% of {{ service_amps }}A @ {{ voltage }}V
{%- endmacro %}

{# Label from amps, e.g., "Near Limit • 155 A • 97% of 200A (80%)" #}
{% macro label_amps(amps, service_amps=200, voltage=240, phases='split', pf=1.0, continuous=true) -%}
  {%- set pct = utilization_pct_from_amps(amps, service_amps, continuous)|float -%}
  {%- set kw = kw_from_amps(amps, voltage, phases, pf)|float -%}
  {{ names[level_pct(pct)|int - 1] }} • {{ amps|round(0) }} A (≈{{ kw|round(1) }} kW) • {{ pct|round(0) }}% of {{ service_amps }}A{{ ' (80%)' if continuous else '' }}
{%- endmacro %}

{# -------------------- Guidance & booleans -------------------- #}

{% macro is_near_limit_pct(pct) -%}
  {{ level_pct(pct)|int >= 6 }}
{%- endmacro %}

{% macro is_over_limit_pct(pct) -%}
  {{ level_pct(pct)|int >= 7 }}
{%- endmacro %}

{% macro is_near_limit_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {{ is_near_limit_pct(utilization_pct_from_kw(kw, pf, service_amps, voltage, phases, continuous)) }}
{%- endmacro %}

{% macro is_over_limit_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {{ is_over_limit_pct(utilization_pct_from_kw(kw, pf, service_amps, voltage, phases, continuous)) }}
{%- endmacro %}

{% macro advice_kw(kw, pf=1.0, service_amps=200, voltage=240, phases='split', continuous=true) -%}
  {%- set pct = utilization_pct_from_kw(kw, pf, service_amps, voltage, phases, continuous)|float -%}
  {%- set L = level_pct(pct)|int -%}
  {%- if L <= 3 -%}
    Normal usage. No action needed.
  {%- elif L == 4 -%}
    Elevated usage. Consider staggering discretionary loads (dryer, oven, EV, HVAC aux).
  {%- elif L == 5 -%}
    Very high usage. Avoid starting additional large loads; consider pausing EV charging or preheating.
  {%- elif L == 6 -%}
    Near capacity. Shed discretionary loads to prevent nuisance trips.
  {%- else -%}
    Over limit! Immediately shed large loads (EV, electric heat, water heater) to restore headroom.
  {%- endif -%}
{%- endmacro %}

{# -------------------- Demand charge helpers (optional) -------------------- #}

{# Estimate monthly demand charge given a tariff rate ($/kW) and recorded peak kW. #}
{% macro demand_charge(peak_kw, rate_per_kw) -%}
  {{ (convert_power_value(peak_kw, 'kW', 'kW')|float) * (rate_per_kw|float) }}
{%- endmacro %}

{# Label like "Peak 7.8 kW • Est. Demand Charge: $46.80 @ $6.00/kW" #}
{% macro demand_charge_label(peak_kw, rate_per_kw) -%}
  {%- set cost = demand_charge(peak_kw, rate_per_kw)|float -%}
  Peak {{ peak_kw|round(1) }} kW • Est. Demand Charge: ${{ cost|round(2) }} @ ${{ rate_per_kw|round(2) }}/kW
{%- endmacro %}
