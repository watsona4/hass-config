{# # File: config/custom_templates/line_voltage_frequency.jinja ## #}
{# Macros for Line Voltage & Frequency quality: categories, icons, colors, labels, and split-phase balance.
   Defaults:
     - Voltage unit: volts ('V')
     - Frequency unit: hertz ('Hz')
     - Nominal voltage: 120 V (set to 230 for EU single-phase, 240 for split L1-L2 checks)
     - Nominal frequency: 60 Hz (set to 50 for many regions)
#}

{% from 'helpers.jinja' import level_find %}

{# ========================= VOLTAGE (percent deviation) ========================= #}
{# Breakpoints are in % deviation from nominal:
   <=-15  Severe Undervoltage
   -15..-10 Undervoltage
   -10..-5  Low
   -5..+5   In Spec
   +5..+10  High
   +10..+15 Overvoltage
   >=+15    Severe Overvoltage
#}
{% set bps_v_pct = [-1000, -15, -10, -5, 5, 10, 15] %}

{% set v_names = [
  "Severe Undervoltage",
  "Undervoltage",
  "Low",
  "In Spec",
  "High",
  "Overvoltage",
  "Severe Overvoltage"
] %}

{% set v_shorts = [
  "Sev Under",
  "Under",
  "Low",
  "In Spec",
  "High",
  "Over",
  "Sev Over"
] %}

{% set v_longs = [
  "Severe Undervoltage",
  "Undervoltage",
  "Low Voltage",
  "Voltage In Spec",
  "High Voltage",
  "Overvoltage",
  "Severe Overvoltage"
] %}

{% set v_icons = [
  "mdi:alert-decagram",   # Severe Undervoltage
  "mdi:alert",            # Undervoltage
  "mdi:flash-off",        # Low
  "mdi:flash",            # In Spec
  "mdi:flash",            # High
  "mdi:flash-alert",      # Overvoltage
  "mdi:alert-octagon"     # Severe Overvoltage
] %}

{% set v_colors = [
  "#7c3aed",  # Severe Under
  "#ef4444",  # Under
  "#f59e0b",  # Low
  "#10b981",  # In Spec
  "#eab308",  # High
  "#ef4444",  # Over
  "#7c3aed",  # Severe Over
  "disabled"
] %}

{% set v_desc = [
  "Critically low voltage; brownout risk for electronics and motors.",
  "Undervoltage; some devices may malfunction or overheat.",
  "Slightly low; watch for dim lights and motor strain.",
  "Within nominal tolerance.",
  "Slightly high; may stress incandescent/halogen lamps.",
  "Overvoltage; equipment damage possible.",
  "Severely high; immediate risk to connected equipment."
] %}

{# Voltage unit conversion: 'V', 'mV', 'kV' #}
{% macro convert_voltage_value(value, from_unit='V', to_unit='V') -%}
  {%- set v = value|float -%}
  {%- set fu = (from_unit|string|lower) -%}
  {%- set tu = (to_unit|string|lower) -%}
  {%- if fu in ['mv','millivolt','millivolts'] -%}{% set fu = 'mv' %}{% endif -%}
  {%- if fu in ['kv','kilovolt','kilovolts'] -%}{% set fu = 'kv' %}{% endif -%}
  {%- if fu in ['v','volt','volts'] -%}{% set fu = 'v' %}{% endif -%}
  {%- if tu in ['mv','millivolt','millivolts'] -%}{% set tu = 'mv' %}{% endif -%}
  {%- if tu in ['kv','kilovolt','kilovolts'] -%}{% set tu = 'kv' %}{% endif -%}
  {%- if tu in ['v','volt','volts'] -%}{% set tu = 'v' %}{% endif -%}

  {# to volts #}
  {%- if fu == 'mv' -%}{% set volts = v / 1000.0 %}
  {%- elif fu == 'kv' -%}{% set volts = v * 1000.0 %}
  {%- else -%}{% set volts = v %}{% endif -%}

  {# from volts #}
  {%- if tu == 'mv' -%}{{ volts * 1000.0 }}
  {%- elif tu == 'kv' -%}{{ volts / 1000.0 }}
  {%- else -%}{{ volts }}{% endif -%}
{%- endmacro %}

{# Percent deviation from nominal voltage #}
{% macro voltage_dev_pct(voltage, nominal=120, unit='V') -%}
  {%- set V = convert_voltage_value(voltage, unit, 'V')|float -%}
  {%- set N = convert_voltage_value(nominal, 'V', 'V')|float -%}
  {{ ((V - (N if N != 0 else 1e-9)) / (N if N != 0 else 1e-9)) * 100.0 }}
{%- endmacro %}

{# Bucket by % deviation #}
{% macro v_level(voltage, nominal=120, unit='V') -%}
  {{ level_find(voltage_dev_pct(voltage, nominal, unit)|float, bps_v_pct) }}
{%- endmacro %}

{# Standard wrappers #}
{# djlint:off #}
{% macro v_name(voltage, nominal=120, unit='V') %}{{ v_names[v_level(voltage, nominal, unit)|int - 1] }}{% endmacro %}
{% macro v_short(voltage, nominal=120, unit='V') %}{{ v_shorts[v_level(voltage, nominal, unit)|int - 1] }}{% endmacro %}
{% macro v_long(voltage, nominal=120, unit='V') %}{{ v_longs[v_level(voltage, nominal, unit)|int - 1] }}{% endmacro %}
{% macro v_icon(voltage, nominal=120, unit='V') %}{{ v_icons[v_level(voltage, nominal, unit)|int - 1] }}{% endmacro %}
{% macro v_color(voltage, nominal=120, unit='V') %}{{ v_colors[v_level(voltage, nominal, unit)|int - 1] }}{% endmacro %}
{% macro v_desc_text(voltage, nominal=120, unit='V') %}{{ v_desc[v_level(voltage, nominal, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Labels #}
{% macro v_label(voltage, nominal=120, unit='V') -%}
  {%- set dev = voltage_dev_pct(voltage, nominal, unit)|float -%}
  {{ v_name(voltage, nominal, unit) }} • {{ voltage|round(1) }} {{ unit }} ({{ dev|round(1) }}% vs {{ nominal }} {{ unit }})
{%- endmacro %}

{% macro v_is_in_spec(voltage, nominal=120, unit='V') -%}
  {{ v_level(voltage, nominal, unit)|int == 4 }}
{%- endmacro %}

{% macro v_is_sag(voltage, nominal=120, unit='V') -%}
  {{ voltage_dev_pct(voltage, nominal, unit)|float <= -10.0 }}
{%- endmacro %}

{% macro v_is_swell(voltage, nominal=120, unit='V') -%}
  {{ voltage_dev_pct(voltage, nominal, unit)|float >= 10.0 }}
{%- endmacro %}

{# ========================= FREQUENCY (percent deviation) ========================= #}
{# Breakpoints in % deviation from nominal:
   <=-2  Sev Underspeed
   -2..-1 Underspeed
   -1..-0.5 Slightly Low
   -0.5..+0.5 In Spec
   +0.5..+1 Slightly High
   +1..+2 Overspeed
   >=+2  Sev Overspeed
#}
{% set bps_f_pct = [-100, -2, -1, -0.5, 0.5, 1, 2] %}

{% set f_names = [
  "Severe Underspeed",
  "Underspeed",
  "Slightly Low",
  "In Spec",
  "Slightly High",
  "Overspeed",
  "Severe Overspeed"
] %}

{% set f_shorts = [
  "Sev Low",
  "Low",
  "Slight Low",
  "In Spec",
  "Slight High",
  "High",
  "Sev High"
] %}

{% set f_longs = [
  "Severe Frequency Underspeed",
  "Frequency Underspeed",
  "Frequency Slightly Low",
  "Frequency In Spec",
  "Frequency Slightly High",
  "Frequency Overspeed",
  "Severe Frequency Overspeed"
] %}

{% set f_icons = [
  "mdi:alert-decagram",
  "mdi:alert",
  "mdi:waveform",
  "mdi:sine-wave",
  "mdi:waveform",
  "mdi:alert",
  "mdi:alert-octagon"
] %}

{% set f_colors = [
  "#7c3aed",  # Severe Low
  "#ef4444",  # Low
  "#f59e0b",  # Slight Low
  "#10b981",  # In Spec
  "#eab308",  # Slight High
  "#ef4444",  # High
  "#7c3aed",  # Severe High
  "disabled"
] %}

{% set f_desc = [
  "Critically low frequency; grid/outlet unstable.",
  "Low frequency; motors may overheat, clocks drift.",
  "Slightly low; usually acceptable short-term.",
  "Within nominal tolerance.",
  "Slightly high; usually acceptable short-term.",
  "High frequency; sensitive devices may misbehave.",
  "Critically high frequency; risk to equipment."
] %}

{% macro freq_dev_pct(freq, nominal_hz=60, unit='Hz') -%}
  {%- set F = freq|float -%}
  {%- set N = nominal_hz|float -%}
  {{ ((F - (N if N != 0 else 1e-9)) / (N if N != 0 else 1e-9)) * 100.0 }}
{%- endmacro %}

{% macro f_level(freq, nominal_hz=60, unit='Hz') -%}
  {{ level_find(freq_dev_pct(freq, nominal_hz, unit)|float, bps_f_pct) }}
{%- endmacro %}

{# djlint:off #}
{% macro f_name(freq, nominal_hz=60, unit='Hz') %}{{ f_names[f_level(freq, nominal_hz, unit)|int - 1] }}{% endmacro %}
{% macro f_short(freq, nominal_hz=60, unit='Hz') %}{{ f_shorts[f_level(freq, nominal_hz, unit)|int - 1] }}{% endmacro %}
{% macro f_long(freq, nominal_hz=60, unit='Hz') %}{{ f_longs[f_level(freq, nominal_hz, unit)|int - 1] }}{% endmacro %}
{% macro f_icon(freq, nominal_hz=60, unit='Hz') %}{{ f_icons[f_level(freq, nominal_hz, unit)|int - 1] }}{% endmacro %}
{% macro f_color(freq, nominal_hz=60, unit='Hz') %}{{ f_colors[f_level(freq, nominal_hz, unit)|int - 1] }}{% endmacro %}
{% macro f_desc_text(freq, nominal_hz=60, unit='Hz') %}{{ f_desc[f_level(freq, nominal_hz, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{% macro f_label(freq, nominal_hz=60, unit='Hz') -%}
  {%- set dev = freq_dev_pct(freq, nominal_hz, unit)|float -%}
  {{ f_name(freq, nominal_hz, unit) }} • {{ freq|round(2) }} {{ unit }} ({{ dev|round(2) }}% vs {{ nominal_hz }} {{ unit }})
{%- endmacro %}

{% macro f_is_in_spec(freq, nominal_hz=60, unit='Hz') -%}
  {{ f_level(freq, nominal_hz, unit)|int == 4 }}
{%- endmacro %}

{# ========================= SPLIT-PHASE BALANCE (L1-N vs L2-N) ========================= #}
{# Imbalance percent is relative to the average of L1 and L2 (typical 120/120 V).
   Breakpoints (%): <3 Balanced, 3–<5 Mild, 5–<10 Moderate, >=10 Severe #}
{% set bps_imb_pct = [0, 3, 5, 10] %}
{% set imb_names = ["Balanced", "Mild Imbalance", "Moderate Imbalance", "Severe Imbalance"] %}
{% set imb_shorts = ["Balanced", "Mild", "Moderate", "Severe"] %}
{% set imb_icons = ["mdi:scale-balance", "mdi:alert", "mdi:alert", "mdi:alert-octagon"] %}
{% set imb_colors = ["#10b981", "#eab308", "#f59e0b", "#ef4444", "disabled"] %}
{% set imb_desc = [
  "Leg voltages are well balanced.",
  "Small difference between legs; usually acceptable.",
  "Noticeable imbalance; investigate large single-leg loads or neutral connections.",
  "Severe imbalance; potential neutral/wiring issue—seek qualified electrician."
] %}

{% macro split_phase_imbalance_pct(v_l1n, v_l2n, unit='V') -%}
  {%- set v1 = convert_voltage_value(v_l1n, unit, 'V')|float -%}
  {%- set v2 = convert_voltage_value(v_l2n, unit, 'V')|float -%}
  {%- set avg = (v1 + v2) / 2.0 -%}
  {{ ( (v1 - v2)|abs / (avg if avg != 0 else 1e-9) ) * 100.0 }}
{%- endmacro %}

{% macro imb_level(v_l1n, v_l2n, unit='V') -%}
  {{ level_find(split_phase_imbalance_pct(v_l1n, v_l2n, unit)|float, bps_imb_pct) }}
{%- endmacro %}

{# djlint:off #}
{% macro imb_name(v_l1n, v_l2n, unit='V') %}{{ imb_names[imb_level(v_l1n, v_l2n, unit)|int - 1] }}{% endmacro %}
{% macro imb_short(v_l1n, v_l2n, unit='V') %}{{ imb_shorts[imb_level(v_l1n, v_l2n, unit)|int - 1] }}{% endmacro %}
{% macro imb_icon(v_l1n, v_l2n, unit='V') %}{{ imb_icons[imb_level(v_l1n, v_l2n, unit)|int - 1] }}{% endmacro %}
{% macro imb_color(v_l1n, v_l2n, unit='V') %}{{ imb_colors[imb_level(v_l1n, v_l2n, unit)|int - 1] }}{% endmacro %}
{% macro imb_desc_text(v_l1n, v_l2n, unit='V') %}{{ imb_desc[imb_level(v_l1n, v_l2n, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{% macro imb_label(v_l1n, v_l2n, unit='V') -%}
  {%- set pct = split_phase_imbalance_pct(v_l1n, v_l2n, unit)|float -%}
  {{ imb_name(v_l1n, v_l2n, unit) }} • Δ={{ pct|round(1) }}%
{%- endmacro %}

{# Optional L1-L2 check (should be ≈ 2 × L-N). Report mismatch vs expected 240 V by default. #}
{% macro ll_check_label(v_l1n, v_l2n, v_l1l2, expected_ll=240, unit='V') -%}
  {%- set ll = convert_voltage_value(v_l1l2, unit, 'V')|float -%}
  {%- set dev = ((ll - expected_ll) / (expected_ll if expected_ll != 0 else 1e-9)) * 100.0 -%}
  L1-L2: {{ ll|round(1) }} {{ unit }} ({{ dev|round(1) }}% vs {{ expected_ll }} {{ unit }})
{%- endmacro %}

{# ========================= COMPOSITE LABEL & GUIDANCE ========================= #}
{% macro quality_chip(voltage, freq, nominal_v=120, nominal_hz=60, unit_v='V', unit_f='Hz') -%}
  {{ v_name(voltage, nominal_v, unit_v) }} • {{ voltage|round(1) }}{{ unit_v }}  |  {{ f_name(freq, nominal_hz, unit_f) }} • {{ freq|round(2) }}{{ unit_f }}
{%- endmacro %}

{% macro advice(voltage, freq, nominal_v=120, nominal_hz=60, unit_v='V', unit_f='Hz') -%}
  {%- set vL = v_level(voltage, nominal_v, unit_v)|int -%}
  {%- set fL = f_level(freq, nominal_hz, unit_f)|int -%}
  {%- if vL <= 2 -%}
    Voltage is low—reduce large loads and check utility or connections.
  {%- elif vL >= 6 -%}
    Voltage is high—consider surge protection and contact utility if persistent.
  {%- endif -%}
  {%- if fL != 4 -%}
    Frequency out of spec—sensitive electronics or UPS devices may alarm.
  {%- elif vL == 4 -%}
    Power quality within normal limits.
  {%- endif -%}
{%- endmacro %}
