{# # File: config/custom_templates/visibility.jinja ## #}
{# Macros for horizontal visibility categories, icons, colors, guidance, and aviation VFR class.
   Default input unit: kilometers (km). Supported units: 'km', 'mi'. #}

{% from 'helpers.jinja' import level_find %}

{# ------------------------------------------------------------------
   Breakpoints for visibility, lower bounds in kilometers
   0–0.2  : Very Dense Fog
   0.2–0.5: Dense Fog
   0.5–1  : Thick Fog
   1–2    : Fog/Mist
   2–4    : Haze / Poor
   4–10   : Moderate
   10–20  : Good
   20–40  : Very Good
   >=40   : Excellent
   ------------------------------------------------------------------ #}
{% set bps_km = [0, 0.2, 0.5, 1, 2, 4, 10, 20, 40] %}

{# Names for categories #}
{% set names = [
  "Very Dense Fog",
  "Dense Fog",
  "Thick Fog",
  "Fog / Mist",
  "Haze / Poor",
  "Moderate",
  "Good",
  "Very Good",
  "Excellent"
] %}

{# Short names for compact UIs #}
{% set shorts = [
  "VD Fog",
  "Dense Fog",
  "Thick Fog",
  "Fog/Mist",
  "Haze",
  "Moder",
  "Good",
  "V Good",
  "Excel"
] %}

{# Long names #}
{% set longs = [
  "Visibility: Very Dense Fog",
  "Visibility: Dense Fog",
  "Visibility: Thick Fog",
  "Visibility: Fog / Mist",
  "Visibility: Haze / Poor",
  "Visibility: Moderate",
  "Visibility: Good",
  "Visibility: Very Good",
  "Visibility: Excellent"
] %}

{# Icons #}
{% set icons = [
  "mdi:weather-fog",        # Very Dense Fog
  "mdi:weather-fog",        # Dense Fog
  "mdi:weather-fog",        # Thick Fog
  "mdi:weather-fog",        # Fog / Mist
  "mdi:weather-hazy",       # Haze / Poor
  "mdi:binoculars",         # Moderate
  "mdi:binoculars",         # Good
  "mdi:binoculars",         # Very Good
  "mdi:eye"                 # Excellent
] %}

{# Colors from deep gray to healthy green #}
{% set colors = [
  "#1f2937",  # Very Dense Fog
  "#374151",  # Dense Fog
  "#4b5563",  # Thick Fog
  "#6b7280",  # Fog / Mist
  "#94a3b8",  # Haze / Poor
  "#10b981",  # Moderate
  "#22c55e",  # Good
  "#84cc16",  # Very Good
  "#a3e635",  # Excellent
  "disabled"
] %}

{# Descriptions for each level #}
{% set descriptions = [
  "Severely restricted. Avoid driving; use hazard lights only if stopped.",
  "Dangerous visibility. Slow down, increase following distance.",
  "Very low visibility. Use fog lights; avoid sudden maneuvers.",
  "Low visibility. Use low beams; watch for slick roads.",
  "Hazy conditions. Sensitive groups may feel irritation.",
  "Fair visibility. Routine caution.",
  "Good visibility.",
  "Very good visibility.",
  "Excellent visibility."
] %}

{# -------------------- Unit conversion helper -------------------- #}
{# Convert distance between km and mi. Default in/out: km. #}
{% macro convert_distance_value(value, from_unit='km', to_unit='km') -%}
  {%- set v = value|float -%}
  {%- set fu = (from_unit|string|lower) -%}
  {%- set tu = (to_unit|string|lower) -%}
  {%- if fu in ['mile','miles','mi'] -%}{% set fu = 'mi' %}{% endif -%}
  {%- if fu in ['kilometer','kilometre','kilometers','kilometres','km'] -%}{% set fu = 'km' %}{% endif -%}
  {%- if tu in ['mile','miles','mi'] -%}{% set tu = 'mi' %}{% endif -%}
  {%- if tu in ['kilometer','kilometre','kilometers','kilometres','km'] -%}{% set tu = 'km' %}{% endif -%}

  {%- if fu == 'mi' -%}
    {%- set km = v * 1.609344 -%}
  {%- else -%}
    {%- set km = v -%}
  {%- endif -%}

  {%- if tu == 'mi' -%}
    {{ km / 1.609344 }}
  {%- else -%}
    {{ km }}
  {%- endif -%}
{%- endmacro %}

{# -------------------- Categorization helpers -------------------- #}
{# Return category level (1-based) for a given visibility. Default input is km. #}
{% macro level(vis, unit='km') -%}
  {%- set km = convert_distance_value(vis, unit, 'km')|float -%}
  {%- set val = 0 if km < 0 else (200 if km > 200 else km) -%}
  {{ level_find(val, bps_km) }}
{%- endmacro %}

{# -------------------- Wrappers for lookups -------------------- #}
{# djlint:off #}
{% macro name(vis, unit='km') %}{{ names[level(vis, unit)|int - 1] }}{% endmacro %}
{% macro short(vis, unit='km') %}{{ shorts[level(vis, unit)|int - 1] }}{% endmacro %}
{% macro long(vis, unit='km') %}{{ longs[level(vis, unit)|int - 1] }}{% endmacro %}
{% macro icon(vis, unit='km') %}{{ icons[level(vis, unit)|int - 1] }}{% endmacro %}
{% macro desc(vis, unit='km') %}{{ descriptions[level(vis, unit)|int - 1] }}{% endmacro %}
{% macro color(vis, unit='km') %}{{ colors[level(vis, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Label like "Good (18.2 km • 11.3 mi)" #}
{% macro label(vis, unit='km') -%}
  {%- set km = convert_distance_value(vis, unit, 'km')|float -%}
  {%- set mi = convert_distance_value(km, 'km', 'mi')|float -%}
  {{ names[level(km, 'km')|int - 1] }} ({{ km|round(1) }} km • {{ mi|round(1) }} mi)
{%- endmacro %}

{# -------------------- Convenience booleans and guidance -------------------- #}
{% macro is_fog(vis, unit='km') -%}
  {{ level(vis, unit)|int <= 4 }}
{%- endmacro %}

{% macro is_dense_fog(vis, unit='km') -%}
  {{ level(vis, unit)|int <= 2 }}
{%- endmacro %}

{% macro driving_advice(vis, unit='km') -%}
  {%- set L = level(vis, unit)|int -%}
  {%- if L <= 2 -%}
    Extremely poor visibility. Delay travel if possible; if driving, slow significantly and use fog lights.
  {%- elif L <= 4 -%}
    Poor visibility. Reduce speed, increase following distance, use low beams (not high beams).
  {%- elif L == 5 -%}
    Hazy conditions. Keep windows closed; consider recirculation mode if air quality is poor.
  {%- else -%}
    Normal driving conditions. Remain attentive.
  {%- endif -%}
{%- endmacro %}

{# -------------------- Aviation visibility class (by statute miles only) -------------------- #}
{# VFR classes (visibility-only approximation):
   LIFR <1 sm, IFR 1–<3 sm, MVFR 3–<5 sm, VFR >=5 sm #}
{% set bps_vfr_sm = [0, 1, 3, 5] %}
{% set vfr_names = ["LIFR", "IFR", "MVFR", "VFR"] %}
{% set vfr_colors = ["#7c3aed", "#ef4444", "#f59e0b", "#10b981", "disabled"] %}
{% set vfr_descriptions = [
  "Low Instrument Flight Rules: visibility <1 sm.",
  "Instrument Flight Rules: 1–<3 sm.",
  "Marginal VFR: 3–<5 sm.",
  "Visual Flight Rules: ≥5 sm."
] %}
{% set vfr_icons = [
  "mdi:airplane-alert",
  "mdi:airplane",
  "mdi:airplane-clock",
  "mdi:airplane-check"
] %}

{% macro vfr_level(vis, unit='km') -%}
  {%- set sm = convert_distance_value(vis, unit, 'mi')|float -%}
  {{ level_find(sm, bps_vfr_sm) }}
{%- endmacro %}

{# djlint:off #}
{% macro vfr_class(vis, unit='km') %}{{ vfr_names[vfr_level(vis, unit)|int - 1] }}{% endmacro %}
{% macro vfr_icon(vis, unit='km') %}{{ vfr_icons[vfr_level(vis, unit)|int - 1] }}{% endmacro %}
{% macro vfr_color(vis, unit='km') %}{{ vfr_colors[vfr_level(vis, unit)|int - 1] }}{% endmacro %}
{% macro vfr_desc(vis, unit='km') %}{{ vfr_descriptions[vfr_level(vis, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Composite aviation label, e.g., "MVFR • 3.5 sm" #}
{% macro vfr_label(vis, unit='km') -%}
  {%- set sm = convert_distance_value(vis, unit, 'mi')|float -%}
  {{ vfr_names[vfr_level(sm, 'mi')|int - 1] }} • {{ sm|round(1) }} sm
{%- endmacro %}
