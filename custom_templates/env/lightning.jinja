{# # File: config/custom_templates/lightning.jinja ## #}
{# Macros for Lightning proximity and activity (strike rate) with names, icons, colors, labels, and safety helpers. #}

{% from 'helpers.jinja' import level_find %}

{# ------------------------------------------------------------------
   PROXIMITY: nearest strike distance categories, lower bounds in kilometers.
   0–3 Very Close, 3–8 Close, 8–16 Nearby, 16–30 Distant, 30–50 Far, >=50 None in 50 km
   ------------------------------------------------------------------ #}
{% set bps_km = [0, 3, 8, 16, 30, 50] %}

{% set prox_names = [
  "Very Close",
  "Close",
  "Nearby",
  "Distant",
  "Far",
  "None in 50 km"
] %}

{% set prox_shorts = [
  "V Close",
  "Close",
  "Nearby",
  "Distant",
  "Far",
  "None"
] %}

{% set prox_longs = [
  "Lightning Very Close",
  "Lightning Close",
  "Lightning Nearby",
  "Lightning Distant",
  "Lightning Far",
  "No Lightning in 50 km"
] %}

{% set prox_icons = [
  "mdi:flash-alert",           # Very Close
  "mdi:flash",                 # Close
  "mdi:weather-lightning",     # Nearby
  "mdi:weather-lightning",     # Distant
  "mdi:radar",                 # Far
  "mdi:radar"                  # None in 50 km
] %}

{% set prox_colors = [
  "#dc2626",  # Very Close
  "#f97316",  # Close
  "#f59e0b",  # Nearby
  "#eab308",  # Distant
  "#22c55e",  # Far
  "#10b981",  # None in 50 km
  "disabled"
] %}

{% set prox_desc = [
  "Immediate danger, take shelter now.",
  "High risk, lightning is close, remain sheltered.",
  "Risk present, suspend outdoor activity.",
  "Potential risk, monitor conditions.",
  "Low risk, storms are far away.",
  "No recent strikes detected within 50 km."
] %}

{# -------------------- Distance conversion helper -------------------- #}
{# Convert distance between km and mi. Default in/out: km. #}
{% macro convert_distance_value(value, from_unit='km', to_unit='km') -%}
  {%- set v = value|float -%}
  {%- set fu = (from_unit|string|lower) -%}
  {%- set tu = (to_unit|string|lower) -%}
  {%- if fu in ['mile','miles','mi'] -%}{% set fu = 'mi' %}{% endif -%}
  {%- if fu in ['kilometer','kilometre','kilometers','kilometres','km'] -%}{% set fu = 'km' %}{% endif -%}
  {%- if tu in ['mile','miles','mi'] -%}{% set tu = 'mi' %}{% endif -%}
  {%- if tu in ['kilometer','kilometre','kilometers','kilometres','km'] -%}{% set tu = 'km' %}{% endif -%}

  {%- if fu == 'mi' -%}
    {%- set km = v * 1.609344 -%}
  {%- else -%}
    {%- set km = v -%}
  {%- endif -%}

  {%- if tu == 'mi' -%}
    {{ km / 1.609344 }}
  {%- else -%}
    {{ km }}
  {%- endif -%}
{%- endmacro %}

{# -------------------- Proximity categorization -------------------- #}
{# Return proximity level (1..6). Default input unit is km. #}
{% macro prox_level(distance, unit='km') -%}
  {%- set km = convert_distance_value(distance, unit, 'km')|float -%}
  {%- set km = 0 if km < 0 else (10000 if km is not number else km) -%}
  {%- set km = 10000 if km != km else km -%} {# NaN guard #}
  {{ level_find(km, bps_km) }}
{%- endmacro %}

{# djlint:off #}
{% macro prox_name(distance, unit='km') %}{{ prox_names[prox_level(distance, unit)|int - 1] }}{% endmacro %}
{% macro prox_short(distance, unit='km') %}{{ prox_shorts[prox_level(distance, unit)|int - 1] }}{% endmacro %}
{% macro prox_long(distance, unit='km') %}{{ prox_longs[prox_level(distance, unit)|int - 1] }}{% endmacro %}
{% macro prox_icon(distance, unit='km') %}{{ prox_icons[prox_level(distance, unit)|int - 1] }}{% endmacro %}
{% macro prox_color(distance, unit='km') %}{{ prox_colors[prox_level(distance, unit)|int - 1] }}{% endmacro %}
{% macro prox_desc_text(distance, unit='km') %}{{ prox_desc[prox_level(distance, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Label like "Nearby (6.2 mi)" #}
{% macro prox_label(distance, unit='km') -%}
  {%- set km = convert_distance_value(distance, unit, 'km')|float -%}
  {%- set mi = convert_distance_value(km, 'km', 'mi')|float -%}
  {{ prox_name(km, 'km') }} ({{ mi|round(1) }} mi)
{%- endmacro %}

{# ------------------------------------------------------------------
   ACTIVITY: strike rate categories, lower bounds in strikes per minute (spm)
   0 None, 0.1 Isolated, 1 Occasional, 3 Frequent, 6 Numerous, 12 Intense, 24 Extreme
   ------------------------------------------------------------------ #}
{% set bps_spm = [0, 0.1, 1, 3, 6, 12, 24] %}

{% set rate_names = [
  "None",
  "Isolated",
  "Occasional",
  "Frequent",
  "Numerous",
  "Intense",
  "Extreme"
] %}

{% set rate_shorts = [
  "None",
  "Isol",
  "Occas",
  "Freq",
  "Numer",
  "Intense",
  "Extreme"
] %}

{% set rate_longs = [
  "No Strikes",
  "Isolated Strikes",
  "Occasional Strikes",
  "Frequent Strikes",
  "Numerous Strikes",
  "Intense Lightning",
  "Extreme Lightning"
] %}

{% set rate_icons = [
  "mdi:radar",               # None
  "mdi:flash-outline",       # Isolated
  "mdi:flash",               # Occasional
  "mdi:flash",               # Frequent
  "mdi:flash-alert",         # Numerous
  "mdi:flash-alert",         # Intense
  "mdi:flash-alert"          # Extreme
] %}

{% set rate_colors = [
  "#10b981",  # None
  "#84cc16",  # Isolated
  "#eab308",  # Occasional
  "#f59e0b",  # Frequent
  "#ef4444",  # Numerous
  "#dc2626",  # Intense
  "#7c3aed",  # Extreme
  "disabled"
] %}

{% set rate_desc = [
  "No lightning detected in the area.",
  "Isolated strikes, generally weak cells.",
  "Occasional strikes, thunderstorms nearby.",
  "Frequent strikes, active thunderstorms.",
  "Numerous strikes, strong cells likely.",
  "Intense lightning, severe storm risk.",
  "Extreme lightning density, seek robust shelter."
] %}

{# -------------------- Rate conversion helper -------------------- #}
{# Convert strike rate: spm (per minute) <-> sph (per hour). Default in/out: spm. #}
{% macro convert_rate_value(value, from_unit='spm', to_unit='spm') -%}
  {%- set v = value|float -%}
  {%- set fu = (from_unit|string|lower) -%}
  {%- set tu = (to_unit|string|lower) -%}
  {%- if fu in ['per_hour','/h','hr','sph'] -%}{% set fu = 'sph' %}{% endif -%}
  {%- if fu in ['per_min','/m','min','spm'] -%}{% set fu = 'spm' %}{% endif -%}
  {%- if tu in ['per_hour','/h','hr','sph'] -%}{% set tu = 'sph' %}{% endif -%}
  {%- if tu in ['per_min','/m','min','spm'] -%}{% set tu = 'spm' %}{% endif -%}

  {%- if fu == 'sph' -%}
    {%- set spm = v / 60.0 -%}
  {%- else -%}
    {%- set spm = v -%}
  {%- endif -%}

  {%- if tu == 'sph' -%}
    {{ spm * 60.0 }}
  {%- else -%}
    {{ spm }}
  {%- endif -%}
{%- endmacro %}

{# -------------------- Activity categorization -------------------- #}
{% macro rate_level(rate, unit='spm') -%}
  {%- set spm = convert_rate_value(rate, unit, 'spm')|float -%}
  {%- set val = 0 if spm < 0 else (1000 if spm > 1000 else spm) -%}
  {{ level_find(val, bps_spm) }}
{%- endmacro %}

{# djlint:off #}
{% macro rate_name(rate, unit='spm') %}{{ rate_names[rate_level(rate, unit)|int - 1] }}{% endmacro %}
{% macro rate_short(rate, unit='spm') %}{{ rate_shorts[rate_level(rate, unit)|int - 1] }}{% endmacro %}
{% macro rate_long(rate, unit='spm') %}{{ rate_longs[rate_level(rate, unit)|int - 1] }}{% endmacro %}
{% macro rate_icon(rate, unit='spm') %}{{ rate_icons[rate_level(rate, unit)|int - 1] }}{% endmacro %}
{% macro rate_color(rate, unit='spm') %}{{ rate_colors[rate_level(rate, unit)|int - 1] }}{% endmacro %}
{% macro rate_desc_text(rate, unit='spm') %}{{ rate_desc[rate_level(rate, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Label like "Frequent • 8.0/min (480/hr)" #}
{% macro rate_label(rate, unit='spm') -%}
  {%- set spm = convert_rate_value(rate, unit, 'spm')|float -%}
  {%- set sph = convert_rate_value(spm, 'spm', 'sph')|float -%}
  {{ rate_name(spm, 'spm') }} • {{ spm|round(1) }}/min ({{ sph|round(0) }}/hr)
{%- endmacro %}

{# ------------------------------------------------------------------
   Combined hazard and guidance
   Hazard is derived from proximity and boosted by activity.
   Returns 0..5 where 0=None, 5=Extreme.
   ------------------------------------------------------------------ #}
{% set hazard_names = ["None", "Low", "Elevated", "High", "Very High", "Extreme"] %}
{% set hazard_icons = [
  "mdi:shield-check",
  "mdi:shield-half-full",
  "mdi:alert-outline",
  "mdi:alert",
  "mdi:alert-octagon-outline",
  "mdi:alert-decagram"
] %}
{% set hazard_colors = ["#10b981", "#84cc16", "#eab308", "#f59e0b", "#ef4444", "#7c3aed", "disabled"] %}
{% set hazard_desc = [
  "No strikes nearby.",
  "Low risk. Monitor sky and radar.",
  "Elevated risk. Prepare to seek shelter.",
  "High risk. Seek sturdy shelter.",
  "Very high risk. Remain sheltered.",
  "Extreme risk. Stay sheltered and avoid wired devices."
] %}

{% macro hazard_level(distance, rate, dist_unit='km', rate_unit='spm') -%}
  {# Base from proximity: map prox level 1..6 to base 5..0 #}
  {%- set p = prox_level(distance, dist_unit)|int -%}
  {%- set base = [5,4,3,2,1,0][p-1] -%}
  {# Boost from activity: rate levels 1..7 -> boost 0..3 #}
  {%- set rl = rate_level(rate, rate_unit)|int -%}
  {%- set boost = [0,0,1,1,2,3,3][rl-1] -%}
  {%- set hz = base + boost -%}
  {{ 5 if hz > 5 else (0 if hz < 0 else hz) }}
{%- endmacro %}

{# djlint:off #}
{% macro hazard_name(distance, rate, dist_unit='km', rate_unit='spm') %}{{ hazard_names[hazard_level(distance, rate, dist_unit, rate_unit)] }}{% endmacro %}
{% macro hazard_icon(distance, rate, dist_unit='km', rate_unit='spm') %}{{ hazard_icons[hazard_level(distance, rate, dist_unit, rate_unit)] }}{% endmacro %}
{% macro hazard_color(distance, rate, dist_unit='km', rate_unit='spm') %}{{ hazard_colors[hazard_level(distance, rate, dist_unit, rate_unit)] }}{% endmacro %}
{% macro hazard_desc_text(distance, rate, dist_unit='km', rate_unit='spm') %}{{ hazard_desc[hazard_level(distance, rate, dist_unit, rate_unit)] }}{% endmacro %}
{# djlint:on #}

{# Guidance strings following common safety rules #}
{% macro advice(distance, rate, last_strike_age_min=None, dist_unit='km', rate_unit='spm') -%}
  {%- set km = convert_distance_value(distance, dist_unit, 'km')|float -%}
  {%- set hz = hazard_level(distance, rate, dist_unit, rate_unit) -%}
  {%- if hz >= 4 or km < 8 -%}
    Seek shelter indoors immediately. Wait at least 30 minutes after the last thunder before resuming outdoor activity.
  {%- elif hz >= 3 or km < 16 -%}
    Suspend outdoor activity and move to shelter. Avoid open fields, tall objects, and water.
  {%- elif hz == 2 -%}
    Stay alert. Monitor radar and be prepared to move indoors quickly.
  {%- else -%}
    Low risk at the moment. Continue to monitor conditions.
  {%- endif -%}
  {%- if last_strike_age_min is not none and last_strike_age_min|float < 30 -%}
    Also, the 30-minute rule is not yet satisfied since the last detected strike was {{ last_strike_age_min|round(0) }} min ago.
  {%- endif -%}
{%- endmacro %}

{# -------------------- Convenience booleans -------------------- #}
{% macro is_active(rate, unit='spm') -%}
  {{ rate_level(rate, unit)|int >= 2 }}
{%- endmacro %}

{% macro shelter_now(distance, unit='km') -%}
  {{ prox_level(distance, unit)|int <= 2 }}
{%- endmacro %}

{% macro within_watch(distance, unit='km') -%}
  {{ prox_level(distance, unit)|int <= 4 }}
{%- endmacro %}

{% macro all_clear(last_strike_age_min) -%}
  {{ last_strike_age_min is number and last_strike_age_min|float >= 30.0 }}
{%- endmacro %}

{# -------------------- Composite label -------------------- #}
{# Example: "Nearby • 6.2 mi • Frequent (8.0/min)" #}
{% macro label(distance, rate, dist_unit='km', rate_unit='spm') -%}
  {%- set km = convert_distance_value(distance, dist_unit, 'km')|float -%}
  {%- set mi = convert_distance_value(km, 'km', 'mi')|float -%}
  {%- set spm = convert_rate_value(rate, rate_unit, 'spm')|float -%}
  Lightning {{ prox_name(km, 'km') }} • {{ mi|round(1) }} mi • {{ rate_name(spm, 'spm') }} ({{ spm|round(1) }}/min)
{%- endmacro %}
