{# # File: config/custom_templates/barometric_pressure.jinja ## #}
{# Macros for Barometric Pressure (absolute level) and Pressure Trend #}
{# Default absolute unit: hPa (a.k.a. mbar). Supported: hPa/mbar, inHg, kPa, Pa for conversion helper. #}

{% from 'helpers.jinja' import level_find %}

{# ------------------------------------------------------------------
   Absolute pressure categories (lower bounds) in hPa at sea level.
   These bands give intuitive “weather signal” groupings.
   870–979  : Storm Low
   980–999  : Low
   1000–1009: Slightly Low
   1010–1019: Normal
   1020–1029: Slightly High
   1030–1039: High
   1040+    : Very High
   ------------------------------------------------------------------ #}
{% set bps_hpa = [870, 980, 1000, 1010, 1020, 1030, 1040] %}

{% set names = ["Storm Low", "Low", "Slightly Low", "Normal", "Slightly High", "High", "Very High"] %}

{% set shorts = ["Storm", "Low", "S Low", "Normal", "S High", "High", "V High"] %}

{% set longs = [
    "Barometric Pressure: Storm Low",
    "Barometric Pressure: Low",
    "Barometric Pressure: Slightly Low",
    "Barometric Pressure: Normal",
    "Barometric Pressure: Slightly High",
    "Barometric Pressure: High",
    "Barometric Pressure: Very High"
] %}

{% set icons = ['mdi:weather-hurricane', 'mdi:weather-windy', 'mdi:cloud-outline', 'mdi:barometer', 'mdi:white-balance-sunny', 'mdi:weather-sunny', 'mdi:weather-sunny-alert'] %}

{# Colors from deep-low violet/blue to fair-weather warm tones #}
{% set colors = ['#7c3aed', '#2563eb', '#0ea5e9', '#10b981', '#facc15', '#f59e0b', '#d97706', 'disabled'] %}

{% set descriptions = [
    "Very deep low pressure, severe storm potential.",
    "Unsettled; rain or wind more likely.",
    "Below average; clouds or showers possible.",
    "Near average sea-level pressure.",
    "Above average; generally fair, clearing trend.",
    "Strong high; fair, calm, and dry.",
    "Very strong high; dry and clear, inversions possible."
] %}

{# -------------------- Pressure unit conversion helper -------------------- #}
{# Convert pressure between: hPa/mbar, inHg, kPa, Pa. Default in/out: hPa. #}
{% macro convert_pressure_value(value, from_unit='hpa', to_unit='hpa') -%}
    {%- set v = value|float -%}
    {%- set fu = (from_unit|string|lower) -%}
    {%- set tu = (to_unit|string|lower) -%}

    {# normalize keys #}
    {%- if fu in ['mbar','mb'] -%}{% set fu = "hpa" %}
    {% endif -%}
    {%- if fu in ['inhg','in_hg','incheshg','inches_hg'] -%}{% set fu = "inhg" %}
    {% endif -%}
    {%- if fu in ['kilopascal','kilopascals','kpa'] -%}{% set fu = "kpa" %}
    {% endif -%}
    {%- if fu in ['pascal','pascals','pa'] -%}{% set fu = "pa" %}
    {% endif -%}

    {%- if tu in ['mbar','mb'] -%}{% set tu = "hpa" %}
    {% endif -%}
    {%- if tu in ['inhg','in_hg','incheshg','inches_hg'] -%}{% set tu = "inhg" %}
    {% endif -%}
    {%- if tu in ['kilopascal','kilopascals','kpa'] -%}{% set tu = "kpa" %}
    {% endif -%}
    {%- if tu in ['pascal','pascals','pa'] -%}{% set tu = "pa" %}
    {% endif -%}

    {# to hPa #}
    {%- if fu == 'inhg' -%}
        {%- set hpa = v * 33.8638866667 -%}
    {%- elif fu == 'kpa' -%}
        {%- set hpa = v * 10 -%}
    {%- elif fu == 'pa' -%}
        {%- set hpa = v / 100 -%}
    {%- else -%}
        {%- set hpa = v -%}
    {%- endif -%}

    {# from hPa #}
    {%- if tu == 'inhg' -%}
        {{ hpa / 33.8638866667 }}
    {%- elif tu == 'kpa' -%}
        {{ hpa / 10 }}
    {%- elif tu == 'pa' -%}
        {{ hpa * 100 }}
    {%- else -%}
        {{ hpa }}
    {%- endif -%}
{%- endmacro %}

{# -------------------- Absolute categorization -------------------- #}
{# Default input unit is hPa. #}
{% macro level(p, unit='hpa') -%}
    {%- set h = convert_pressure_value(p, unit, 'hpa')|float -%}
    {%- set val = 800 if h < 800 else (1080 if h > 1080 else h) -%}
    {{ level_find(val, bps_hpa) }}
{%- endmacro %}

{# djlint:off #}
{% macro name(p, unit='hpa') %}{{ names[level(p, unit)|int - 1] }}{% endmacro %}
{% macro short(p, unit='hpa') %}{{ shorts[level(p, unit)|int - 1] }}{% endmacro %}
{% macro long(p, unit='hpa') %}{{ longs[level(p, unit)|int - 1] }}{% endmacro %}
{% macro icon(p, unit='hpa') %}{{ icons[level(p, unit)|int - 1] }}{% endmacro %}
{% macro desc(p, unit='hpa') %}{{ descriptions[level(p, unit)|int - 1] }}{% endmacro %}
{% macro color(p, unit='hpa') %}{{ colors[level(p, unit)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Optional label like "Normal (1016.3 hPa / 29.99 inHg)" #}
{% macro label(p, unit='hpa') -%}
    {%- set h = convert_pressure_value(p, unit, 'hpa')|float -%}
    {%- set inhg = convert_pressure_value(h, 'hpa', 'inhg')|float -%}
    {{ names[level(h, 'hpa') |int - 1] }} ({{ h|round(1) }} hPa / {{ inhg|round(2) }} inHg)
{%- endmacro %}

{# -------------------- Trend (tendency) categorization -------------------- #}
{# We classify by the 3-hour pressure change in hPa.
   Rate thresholds (hPa/3h) adapted from common synoptic codes:
     <= -1.7 : Falling Rapidly
     -1.7..-0.5 : Falling
     -0.5..0.5 : Steady
     0.5..1.7 : Rising
     >= 1.7 : Rising Rapidly
   bps list uses lower bounds; order from most negative to most positive. #}
{% set bps_trend_hpa_3h = [-1000, -1.7, -0.5, 0.5, 1.7] %}

{% set trend_names = ["Falling Rapidly", "Falling", "Steady", "Rising", "Rising Rapidly"] %}

{% set trend_shorts = ["Fall ↑↓", "Fall", "Steady", "Rise", "Rise ⇈"] %}

{% set trend_longs = [
    "Pressure Falling Rapidly",
    "Pressure Falling",
    "Pressure Steady",
    "Pressure Rising",
    "Pressure Rising Rapidly"
] %}

{% set trend_icons = ["mdi:chevron-double-down", "mdi:chevron-down", "mdi:minus", "mdi:chevron-up", "mdi:chevron-double-up"] %}

{% set trend_colors = ['#2563eb', '#60a5fa', '#9ca3af', '#10b981', '#16a34a', 'disabled'] %}

{% set trend_desc = [
    "Sharp drop in pressure; weather likely deteriorating quickly.",
    "Gradual drop; unsettled weather becoming more likely.",
    "Little change expected.",
    "Gradual rise; improving or fair weather becoming more likely.",
    "Sharp rise; rapid clearing and stabilizing conditions."
] %}

{# Compute 3-hour normalized rate in hPa/3h from a raw delta and elapsed hours. #}
{% macro trend_rate_hpa_3h(delta_value, delta_unit='hpa', hours=3) -%}
    {%- set dh = convert_pressure_value(delta_value, delta_unit, 'hpa')|float -%}
    {%- set hrs = (hours|float if hours is not none else 3.0) -%}
    {{ dh * (3.0 / (hrs if hrs != 0 else 3.0)) }}
{%- endmacro %}

{# Convenience: derive delta from two absolute readings. #}
{% macro trend_rate_from(now_value, then_value, unit='hpa', hours=3) -%}
    {{ trend_rate_hpa_3h(convert_pressure_value(now_value, unit, 'hpa') - convert_pressure_value(then_value, unit, 'hpa'), 'hpa', hours) }}
{%- endmacro %}

{# Map a 3-hour normalized rate to a trend level (1..5) #}
{% macro trend_level(rate_hpa_3h) -%}
    {{ level_find(rate_hpa_3h|float, bps_trend_hpa_3h) }}
{%- endmacro %}

{# Full wrappers by rate #}
{# djlint:off #}
{% macro trend_name(rate_hpa_3h) %}{{ trend_names[trend_level(rate_hpa_3h)|int - 1] }}{% endmacro %}
{% macro trend_short(rate_hpa_3h) %}{{ trend_shorts[trend_level(rate_hpa_3h)|int - 1] }}{% endmacro %}
{% macro trend_long(rate_hpa_3h) %}{{ trend_longs[trend_level(rate_hpa_3h)|int - 1] }}{% endmacro %}
{% macro trend_icon(rate_hpa_3h) %}{{ trend_icons[trend_level(rate_hpa_3h)|int - 1] }}{% endmacro %}
{% macro trend_color(rate_hpa_3h) %}{{ trend_colors[trend_level(rate_hpa_3h)|int - 1] }}{% endmacro %}
{% macro trend_desc_text(rate_hpa_3h) %}{{ trend_desc[trend_level(rate_hpa_3h)|int - 1] }}{% endmacro %}
{# djlint:on #}

{# Convenience wrappers from two readings and elapsed time #}
{# djlint:off #}
{% macro trend_name_from(now_value, then_value, unit='hpa', hours=3) %}{{ trend_name(trend_rate_from(now_value, then_value, unit, hours)) }}{% endmacro %}
{% macro trend_short_from(now_value, then_value, unit='hpa', hours=3) %}{{ trend_short(trend_rate_from(now_value, then_value, unit, hours)) }}{% endmacro %}
{% macro trend_long_from(now_value, then_value, unit='hpa', hours=3) %}{{ trend_long(trend_rate_from(now_value, then_value, unit, hours)) }}{% endmacro %}
{% macro trend_icon_from(now_value, then_value, unit='hpa', hours=3) %}{{ trend_icon(trend_rate_from(now_value, then_value, unit, hours)) }}{% endmacro %}
{% macro trend_color_from(now_value, then_value, unit='hpa', hours=3) %}{{ trend_color(trend_rate_from(now_value, then_value, unit, hours)) }}{% endmacro %}
{% macro trend_desc_from(now_value, then_value, unit='hpa', hours=3) %}{{ trend_desc_text(trend_rate_from(now_value, then_value, unit, hours)) }}{% endmacro %}
{# djlint:on #}
