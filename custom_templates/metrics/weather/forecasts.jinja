{% from 'metrics/weather/weather_codes.jinja' import condition %}

{# -------------------- Helpers for Home Assistant entities -------------------- #}
{# Extract current condition from entity attribute and render via condition() #}
{% macro current_condition(entity) %}
    {%- set c = state_attr(entity, 'current') or {} -%}
    {%- set code = c.get('weather_code') -%}
    {%- set is_day = (c.get('is_day')|int(1))|bool -%}
    {%- if code is not none -%}
        {{- condition(code, is_day) -}}
    {%- else -%}
        {{- 'unknown' -}}
    {%- endif -%}
{% endmacro %}

{# Daily forecast template #}
{% macro forecast_daily(entity) %}
    {%- set d = state_attr(entity,'daily') or {} -%}
    {%- set tt = d.get('time', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- set w = d.get('weather_code', []) -%}
    {%- set pp = d.get('precipitation_probability_max', []) -%}
    {%- set ps = d.get('precipitation_sum', []) -%}
    {%- set tmax = d.get('temperature_2m_max', []) -%}
    {%- set tmin = d.get('temperature_2m_min', []) -%}
    {%- set wdir = d.get('winddirection_10m_dominant', []) -%}
    {%- set wg = d.get('wind_gusts_10m_max', []) -%}
    {%- set wspd = d.get('windspeed_10m_max', []) -%}
    {%- for i in range(tt|length) -%}
        {%- set dt = (tt[i] | as_datetime | as_local) -%}
        {%- set entry = {
                'datetime': dt|string,
                'condition': condition(w[i]) if i < (w|length) else 'unknown',
                'precipitation_probability': pp[i] if i < (pp|length) else none,
                'precipitation': ps[i] if i < (ps|length) else none,
                'temperature': tmax[i] if i < (tmax|length) else none,
                'templow': tmin[i] if i < (tmin|length) else none,
                'wind_bearing': wdir[i] if i < (wdir|length) else none,
                'wind_gust_speed': wg[i] if i < (wg|length) else none,
                'wind_speed': wspd[i] if i < (wspd|length) else none,
                } -%}
        {%- set out.items = out.items + [entry] -%}
    {%- endfor -%}
    {{- out.items | tojson -}}
{% endmacro %}

{# Hourly forecast template #}
{% macro forecast_hourly(entity, hours=24) %}
    {%- set h = state_attr(entity,'hourly') or {} -%}
    {%- set cur = state_attr(entity,'current') or {} -%}
    {%- set cur_dt = (cur.get('time') | as_datetime(default=none)) -%}
    {%- set tt = h.get('time', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- set w = h.get('weather_code', []) -%}
    {%- set is_day = h.get('is_day', []) -%}
    {%- set at = h.get('apparent_temperature', []) -%}
    {%- set cc = h.get('cloud_cover', []) -%}
    {%- set dp = h.get('dew_point_2m', []) -%}
    {%- set rh = h.get('relative_humidity_2m', []) -%}
    {%- set pp = h.get('precipitation_probability', []) -%}
    {%- set p = h.get('precipitation', []) -%}
    {%- set sp = h.get('surface_pressure', []) -%}
    {%- set t = h.get('temperature_2m', []) -%}
    {%- set uv = h.get('uv_index', []) -%}
    {%- set wdir = h.get('wind_direction_10m', []) -%}
    {%- set wg = h.get('wind_gusts_10m', []) -%}
    {%- set wspd = h.get('wind_speed_10m', []) -%}
    {%- for i in range(tt|length) -%}
        {%- if i >= hours %}
            {%- break -%}
        {%- endif -%}
        {%- set dt = (tt[i] | as_datetime | as_local) -%}
        {%- if cur_dt is none or dt >= (cur_dt | as_local) -%}
            {%- set entry = {
                        'datetime': dt|string,
                        'is_daytime': is_day[i] if i < (is_day|length) else none,
                        'apparent_temperature': at[i] if i < (at|length) else none,
                        'cloud_coverage': cc[i] if i < (cc|length) else none,
                        'condition': condition(w[i], is_day[i] if i < (is_day|length) else none) if i < (w|length) else 'unknown',
                        'dew_point': dp[i] if i < (dp|length) else none,
                        'humidity': rh[i] if i < (rh|length) else none,
                        'precipitation_probability': pp[i] if i < (pp|length) else none,
                        'precipitation': p[i] if i < (p|length) else none,
                        'pressure': sp[i] if i < (sp|length) else none,
                        'temperature': t[i] if i < (t|length) else none,
                        'uv_index': uv[i] if i < (uv|length) else none,
                        'wind_bearing': wdir[i] if i < (wdir|length) else none,
                        'wind_gust_speed': wg[i] if i < (wg|length) else none,
                        'wind_speed': wspd[i] if i < (wspd|length) else none,
                        } -%}
            {%- set out.items = out.items + [entry] -%}
        {%- endif -%}
    {%- endfor -%}
    {{- out.items | tojson -}}
{% endmacro %}
