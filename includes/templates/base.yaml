# ===============================
# Agromonitoring soil sensors
# ===============================
- sensor:
    - name: Soil Temperature at 10cm
      unique_id: soil_temp_10cm
      unit_of_measurement: "°F"
      device_class: temperature
      state_class: measurement
      availability: "{{ has_value('sensor.agromonitoring') and state_attr('sensor.agromonitoring','t10') is not none }}"
      state: >-
        {% from "macros.jinja" import convert_temp %}
        {{ convert_temp(state_attr('sensor.agromonitoring','t10'),'k','f') }}

    - name: Soil Moisture
      unique_id: soil_moisture
      unit_of_measurement: "%"
      device_class: humidity
      state_class: measurement
      availability: "{{ has_value('sensor.agromonitoring') and state_attr('sensor.agromonitoring','moisture') is not none }}"
      state: >-
        {{ state_attr('sensor.agromonitoring','moisture') | float(0) * 100 }}

    - name: Soil Surface Temperature
      unique_id: soil_surface_temp
      unit_of_measurement: "°F"
      device_class: temperature
      state_class: measurement
      availability: "{{ has_value('sensor.agromonitoring') and state_attr('sensor.agromonitoring','t0') is not none }}"
      state: >-
        {% from "macros.jinja" import convert_temp %}
        {{ convert_temp(state_attr('sensor.agromonitoring','t0'),'k','f') }}

# ===============================
# RV connectivity pulse
# ===============================
- binary_sensor:
    - name: RV Online
      unique_id: rv_online
      device_class: connectivity
      availability: "{{ has_value('sensor.rv_last_seen') }}"
      state: "{{ has_value('sensor.rv_last_seen') }}"
      delay_off: "00:02:00"

# ===============================
# Sunny outside (debounced)
# ===============================
- binary_sensor:
    - name: Sunny
      unique_id: sunny_outside
      device_class: light
      delay_on: "00:05:00"
      delay_off: "00:05:00"
      availability: >-
        {{ has_value('sensor.light_sensor_illuminance')
           and state_attr('sun.sun','elevation') is number }}
      state: >-
        {% set elev = state_attr('sun.sun','elevation') | float(0) %}
        {% set ill = states('sensor.light_sensor_illuminance') | float(0) %}
        {{ elev > 3 and ill > 500 }}

# ===============================
# Daytime/Evening without now()
# ===============================
- trigger:
    - platform: state
      entity_id:
        - schedule.daytime
        - schedule.evening
        - input_boolean.daytime_override
        - calendar.holidays_in_united_states
    - platform: time
      at: "06:30:00"
    - platform: time
      at: "18:30:00"
    - platform: time
      at: "20:30:00"
    - platform: time
      at: "00:01:00"

  variables:
    daytime: "{{ states('schedule.daytime') }}"
    evening: "{{ states('schedule.evening') }}"
    override: "{{ states('input_boolean.daytime_override') }}"
    is_holiday: "{{ states('calendar.holidays_in_united_states') }}"

    # Time strings (safe for lexicographic compare)
    t0630: "06:30:00"
    t1830: "18:30:00"
    t2030: "20:30:00"
    hhmmss: "{{ now().strftime('%H:%M:%S') }}"

    # Derived flags using string comparison
    in_holiday_window: "{{ hhmmss >= t0630 and hhmmss < t2030 }}"
    late: "{{ hhmmss >= t1830 }}"

  binary_sensor:
    - name: Daytime
      unique_id: daytime_sensor
      state: >-
        {% set normal_daytime = (daytime == 'on') and (is_holiday != 'on') %}
        {% set holiday_daytime = (is_holiday == 'on') and (in_holiday_window | bool) %}
        {% set no_late_override = not ((override == 'on') and (late | bool)) %}
        {% set special_override = (evening != 'on') and (override == 'on') and not (late | bool) %}
        {{ special_override or ((normal_daytime or holiday_daytime) and no_late_override) }}

    - name: Evening
      unique_id: evening_sensor
      state: >-
        {{ (evening == 'on') or ((override == 'on') and (late | bool)) }}

# ===============================
# Humidity Ratio
# ===============================
- sensor:
    - name: Humidity Ratio
      unique_id: humidity_ratio
      availability: "{{ has_value('sensor.outdoor_thermometer_humidity') and has_value('sensor.downstairs_thermostat_current_humidity') }}"
      state: >-
        {% set a = states('sensor.outdoor_thermometer_humidity') | float(0) %}
        {% set b = states('sensor.downstairs_thermostat_current_humidity') | float(0) %}
        {{ (a / b) if b > 0 else none }}

# ===============================
# Hot Inside / Hot In Study
# ===============================
- binary_sensor:
    - name: Hot Inside
      unique_id: hot_inside
      device_class: heat
      delay_on: "00:15:00"
      delay_off: "00:15:00"
      availability: >-
        {{ has_value('input_number.downstairs_temperature')
            and has_value('sensor.outdoor_thermometer_state')
            and state_attr('climate.downstairs_thermostat','current_temperature') is not none
            and state_attr('climate.upstairs_thermostat','current_temperature') is not none }}
      state: >-
        {% set downstairs = state_attr('climate.downstairs_thermostat','current_temperature') | float(0) %}
        {% set upstairs   = state_attr('climate.upstairs_thermostat','current_temperature')   | float(0) %}
        {% set target     = states('input_number.downstairs_temperature') | float(0) %}
        {% set outdoor    = states('sensor.outdoor_thermometer_state') | float(0) %}
        {{ (downstairs - target > 1 and upstairs - target > 2) or (outdoor > downstairs) }}

    - name: Hot In Study
      unique_id: hot_in_study
      device_class: heat
      delay_on: "00:15:00"
      delay_off: "00:15:00"
      availability: >-
        {{ has_value('sensor.chicken_coop_temperature_state')
            and has_value('sensor.outdoor_thermometer_state')
            and has_value('input_number.downstairs_temperature') }}
      state: >-
        {% set temp         = states('sensor.chicken_coop_temperature_state') | float(0) %}
        {% set outside_temp = states('sensor.outdoor_thermometer_state') | float(0) %}
        {% set target_temp  = states('input_number.downstairs_temperature') | float(0) %}
        {{ temp > target_temp + 1 or outside_temp > temp }}

# ===============================
# Presence delays
# ===============================
- binary_sensor:
    - name: Eleanor Presence Delay
      unique_id: eleanor_presence_delay
      device_class: presence
      delay_off: "01:00:00"
      availability: "{{ has_value('binary_sensor.eleanor_presence_presence_information') }}"
      state: "{{ is_state('binary_sensor.eleanor_presence_presence_information','on') }}"

    - name: Michael Presence Delay
      unique_id: michael_presence_delay
      device_class: presence
      delay_off: "01:00:00"
      availability: "{{ has_value('binary_sensor.michael_presence_presence_information') }}"
      state: "{{ is_state('binary_sensor.michael_presence_presence_information','on') }}"

    - name: Guest Bedroom Presence Delay
      unique_id: guest_bedroom_presence_delay
      device_class: presence
      delay_off: "01:00:00"
      availability: "{{ has_value('binary_sensor.guest_bedroom_presence_presence_sensor_1') }}"
      state: "{{ is_state('binary_sensor.guest_bedroom_presence_presence_sensor_1','on') }}"

# ===============================
# Dehumidifier with power attribute
# ===============================
- binary_sensor:
    - name: Living Room Dehumidifier
      unique_id: living_room_dehumidifier
      device_class: running
      availability: "{{ has_value('switch.living_room_dehumidifier') and has_value('sensor.living_room_dehumidifier_power') }}"
      state: "{{ is_state('switch.living_room_dehumidifier','on') }}"
      attributes:
        power: "{{ states('sensor.living_room_dehumidifier_power') | float(0) }}"

# ===============================
# Before School Time
# ===============================
- trigger:
    # Edges of the window
    - platform: time
      at: "06:00:00"     # window opens
    - platform: time
      at: "08:15:00"     # window closes
    # Recompute month/weekday each day (covers holidays/summer break, etc.)
    - platform: time
      at: "00:02:00"
    # OPTIONAL but recommended: set correct state after a restart
    - platform: homeassistant
      event: start

  binary_sensor:
    - name: Before School Time
      unique_id: before_school_time
      state: >-
        {% set m = now().month %}
        {% set wd = now().weekday() %}  {# Mon=0..Sun=6 #}
        {% set school_year = (m <= 6) or (m >= 9) %}
        {% set is_weekday  = wd <= 4 %}
        {% set in_window = today_at('06:00:00') <= now() <= today_at('08:15:00') %}
        {{ school_year and is_weekday and in_window }}

# ===============================
# Sensor Problems (unchanged logic)
# ===============================
- trigger:
    - platform: time_pattern
      hours: "/3"
  variables:
    problem_list: >-
      {% set sensors = [
        "sensor.acurite_tower_a_11075_temperature",
        "sensor.ambientweather_wh31e_1_167_temperature",
        "sensor.water_barrel_fill_level",
        "light.chicken_coop_light",
        "sensor.outside_brightness",
        "sensor.light_sensor_illuminance",
        "binary_sensor.rain_sensor_moisture",
      ] %}
      {% set ns = namespace(data=[]) %}
      {% for s in sensors %}
        {% if not has_value(s) %}
          {% set ns.data = ns.data + [s] %}
        {% endif %}
      {% endfor %}
      {{ ns.data }}
  binary_sensor:
    - name: Sensor Problems
      unique_id: c84e48cc-b07f-47e2-8413-4752866332f2
      state: "{{ 'on' if problem_list | count > 0 else 'off' }}"
      attributes:
        problems: "{{ problem_list }}"

# ===============================
# Dark Outside (keep your hysteresis)
# ===============================
- trigger:
    - platform: state
      entity_id: sensor.light_sensor_illuminance
  variables:
    ill: "{{ states('sensor.light_sensor_illuminance') | float(0) if has_value('sensor.light_sensor_illuminance') else none }}"
  binary_sensor:
    - name: Dark Outside
      unique_id: c0fa4158-6312-45d3-bdd3-74f224d8d71a
      state: >-
        {% set was_dark = (this.state | default('off') | string | lower) == 'on' %}
        {% if ill is not none %}
          {{ ill < 30 or (was_dark and ill < 150) }}
        {% else %} false {% endif %}

# ===============================
# “Remembered state” sensors
# ===============================
- trigger:
    - platform: state
      entity_id: sensor.everything_presence_one_6dbad0_illuminance
  sensor:
    - name: Living Room Illuminance State
      unique_id: 68f8d798-079f-4a74-9a67-6f65c7943068
      device_class: illuminance
      unit_of_measurement: lx
      state_class: measurement
      availability: "{{ has_value('sensor.everything_presence_one_6dbad0_illuminance') and has_value(this.entity_id) }}"
      state: >-
        {% set s = trigger.to_state.state %}
        {% if s not in ['unknown','unavailable','none',''] %} {{ s | float(0) }}
        {% else %} {{ states(this.entity_id) }} {% endif %}

- trigger:
    - platform: state
      entity_id: sensor.acurite_tower_a_11075_temperature
  sensor:
    - name: Outside Temperature State
      unique_id: 25bd1829-8f7e-4a37-bf23-f71626347eb3
      device_class: temperature
      unit_of_measurement: "°F"
      state_class: measurement
      availability: "{{ has_value('sensor.acurite_tower_a_11075_temperature') or (this.state not in ['unknown','unavailable']) }}"
      state: >-
        {% set v = states('sensor.acurite_tower_a_11075_temperature') | float(none) %}
        {{ this.state if v is none else v }}

- trigger:
    - platform: state
      entity_id: sensor.acurite_tower_a_11075_humidity
  sensor:
    - name: Outside Humidity State
      unique_id: ed61e0eb-7172-4572-8958-c41a897d0d89
      device_class: humidity
      unit_of_measurement: "%"
      state_class: measurement
      availability: "{{ has_value('sensor.acurite_tower_a_11075_humidity') or (this.state not in ['unknown','unavailable']) }}"
      state: >-
        {% set v = states('sensor.acurite_tower_a_11075_humidity') | float(none) %}
        {{ this.state if v is none else v }}

- trigger:
    - platform: state
      entity_id: sensor.outside_water_temperature
  sensor:
    - name: Outside Water Temperature State
      unique_id: fb3bcf0e-1bc8-45dc-acdd-a5f11fac05c2
      device_class: temperature
      unit_of_measurement: "°F"
      state_class: measurement
      availability: "{{ has_value('sensor.outside_water_temperature') or (this.state not in ['unknown','unavailable']) }}"
      state: >-
        {% set v = states('sensor.outside_water_temperature') | float(none) %}
        {{ this.state if v is none else v }}

- trigger:
    - platform: state
      entity_id: sensor.outside_water_humidity
  sensor:
    - name: Outside Water Humidity State
      unique_id: 89455e7d-1d4c-4ecd-a9ea-3cb9b9f74997
      device_class: humidity
      unit_of_measurement: "%"
      state_class: measurement
      availability: "{{ has_value('sensor.outside_water_humidity') or (this.state not in ['unknown','unavailable']) }}"
      state: >-
        {% set v = states('sensor.outside_water_humidity') | float(none) %}
        {{ this.state if v is none else v }}

- trigger:
    - platform: state
      entity_id: sensor.outside_water_pressure
  sensor:
    - name: Outside Water Pressure State
      unique_id: 67d0b02d-a93e-4799-ad20-b02387b0b8ff
      device_class: pressure
      unit_of_measurement: "psi"
      state_class: measurement
      availability: "{{ has_value('sensor.outside_water_pressure') or (this.state not in ['unknown','unavailable']) }}"
      state: >-
        {% set v = states('sensor.outside_water_pressure') | float(none) %}
        {{ this.state if v is none else v }}

- trigger:
    - platform: state
      entity_id: sensor.chicken_coop_thermometer_temperature
  sensor:
    - name: Chicken Coop Temperature State
      unique_id: 5da7be2a-6a60-4c1f-9d2a-cc-coop-temp-state
      device_class: temperature
      unit_of_measurement: "°F"
      state_class: measurement
      availability: "{{ has_value('sensor.chicken_coop_thermometer_temperature') or (this.state not in ['unknown','unavailable']) }}"
      state: >-
        {% set v = states('sensor.chicken_coop_thermometer_temperature') | float(none) %}
        {{ this.state if v is none else v }}

- trigger:
    - platform: state
      entity_id: light.living_room_light
  sensor:
    - name: Living Room Brightness
      unique_id: 6f4c1c46-51a1-47c4-bb9e-lr-brightness
      unit_of_measurement: "%"
      state_class: measurement
      availability: "{{ has_value('light.living_room_light') or (this.state not in ['unknown','unavailable']) }}"
      state: >-
        {% set v = state_attr('light.living_room_light','brightness') | float(none) %}
        {{ this.state if v is none else v }}

# ===============================
# Zwift summaries (trigger on zwift entity)
# ===============================
- trigger:
    - platform: state
      entity_id: sensor.zwift_online_1747373
  variables:
    z_totalDistance: "{{ state_attr('sensor.zwift_online_1747373','totalDistance') }}"
    z_totalClimbed: "{{ state_attr('sensor.zwift_online_1747373','totalDistanceClimbed') }}"
    z_totalMinutes: "{{ state_attr('sensor.zwift_online_1747373','totalTimeInMinutes') }}"
    z_totalWh: "{{ state_attr('sensor.zwift_online_1747373','totalWattHours') }}"
  sensor:
    - name: Zwift Total Distance
      unique_id: 016f58ec-6828-4ea3-8944-8aa9c6232b2d
      device_class: distance
      unit_of_measurement: "m"
      availability: "{{ z_totalDistance is not none }}"
      state: "{{ z_totalDistance | float(0) }}"

    - name: Zwift Total Elevation
      unique_id: 2e2493a3-e7a6-474c-ae5f-c76b0675ae25
      device_class: distance
      unit_of_measurement: "m"
      availability: "{{ z_totalClimbed is not none }}"
      state: "{{ z_totalClimbed | float(0) }}"

    - name: Zwift Total Duration
      unique_id: 8ac7c658-a3d0-4ad1-9b02-bc2fdbcdc08d
      device_class: duration
      unit_of_measurement: "min"
      availability: "{{ z_totalMinutes is not none }}"
      state: "{{ z_totalMinutes | float(0) }}"

    - name: Zwift Total Energy
      unique_id: aa72cc1b-af92-4e52-aca4-fb1c8bdcff54
      device_class: energy
      unit_of_measurement: "Wh"
      availability: "{{ z_totalWh is not none }}"
      state: "{{ z_totalWh | float(0) }}"

# ===============================
# Deco AP statuses
# ===============================
- trigger:
    - platform: state
      entity_id:
        - device_tracker.roof_deco
        - device_tracker.gym_deco
        - device_tracker.hallway_deco
        - device_tracker.study_deco
        - device_tracker.living_room_deco
        - device_tracker.playroom_deco
  sensor:
    - name: Roof AP
      unique_id: b6de94e8-cba9-4a06-ae0d-4e2c0197417e
      state: "{{ 'Online' if state_attr('device_tracker.roof_deco','internet_online') | default(false) else 'Offline' }}"

    - name: Gym AP
      unique_id: a2fadd1d-9ee4-4a36-880a-cd8b5115ec80
      state: "{{ 'Online' if state_attr('device_tracker.gym_deco','internet_online') | default(false) else 'Offline' }}"

    - name: Hallway AP
      unique_id: e1a1d9fc-958d-4d84-b9d0-8f2b0ab5ef35
      state: "{{ 'Online' if state_attr('device_tracker.hallway_deco','internet_online') | default(false) else 'Offline' }}"

    - name: Study AP
      unique_id: 34f82a27-0db8-43d9-9917-25048b9198dd
      state: "{{ 'Online' if state_attr('device_tracker.study_deco','internet_online') | default(false) else 'Offline' }}"

    - name: Living Room AP
      unique_id: eb8f39cd-3871-4250-b2c8-9ac910e1c431
      state: "{{ 'Online' if state_attr('device_tracker.living_room_deco','internet_online') | default(false) else 'Offline' }}"

    - name: Playroom AP
      unique_id: 0f795220-650e-4594-90b4-d472a473954d
      state: "{{ 'Online' if state_attr('device_tracker.playroom_deco','internet_online') | default(false) else 'Offline' }}"

# ===============================
# Outside Brightness estimator
# ===============================
- trigger:
    - platform: state
      entity_id:
        - sensor.light_sensor_illuminance
        - sensor.solar_irradiance
  variables:
    illuminance: "{{ states('sensor.light_sensor_illuminance') | float(0) }}"
    irradiance: "{{ [states('sensor.solar_irradiance') | float(0), 1] | max }}"
  sensor:
    - name: Outside Brightness
      unique_id: a482977f-5b03-46ee-b044-6b9dbd9356c4
      unit_of_measurement: "lm/W"
      state: "{{ illuminance / irradiance }}"

# ===============================
# Gas usage meters from on-time
# ===============================
- trigger:
    - platform: state
      entity_id:
        - sensor.furnace_on_time
        - sensor.dryer_on_time
        - sensor.water_heater_on_time
        - sensor.gas_stove_on_time
        - sensor.shop_furnace_on_time
  sensor:
    - name: Furnace Gas Meter
      unique_id: 74d06442-77b6-45e2-ac72-704302dc3bb0
      device_class: gas
      unit_of_measurement: "ft³"
      state_class: total_increasing
      state: "{{ 135000/1030 * (states('sensor.furnace_on_time') | float(0)) }}"

    - name: Dryer Gas Meter
      unique_id: 96d9023a-fbdf-4d5a-a9c7-2070541b50a7
      device_class: gas
      unit_of_measurement: "ft³"
      state_class: total_increasing
      state: "{{ 20000/1030 * (states('sensor.dryer_on_time') | float(0)) }}"

    - name: Water Heater Gas Meter
      unique_id: 1ce243d6-6c82-4da1-a890-e74c99a3543d
      device_class: gas
      unit_of_measurement: "ft³"
      state_class: total_increasing
      state: "{{ 30000/1030 * (states('sensor.water_heater_on_time') | float(0)) }}"

    - name: Gas Stove Gas Meter
      unique_id: 963f1388-0ad8-43b2-87eb-9093b9c50a12
      device_class: gas
      unit_of_measurement: "ft³"
      state_class: total_increasing
      state: "{{ 25000/1030 * (states('sensor.gas_stove_on_time') | float(0)) }}"

    - name: Shop Furnace Gas Meter
      unique_id: c92b0c65-86dc-47ff-8fa6-a2e85c440472
      device_class: gas
      unit_of_measurement: "ft³"
      state_class: total_increasing
      state: "{{ 45000/1030 * (states('sensor.shop_furnace_on_time') | float(0)) }}"

# ===============================
# Utility bill estimators
# ===============================
- trigger:
    - platform: state
      entity_id:
        - sensor.gas_meter_relay
        - sensor.electric_meter_relay
        - sensor.water_meter_relay
  sensor:
    - name: Gas Cost
      unique_id: e0b00d3a-3b42-465c-ae4e-cbf3616282c3
      device_class: monetary
      state_class: total
      unit_of_measurement: "USD"
      state: >-
        {% set x = (states('sensor.gas_meter_relay') | float(0)) / 97.25 %}
        {{ 22.06 + 1.0106*x if x <= 50 else 46.58 + 0.48886*x }}
      attributes:
        last_reset: "{{ state_attr('sensor.gas_meter_relay', 'last_reset') }}"

    - name: Electric Cost
      unique_id: 67eca815-749f-48fc-8340-1cea9d8d0fb8
      device_class: monetary
      state_class: total
      unit_of_measurement: "USD"
      state: >-
        {% set x = states('sensor.electric_meter_relay') | float(0) %}
        {{ 17.87 + 0.16008*x }}
      attributes:
        last_reset: "{{ state_attr('sensor.electric_meter_relay', 'last_reset') }}"

    - name: Water Cost
      unique_id: 648cf2dd-8bcc-4053-8e67-e3cf8d1e68d4
      device_class: monetary
      state_class: total
      unit_of_measurement: "USD"
      state: >-
        {% set x = states('sensor.water_meter_relay') | float(0) %}
        {% if x < 10000 %}
          {{ 76.00 }}
        {% elif x < 56600 %}
          {{ 76.00 + 0.0038*x }}
        {% elif x < 66600 %}
          {{ 291.08 + 0.00345*x }}
        {% else %}
          {{ 520.85 + 0.00259*x }}
        {% endif %}
      attributes:
        last_reset: "{{ state_attr('sensor.water_meter_relay', 'last_reset') }}"

# ===============================
# Binary “heating state” sensors
# ===============================
- trigger:
    - platform: state
      entity_id:
        - climate.downstairs_thermostat
        - sensor.dryer_power
        - sensor.water_heater_outlet_power
        - switch.gas_stove_switch
        - sensor.shop_furnace_switch_0_power
  binary_sensor:
    - name: Furnace Heating State
      unique_id: 17153591-c1d1-4add-a5ca-912d07c0e565
      state: "{{ is_state_attr('climate.downstairs_thermostat','hvac_action','heating') }}"

    - name: Dryer Heating State
      unique_id: b8a31303-7c0f-4a7a-b2e0-61b08a952554
      state: "{{ states('sensor.dryer_power') | float(0) > 10 }}"

    - name: Water Heater Heating State
      unique_id: b7542d0c-494d-45f9-8c39-0800563c0882
      state: "{{ states('sensor.water_heater_outlet_power') | float(0) > 10 }}"

    - name: Gas Stove Heating State
      unique_id: ceb9eb23-7a53-4457-ac14-2a4e03b4641c
      state: "{{ is_state('switch.gas_stove_switch','on') }}"

    - name: Shop Furnace Heating State
      unique_id: 77f0102b-5adc-4e39-b3fa-89631cab7132
      state: "{{ states('sensor.shop_furnace_switch_0_power') | float(0) > 10 }}"

# ===============================
# Platform battery select and level
# ===============================
- trigger:
    - platform: state
      entity_id: sensor.platform_battery_monitor_voltmeter
  variables:
    vbat: "{{ states('sensor.platform_battery_monitor_voltmeter') | float(0) }}"
  select:
    - name: Platform Battery State
      unique_id: 1858d33c-76d8-4168-a220-fe9234e88cc0
      availability: "{{ has_value('sensor.platform_battery_monitor_voltmeter') }}"
      state: >-
        {% if vbat > 13 %} charging
        {% elif vbat < 12 %} needs charging
        {% else %} discharging
        {% endif %}
      options: "['unavailable','unknown','charging','needs charging','discharging']"
      select_option: []

  sensor:
    - name: Platform Battery Level
      unique_id: 7f7b8a9a-4984-4bf9-9a8a-platform-batt-level
      device_class: battery
      unit_of_measurement: "%"
      availability: "{{ has_value('sensor.platform_battery_monitor_voltmeter') }}"
      state: "{{ 22.6757 * vbat**2 - 476.19 * vbat + 2500 }}"

# ===============================
# Home/Person/RV lat/lon helpers
# ===============================
- trigger:
    - platform: state
      entity_id:
        - zone.home
        - person.aaron_watson
        - device_tracker.rv_device_tracker
  sensor:
    - name: Home Latitude
      unique_id: helper_home_lat
      icon: mdi:home-map-marker
      availability: "{{ state_attr('zone.home','latitude') is not none }}"
      state: "{{ state_attr('zone.home','latitude') | float(0) }}"

    - name: Home Longitude
      unique_id: helper_home_lon
      icon: mdi:home-map-marker
      availability: "{{ state_attr('zone.home','longitude') is not none }}"
      state: "{{ state_attr('zone.home','longitude') | float(0) }}"

    - name: Aaron Latitude
      unique_id: helper_aaron_lat
      icon: mdi:account
      availability: "{{ state_attr('person.aaron_watson','latitude') is not none }}"
      state: "{{ state_attr('person.aaron_watson','latitude') | float(0) }}"

    - name: Aaron Longitude
      unique_id: helper_aaron_lon
      icon: mdi:account
      availability: "{{ state_attr('person.aaron_watson','longitude') is not none }}"
      state: "{{ state_attr('person.aaron_watson','longitude') | float(0) }}"

    - name: RV Latitude
      unique_id: helper_rv_lat
      icon: mdi:van-passenger
      availability: "{{ state_attr('device_tracker.rv_device_tracker','latitude') is not none }}"
      state: "{{ state_attr('device_tracker.rv_device_tracker','latitude') | float(0) }}"

    - name: RV Longitude
      unique_id: helper_rv_lon
      icon: mdi:van-passenger
      availability: "{{ state_attr('device_tracker.rv_device_tracker','longitude') is not none }}"
      state: "{{ state_attr('device_tracker.rv_device_tracker','longitude') | float(0) }}"

# ===============================
# Brightness from lights
# ===============================
- trigger:
    - platform: state
      entity_id:
        - light.chicken_coop_light
        - light.dining_room_light
  sensor:
    - name: Chicken Coop Light Brightness
      unique_id: 9a9f9f9b-cc1c-4d7b-a1b0-coop-bright
      unit_of_measurement: "%"
      state_class: measurement
      availability: "{{ has_value('light.chicken_coop_light') }}"
      state: "{{ state_attr('light.chicken_coop_light','brightness') | float(0) * 100 / 255 }}"

    - name: Dining Room Brightness
      unique_id: 8f8e8e8a-bb1c-4c7a-9c1a-dining-bright
      unit_of_measurement: "%"
      state_class: measurement
      availability: "{{ has_value('light.dining_room_light') }}"
      state: "{{ state_attr('light.dining_room_light','brightness') | float(0) * 100 / 255 }}"

# ===============================
# Mains Current
# ===============================
- trigger:
    - platform: state
      entity_id: sensor.none_123_1min
  sensor:
    - name: Mains Current
      unique_id: 7a7f7f7e-aa11-44cc-9922-mains-current
      device_class: current
      unit_of_measurement: A
      state_class: measurement
      availability: "{{ has_value('sensor.none_123_1min') }}"
      state: "{{ states('sensor.none_123_1min') | float(0) / 240 }}"

# ===============================
# Updates Available
# ===============================
- trigger:
    - platform: time_pattern
      minutes: "/5"
  binary_sensor:
    - name: Updates Available
      unique_id: 5c2d7a68-1b7a-4a6c-9d88-updates-avail
      state: >-
        {{ expand(states) | selectattr('domain','eq','update')
           | selectattr('state','eq','on') | map(attribute='entity_id') | list | length > 0 }}

# ===============================
# Rain probe “fresh” pulse and Rainy
# ===============================
- trigger:
    - platform: state
      entity_id: binary_sensor.rain_sensor_moisture
  binary_sensor:
    - name: Rain Probe Fresh
      unique_id: rain_probe_fresh
      icon: mdi:timer-sand
      availability: "{{ has_value('binary_sensor.rain_sensor_moisture') }}"
      state: "{{ trigger.platform == 'state' }}"
      delay_off: "00:30:00"

- trigger:
    - platform: state
      entity_id:
        - binary_sensor.rain_sensor_moisture
        - binary_sensor.rain_probe_fresh
        - binary_sensor.sunny
        - weather.openmeteo_weather_home
  variables:
    probe_ok: "{{ has_value('binary_sensor.rain_sensor_moisture') and is_state('binary_sensor.rain_probe_fresh','on') }}"
    wx: "{{ states('weather.openmeteo_weather_home') }}"
  binary_sensor:
    - name: Rainy
      unique_id: 9f9df0b1-2f45-4c86-8e6d-rainy-sensor
      device_class: moisture
      icon: "{{ 'mdi:weather-pouring' if is_state(this.entity_id,'on') else 'mdi:weather-partly-cloudy' }}"
      availability: "{{ has_value('binary_sensor.rain_sensor_moisture') or has_value('binary_sensor.sunny') or has_value('weather.openmeteo_weather_home') }}"
      state: >-
        {% if probe_ok %}
          {{ is_state('binary_sensor.rain_sensor_moisture','on') }}
        {% else %}
          {% set rainy_states = ['rainy','pouring','lightning-rainy'] %}
          {{ (not is_state('binary_sensor.sunny','on')) and (wx in rainy_states) }}
        {% endif %}
      delay_on: "00:00:30"
      delay_off: "00:05:00"
      attributes:
        source_used: "{{ 'moisture_sensor' if probe_ok else 'fallback_weather_sunny' }}"
        probe_last_changed: >-
          {% if states.binary_sensor.rain_sensor_moisture is defined %}
            {{ states.binary_sensor.rain_sensor_moisture.last_changed }}
          {% else %} none {% endif %}
        weather_state: "{{ states('weather.forecast_home') }}"

# ===============================
# Mold Status and Upstairs HVAC action
# ===============================
- trigger:
    - platform: state
      entity_id:
        - sensor.mold_indicator
        - climate.upstairs_thermostat
  select:
    - name: Mold Status
      unique_id: 3aa1d55e-ff34-4f5f-9c1a-mold-status
      availability: "{{ has_value('sensor.mold_indicator') }}"
      state: >-
        {% set s = states('sensor.mold_indicator') | float(0) %}
        {{ 'OK' if s < 70 else 'High' if s < 100 else 'Wet' }}
      options: "['OK','High','Wet']"
      select_option: []

    - name: Upstairs HVAC Action
      unique_id: 4bb2e66f-44aa-43c1-b3f1-upstairs-hvac-action
      availability: "{{ has_value('climate.upstairs_thermostat') }}"
      state: "{{ state_attr('climate.upstairs_thermostat','hvac_action') }}"
      options: "['cooling','drying','fan_only','idle','off']"
      select_option: []
