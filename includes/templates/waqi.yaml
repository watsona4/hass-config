# ===================== WAQI: Nearby =====================
- trigger:
    - platform: state
      entity_id: sensor.waqi_nearby
  variables:
    src: "sensor.waqi_nearby"
  sensor:
    - name: WAQI Nearby AQI
      unique_id: waqi_nearby_aqi
      device_class: aqi
      state_class: measurement
      availability: "{{ has_value(src) and (states(src) | float(none)) is not none }}"
      state: "{{ states(src) | int(default=none) }}"
      attributes:
        station: "{{ (state_attr(src,'city') or {}).get('name') }}"
        dominentpol: "{{ state_attr(src,'dominentpol') }}"
        last_update: "{{ (state_attr(src,'time') or {}).get('s') }}"
        attributions: "{{ state_attr(src,'attributions') }}"

    - name: WAQI Nearby PM2.5
      unique_id: waqi_nearby_pm2_5
      device_class: pm25
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('pm25') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('pm25') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby Temperature
      unique_id: waqi_nearby_temperature
      device_class: temperature
      unit_of_measurement: "°C"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('t') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('t') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby Humidity
      unique_id: waqi_nearby_humidity
      device_class: humidity
      unit_of_measurement: "%"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('h') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('h') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby Wind Speed
      unique_id: waqi_nearby_wind_speed
      device_class: wind_speed
      unit_of_measurement: "m/s"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('w') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('w') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby Wind Gust
      unique_id: waqi_nearby_wind_gust
      device_class: wind_speed
      unit_of_measurement: "m/s"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('wg') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('wg') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby O3
      unique_id: waqi_nearby_o3
      device_class: ozone
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('o3') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('o3') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby CO
      unique_id: waqi_nearby_co
      device_class: carbon_monoxide
      unit_of_measurement: "ppm"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('co') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('co') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby PM10
      unique_id: waqi_nearby_pm10
      device_class: pm10
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('pm10') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('pm10') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby NO2
      unique_id: waqi_nearby_no2
      device_class: nitrogen_dioxide
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('no2') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('no2') or {}).get('v') | float(default=none) }}"

    - name: WAQI Nearby SO2
      unique_id: waqi_nearby_so2
      device_class: sulphur_dioxide
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('so2') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('so2') or {}).get('v') | float(default=none) }}"

# Forecast tiles for Nearby (recompute on WAQI change or at midnight via sensor.date)
- trigger:
    - platform: state
      entity_id:
        - sensor.waqi_nearby
        - sensor.date
  variables:
    src: "sensor.waqi_nearby"
    today_iso: "{{ states('sensor.date') }}"   # YYYY-MM-DD
    tomorrow_iso: >-
      {% set d = states('sensor.date') | as_datetime(default=none) %}
      {{ (d + timedelta(days=1)).date().isoformat() if d else none }}
    aqi_days: >-
      {% from 'env/aqi.jinja' import aqi_from_pm, name, color, level as sev %}
      {% set f = (state_attr(src, 'forecast') or {}) %}
      {% set daily = f.get('daily') or {} %}
      {% set d25 = daily.get('pm25') or [] %}
      {% set d10 = daily.get('pm10') or [] %}
      {% set dates = ((d25 | map(attribute='day') | list) + (d10 | map(attribute='day') | list))
                      | select('string') | unique | list | sort %}
      {% set dates = dates | select('ge', today_iso) | list %}
      {% set out = namespace(list=[]) %}
      {% for day in dates %}
        {% set m25 = d25 | selectattr('day','equalto',day) | list %}
        {% set m10 = d10 | selectattr('day','equalto',day) | list %}
        {% set v25 = (m25[0].get('avg') | float(none)) if (m25|count)>0 else none %}
        {% set v10 = (m10[0].get('avg') | float(none)) if (m10|count)>0 else none %}
        {% set have = (v25 is number) or (v10 is number) %}
        {% set aqi = (aqi_from_pm(v25, v10) | int(0)) if have else none %}
        {% set label = name(aqi) if aqi is not none else 'unknown' %}
        {% set hex = color(aqi) if aqi is not none else '#9e9e9e' %}
        {% set level = sev(aqi) if aqi is not none else 0 %}
        {% set dts = day | as_datetime(default=none) %}
        {% set wd  = (dts.strftime('%A') if dts else day) %}
        {% set title = 'Today' if day == today_iso else ('Tomorrow' if day == tomorrow_iso else wd) %}
        {% set item = {
          'exists': have, 'date': day, 'title': title, 'state': label,
          'aqi': aqi, 'hex': hex, 'level': level
        } %}
        {% set out.list = out.list + [item] %}
      {% endfor %}
      {{ out.list }}
  sensor:
    - name: AQI Forecast Nearby Day 0
      unique_id: aqi_forecast_nearby_day_0
      icon: mdi:calendar-today
      availability: "{{ (aqi_days|count) > 0 and ((aqi_days[0] or {}).get('exists')) }}"
      state: "{{ (aqi_days[0] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[0] or {}).get('date') }}"
        title: "{{ (aqi_days[0] or {}).get('title') }}"
        aqi: "{{ (aqi_days[0] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[0] or {}).get('hex') }}"
        level: "{{ (aqi_days[0] or {}).get('level') }}"

    - name: AQI Forecast Nearby Day 1
      unique_id: aqi_forecast_nearby_day_1
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 1 and ((aqi_days[1] or {}).get('exists')) }}"
      state: "{{ (aqi_days[1] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[1] or {}).get('date') }}"
        title: "{{ (aqi_days[1] or {}).get('title') }}"
        aqi: "{{ (aqi_days[1] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[1] or {}).get('hex') }}"
        level: "{{ (aqi_days[1] or {}).get('level') }}"

    - name: AQI Forecast Nearby Day 2
      unique_id: aqi_forecast_nearby_day_2
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 2 and ((aqi_days[2] or {}).get('exists')) }}"
      state: "{{ (aqi_days[2] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[2] or {}).get('date') }}"
        title: "{{ (aqi_days[2] or {}).get('title') }}"
        aqi: "{{ (aqi_days[2] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[2] or {}).get('hex') }}"
        level: "{{ (aqi_days[2] or {}).get('level') }}"

    - name: AQI Forecast Nearby Day 3
      unique_id: aqi_forecast_nearby_day_3
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 3 and ((aqi_days[3] or {}).get('exists')) }}"
      state: "{{ (aqi_days[3] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[3] or {}).get('date') }}"
        title: "{{ (aqi_days[3] or {}).get('title') }}"
        aqi: "{{ (aqi_days[3] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[3] or {}).get('hex') }}"
        level: "{{ (aqi_days[3] or {}).get('level') }}"

    - name: AQI Forecast Nearby Day 4
      unique_id: aqi_forecast_nearby_day_4
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 4 and ((aqi_days[4] or {}).get('exists')) }}"
      state: "{{ (aqi_days[4] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[4] or {}).get('date') }}"
        title: "{{ (aqi_days[4] or {}).get('title') }}"
        aqi: "{{ (aqi_days[4] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[4] or {}).get('hex') }}"
        level: "{{ (aqi_days[4] or {}).get('level') }}"

# ===================== WAQI: Home =====================
- trigger:
    - platform: state
      entity_id: sensor.waqi_home
  variables:
    src: "sensor.waqi_home"
  sensor:
    - name: WAQI Home AQI
      unique_id: waqi_home_aqi
      device_class: aqi
      state_class: measurement
      availability: "{{ has_value(src) and (states(src) | float(none)) is not none }}"
      state: "{{ states(src) | int(default=none) }}"
      attributes:
        station: "{{ (state_attr(src,'city') or {}).get('name') }}"
        dominentpol: "{{ state_attr(src,'dominentpol') }}"
        last_update: "{{ (state_attr(src,'time') or {}).get('s') }}"
        attributions: "{{ state_attr(src,'attributions') }}"

    - name: WAQI Home PM2.5
      unique_id: waqi_home_pm2_5
      device_class: pm25
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('pm25') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('pm25') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home Temperature
      unique_id: waqi_home_temperature
      device_class: temperature
      unit_of_measurement: "°C"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('t') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('t') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home Humidity
      unique_id: waqi_home_humidity
      device_class: humidity
      unit_of_measurement: "%"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('h') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('h') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home Wind Speed
      unique_id: waqi_home_wind_speed
      device_class: wind_speed
      unit_of_measurement: "m/s"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('w') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('w') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home Wind Gust
      unique_id: waqi_home_wind_gust
      device_class: wind_speed
      unit_of_measurement: "m/s"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('wg') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('wg') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home O3
      unique_id: waqi_home_o3
      device_class: ozone
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('o3') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('o3') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home CO
      unique_id: waqi_home_co
      device_class: carbon_monoxide
      unit_of_measurement: "ppm"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('co') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('co') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home PM10
      unique_id: waqi_home_pm10
      device_class: pm10
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('pm10') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('pm10') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home NO2
      unique_id: waqi_home_no2
      device_class: nitrogen_dioxide
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('no2') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('no2') or {}).get('v') | float(default=none) }}"

    - name: WAQI Home SO2
      unique_id: waqi_home_so2
      device_class: sulphur_dioxide
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('so2') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('so2') or {}).get('v') | float(default=none) }}"

# Forecast tiles for Home
- trigger:
    - platform: state
      entity_id:
        - sensor.waqi_home
        - sensor.date
  variables:
    src: "sensor.waqi_home"
    today_iso: "{{ states('sensor.date') }}"
    tomorrow_iso: >-
      {% set d = states('sensor.date') | as_datetime(default=none) %}
      {{ (d + timedelta(days=1)).date().isoformat() if d else none }}
    aqi_days: >-
      {% from 'env/aqi.jinja' import aqi_from_pm, name, color, level as sev %}
      {% set f = (state_attr(src, 'forecast') or {}) %}
      {% set daily = f.get('daily') or {} %}
      {% set d25 = daily.get('pm25') or [] %}
      {% set d10 = daily.get('pm10') or [] %}
      {% set dates = ((d25 | map(attribute='day') | list) + (d10 | map(attribute='day') | list))
                      | select('string') | unique | list | sort %}
      {% set dates = dates | select('ge', today_iso) | list %}
      {% set out = namespace(list=[]) %}
      {% for day in dates %}
        {% set m25 = d25 | selectattr('day','equalto',day) | list %}
        {% set m10 = d10 | selectattr('day','equalto',day) | list %}
        {% set v25 = (m25[0].get('avg') | float(none)) if (m25|count)>0 else none %}
        {% set v10 = (m10[0].get('avg') | float(none)) if (m10|count)>0 else none %}
        {% set have = (v25 is number) or (v10 is number) %}
        {% set aqi = (aqi_from_pm(v25, v10) | int(0)) if have else none %}
        {% set label = name(aqi) if aqi is not none else 'unknown' %}
        {% set hex = color(aqi) if aqi is not none else '#9e9e9e' %}
        {% set level = sev(aqi) if aqi is not none else 0 %}
        {% set dts = day | as_datetime(default=none) %}
        {% set wd  = (dts.strftime('%A') if dts else day) %}
        {% set title = 'Today' if day == today_iso else ('Tomorrow' if day == tomorrow_iso else wd) %}
        {% set item = {
          'exists': have, 'date': day, 'title': title, 'state': label,
          'aqi': aqi, 'hex': hex, 'level': level
        } %}
        {% set out.list = out.list + [item] %}
      {% endfor %}
      {{ out.list }}
  sensor:
    - name: AQI Forecast Home Day 0
      unique_id: aqi_forecast_home_day_0
      icon: mdi:calendar-today
      availability: "{{ (aqi_days|count) > 0 and ((aqi_days[0] or {}).get('exists')) }}"
      state: "{{ (aqi_days[0] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[0] or {}).get('date') }}"
        title: "{{ (aqi_days[0] or {}).get('title') }}"
        aqi: "{{ (aqi_days[0] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[0] or {}).get('hex') }}"
        level: "{{ (aqi_days[0] or {}).get('level') }}"

    - name: AQI Forecast Home Day 1
      unique_id: aqi_forecast_home_day_1
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 1 and ((aqi_days[1] or {}).get('exists')) }}"
      state: "{{ (aqi_days[1] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[1] or {}).get('date') }}"
        title: "{{ (aqi_days[1] or {}).get('title') }}"
        aqi: "{{ (aqi_days[1] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[1] or {}).get('hex') }}"
        level: "{{ (aqi_days[1] or {}).get('level') }}"

    - name: AQI Forecast Home Day 2
      unique_id: aqi_forecast_home_day_2
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 2 and ((aqi_days[2] or {}).get('exists')) }}"
      state: "{{ (aqi_days[2] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[2] or {}).get('date') }}"
        title: "{{ (aqi_days[2] or {}).get('title') }}"
        aqi: "{{ (aqi_days[2] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[2] or {}).get('hex') }}"
        level: "{{ (aqi_days[2] or {}).get('level') }}"

    - name: AQI Forecast Home Day 3
      unique_id: aqi_forecast_home_day_3
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 3 and ((aqi_days[3] or {}).get('exists')) }}"
      state: "{{ (aqi_days[3] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[3] or {}).get('date') }}"
        title: "{{ (aqi_days[3] or {}).get('title') }}"
        aqi: "{{ (aqi_days[3] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[3] or {}).get('hex') }}"
        level: "{{ (aqi_days[3] or {}).get('level') }}"

    - name: AQI Forecast Home Day 4
      unique_id: aqi_forecast_home_day_4
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 4 and ((aqi_days[4] or {}).get('exists')) }}"
      state: "{{ (aqi_days[4] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[4] or {}).get('date') }}"
        title: "{{ (aqi_days[4] or {}).get('title') }}"
        aqi: "{{ (aqi_days[4] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[4] or {}).get('hex') }}"
        level: "{{ (aqi_days[4] or {}).get('level') }}"

# ===================== WAQI: RV =====================
- trigger:
    - platform: state
      entity_id: sensor.waqi_rv
  variables:
    src: "sensor.waqi_rv"
  sensor:
    - name: WAQI RV AQI
      unique_id: waqi_rv_aqi
      device_class: aqi
      state_class: measurement
      availability: "{{ has_value(src) and (states(src) | float(none)) is not none }}"
      state: "{{ states(src) | int(default=none) }}"
      attributes:
        station: "{{ (state_attr(src,'city') or {}).get('name') }}"
        dominentpol: "{{ state_attr(src,'dominentpol') }}"
        last_update: "{{ (state_attr(src,'time') or {}).get('s') }}"
        attributions: "{{ state_attr(src,'attributions') }}"

    - name: WAQI RV PM2.5
      unique_id: waqi_rv_pm2_5
      device_class: pm25
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('pm25') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('pm25') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV Temperature
      unique_id: waqi_rv_temperature
      device_class: temperature
      unit_of_measurement: "°C"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('t') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('t') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV Humidity
      unique_id: waqi_rv_humidity
      device_class: humidity
      unit_of_measurement: "%"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('h') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('h') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV Wind Speed
      unique_id: waqi_rv_wind_speed
      device_class: wind_speed
      unit_of_measurement: "m/s"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('w') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('w') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV Wind Gust
      unique_id: waqi_rv_wind_gust
      device_class: wind_speed
      unit_of_measurement: "m/s"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('wg') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('wg') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV O3
      unique_id: waqi_rv_o3
      device_class: ozone
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('o3') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('o3') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV CO
      unique_id: waqi_rv_co
      device_class: carbon_monoxide
      unit_of_measurement: "ppm"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('co') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('co') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV PM10
      unique_id: waqi_rv_pm10
      device_class: pm10
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('pm10') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('pm10') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV NO2
      unique_id: waqi_rv_no2
      device_class: nitrogen_dioxide
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('no2') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('no2') or {}).get('v') | float(default=none) }}"

    - name: WAQI RV SO2
      unique_id: waqi_rv_so2
      device_class: sulphur_dioxide
      unit_of_measurement: "µg/m³"
      state_class: measurement
      availability: >-
        {% set v = ((state_attr(src,'iaqi') or {}).get('so2') or {}).get('v') %}
        {{ (v | float(none)) is not none }}
      state: "{{ ((state_attr(src,'iaqi') or {}).get('so2') or {}).get('v') | float(default=none) }}"

# Forecast tiles for RV
- trigger:
    - platform: state
      entity_id:
        - sensor.waqi_rv
        - sensor.date
  variables:
    src: "sensor.waqi_rv"
    today_iso: "{{ states('sensor.date') }}"
    tomorrow_iso: >-
      {% set d = states('sensor.date') | as_datetime(default=none) %}
      {{ (d + timedelta(days=1)).date().isoformat() if d else none }}
    aqi_days: >-
      {% from 'env/aqi.jinja' import aqi_from_pm, name, color, level as sev %}
      {% set f = (state_attr(src, 'forecast') or {}) %}
      {% set daily = f.get('daily') or {} %}
      {% set d25 = daily.get('pm25') or [] %}
      {% set d10 = daily.get('pm10') or [] %}
      {% set dates = ((d25 | map(attribute='day') | list) + (d10 | map(attribute='day') | list))
                      | select('string') | unique | list | sort %}
      {% set dates = dates | select('ge', today_iso) | list %}
      {% set out = namespace(list=[]) %}
      {% for day in dates %}
        {% set m25 = d25 | selectattr('day','equalto',day) | list %}
        {% set m10 = d10 | selectattr('day','equalto',day) | list %}
        {% set v25 = (m25[0].get('avg') | float(none)) if (m25|count)>0 else none %}
        {% set v10 = (m10[0].get('avg') | float(none)) if (m10|count)>0 else none %}
        {% set have = (v25 is number) or (v10 is number) %}
        {% set aqi = (aqi_from_pm(v25, v10) | int(0)) if have else none %}
        {% set label = name(aqi) if aqi is not none else 'unknown' %}
        {% set hex = color(aqi) if aqi is not none else '#9e9e9e' %}
        {% set level = sev(aqi) if aqi is not none else 0 %}
        {% set dts = day | as_datetime(default=none) %}
        {% set wd  = (dts.strftime('%A') if dts else day) %}
        {% set title = 'Today' if day == today_iso else ('Tomorrow' if day == tomorrow_iso else wd) %}
        {% set item = {
          'exists': have, 'date': day, 'title': title, 'state': label,
          'aqi': aqi, 'hex': hex, 'level': level
        } %}
        {% set out.list = out.list + [item] %}
      {% endfor %}
      {{ out.list }}
  sensor:
    - name: AQI Forecast RV Day 0
      unique_id: aqi_forecast_rv_day_0
      icon: mdi:calendar-today
      availability: "{{ (aqi_days|count) > 0 and ((aqi_days[0] or {}).get('exists')) }}"
      state: "{{ (aqi_days[0] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[0] or {}).get('date') }}"
        title: "{{ (aqi_days[0] or {}).get('title') }}"
        aqi: "{{ (aqi_days[0] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[0] or {}).get('hex') }}"
        level: "{{ (aqi_days[0] or {}).get('level') }}"

    - name: AQI Forecast RV Day 1
      unique_id: aqi_forecast_rv_day_1
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 1 and ((aqi_days[1] or {}).get('exists')) }}"
      state: "{{ (aqi_days[1] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[1] or {}).get('date') }}"
        title: "{{ (aqi_days[1] or {}).get('title') }}"
        aqi: "{{ (aqi_days[1] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[1] or {}).get('hex') }}"
        level: "{{ (aqi_days[1] or {}).get('level') }}"

    - name: AQI Forecast RV Day 2
      unique_id: aqi_forecast_rv_day_2
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 2 and ((aqi_days[2] or {}).get('exists')) }}"
      state: "{{ (aqi_days[2] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[2] or {}).get('date') }}"
        title: "{{ (aqi_days[2] or {}).get('title') }}"
        aqi: "{{ (aqi_days[2] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[2] or {}).get('hex') }}"
        level: "{{ (aqi_days[2] or {}).get('level') }}"

    - name: AQI Forecast RV Day 3
      unique_id: aqi_forecast_rv_day_3
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 3 and ((aqi_days[3] or {}).get('exists')) }}"
      state: "{{ (aqi_days[3] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[3] or {}).get('date') }}"
        title: "{{ (aqi_days[3] or {}).get('title') }}"
        aqi: "{{ (aqi_days[3] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[3] or {}).get('hex') }}"
        level: "{{ (aqi_days[3] or {}).get('level') }}"

    - name: AQI Forecast RV Day 4
      unique_id: aqi_forecast_rv_day_4
      icon: mdi:calendar
      availability: "{{ (aqi_days|count) > 4 and ((aqi_days[4] or {}).get('exists')) }}"
      state: "{{ (aqi_days[4] or {}).get('state') or 'unknown' }}"
      attributes:
        date: "{{ (aqi_days[4] or {}).get('date') }}"
        title: "{{ (aqi_days[4] or {}).get('title') }}"
        aqi: "{{ (aqi_days[4] or {}).get('aqi') }}"
        hex: "{{ (aqi_days[4] or {}).get('hex') }}"
        level: "{{ (aqi_days[4] or {}).get('level') }}"

# ===================== Helpers & rollups =====================
# Nearby categorization
- trigger:
    - platform: state
      entity_id: sensor.waqi_nearby_aqi
  sensor:
    - name: WAQI Nearby AQI Category
      unique_id: waqi_nearby_aqi_category
      icon: mdi:smog
      availability: "{{ has_value('sensor.waqi_nearby_aqi') }}"
      state: >-
        {% set aqi = states('sensor.waqi_nearby_aqi')|int(0) %}
        {% if   0   <= aqi <= 50  %} Good
        {% elif 51  <= aqi <= 100 %} Moderate
        {% elif 101 <= aqi <= 150 %} Unhealthy for Sensitive Groups
        {% elif 151 <= aqi <= 200 %} Unhealthy
        {% elif 201 <= aqi <= 300 %} Very Unhealthy
        {% elif 301 <= aqi        %} Hazardous
        {% else %} Unknown
        {% endif %}
      attributes:
        aqi: "{{ states('sensor.waqi_nearby_aqi')|int(0) }}"
    - name: WAQI Nearby AQI Severity
      unique_id: waqi_nearby_aqi_severity
      icon: mdi:numeric
      availability: "{{ has_value('sensor.waqi_nearby_aqi') }}"
      state: >-
        {% set aqi = states('sensor.waqi_nearby_aqi')|int(0) %}
        {% if   0   <= aqi <= 50  %} 0
        {% elif 51  <= aqi <= 100 %} 1
        {% elif 101 <= aqi <= 150 %} 2
        {% elif 151 <= aqi <= 200 %} 3
        {% elif 201 <= aqi <= 300 %} 4
        {% elif 301 <= aqi        %} 5
        {% else %} -1
        {% endif %}
  binary_sensor:
    - name: WAQI Nearby Air Quality Bad
      unique_id: waqi_nearby_air_quality_bad
      device_class: problem
      availability: "{{ has_value('sensor.waqi_nearby_aqi') }}"
      state: "{{ states('sensor.waqi_nearby_aqi')|int(0) >= 101 }}"

# Home categorization
- trigger:
    - platform: state
      entity_id: sensor.waqi_home_aqi
  sensor:
    - name: WAQI Home AQI Category
      unique_id: waqi_home_aqi_category
      icon: mdi:smog
      availability: "{{ has_value('sensor.waqi_home_aqi') }}"
      state: >-
        {% set aqi = states('sensor.waqi_home_aqi')|int(0) %}
        {% if   0   <= aqi <= 50  %} Good
        {% elif 51  <= aqi <= 100 %} Moderate
        {% elif 101 <= aqi <= 150 %} Unhealthy for Sensitive Groups
        {% elif 151 <= aqi <= 200 %} Unhealthy
        {% elif 201 <= aqi <= 300 %} Very Unhealthy
        {% elif 301 <= aqi        %} Hazardous
        {% else %} Unknown
        {% endif %}
      attributes:
        aqi: "{{ states('sensor.waqi_home_aqi')|int(0) }}"
    - name: WAQI Home AQI Severity
      unique_id: waqi_home_aqi_severity
      icon: mdi:numeric
      availability: "{{ has_value('sensor.waqi_home_aqi') }}"
      state: >-
        {% set aqi = states('sensor.waqi_home_aqi')|int(0) %}
        {% if   0   <= aqi <= 50  %} 0
        {% elif 51  <= aqi <= 100 %} 1
        {% elif 101 <= aqi <= 150 %} 2
        {% elif 151 <= aqi <= 200 %} 3
        {% elif 201 <= aqi <= 300 %} 4
        {% elif 301 <= aqi        %} 5
        {% else %} -1
        {% endif %}
  binary_sensor:
    - name: WAQI Home Air Quality Bad
      unique_id: waqi_home_air_quality_bad
      device_class: problem
      availability: "{{ has_value('sensor.waqi_home_aqi') }}"
      state: "{{ states('sensor.waqi_home_aqi')|int(0) >= 101 }}"

# RV categorization
- trigger:
    - platform: state
      entity_id: sensor.waqi_rv_aqi
  sensor:
    - name: WAQI RV AQI Category
      unique_id: waqi_rv_aqi_category
      icon: mdi:smog
      availability: "{{ has_value('sensor.waqi_rv_aqi') }}"
      state: >-
        {% set aqi = states('sensor.waqi_rv_aqi')|int(0) %}
        {% if   0   <= aqi <= 50  %} Good
        {% elif 51  <= aqi <= 100 %} Moderate
        {% elif 101 <= aqi <= 150 %} Unhealthy for Sensitive Groups
        {% elif 151 <= aqi <= 200 %} Unhealthy
        {% elif 201 <= aqi <= 300 %} Very Unhealthy
        {% elif 301 <= aqi        %} Hazardous
        {% else %} Unknown
        {% endif %}
      attributes:
        aqi: "{{ states('sensor.waqi_rv_aqi')|int(0) }}"
    - name: WAQI RV AQI Severity
      unique_id: waqi_rv_aqi_severity
      icon: mdi:numeric
      availability: "{{ has_value('sensor.waqi_rv_aqi') }}"
      state: >-
        {% set aqi = states('sensor.waqi_rv_aqi')|int(0) %}
        {% if   0   <= aqi <= 50  %} 0
        {% elif 51  <= aqi <= 100 %} 1
        {% elif 101 <= aqi <= 150 %} 2
        {% elif 151 <= aqi <= 200 %} 3
        {% elif 201 <= aqi <= 300 %} 4
        {% elif 301 <= aqi        %} 5
        {% else %} -1
        {% endif %}
  binary_sensor:
    - name: WAQI RV Air Quality Bad
      unique_id: waqi_rv_air_quality_bad
      device_class: problem
      availability: "{{ has_value('sensor.waqi_rv_aqi') }}"
      state: "{{ states('sensor.waqi_rv_aqi')|int(0) >= 101 }}"

# Rollups
- trigger:
    - platform: state
      entity_id:
        - sensor.waqi_nearby_aqi
        - sensor.waqi_home_aqi
        - sensor.waqi_rv_aqi
  sensor:
    - name: WAQI Worst AQI
      unique_id: waqi_worst_aqi
      icon: mdi:alert-octagon
      availability: >-
        {{ has_value('sensor.waqi_nearby_aqi')
           or has_value('sensor.waqi_home_aqi')
           or has_value('sensor.waqi_rv_aqi') }}
      state: >-
        {% set vals = [
          states('sensor.waqi_nearby_aqi')|int(0),
          states('sensor.waqi_home_aqi')|int(0),
          states('sensor.waqi_rv_aqi')|int(0)
        ] %}
        {{ vals | max }}
      attributes:
        source: >-
          {% set pairs = {
            'Nearby': states('sensor.waqi_nearby_aqi')|int(0),
            'Home':   states('sensor.waqi_home_aqi')|int(0),
            'RV':     states('sensor.waqi_rv_aqi')|int(0)
          } %}
          {{ (pairs | dictsort(true, by='value') | first)[0] }}
        category: >-
          {% set aqi = states('sensor.waqi_worst_aqi')|int(0) %}
          {% if   0   <= aqi <= 50  %} Good
          {% elif 51  <= aqi <= 100 %} Moderate
          {% elif 101 <= aqi <= 150 %} Unhealthy for Sensitive Groups
          {% elif 151 <= aqi <= 200 %} Unhealthy
          {% elif 201 <= aqi <= 300 %} Very Unhealthy
          {% elif 301 <= aqi        %} Hazardous
          {% else %} Unknown
          {% endif %}
  binary_sensor:
    - name: Air Quality Bad (Any Location)
      unique_id: waqi_any_air_quality_bad
      device_class: problem
      availability: >-
        {{ has_value('sensor.waqi_nearby_aqi')
           or has_value('sensor.waqi_home_aqi')
           or has_value('sensor.waqi_rv_aqi') }}
      state: >-
        {{ states('sensor.waqi_nearby_aqi')|int(0) >= 101
           or states('sensor.waqi_home_aqi')|int(0)   >= 101
           or states('sensor.waqi_rv_aqi')|int(0)     >= 101 }}
