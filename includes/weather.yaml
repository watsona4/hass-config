# ---------------------------
# OpenMeteo Weather - Nearby
# ---------------------------
- platform: template
  name: OpenMeteo Weather Nearby
  unique_id: f37a2941-d599-44e3-bfae-0183a106fbd8

  condition_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set c = state_attr('sensor.openmeteo_nearby','current') or {} -%}
    {%- set code = c.get('weather_code') -%}
    {%- set is_day = (c.get('is_day')|int(1))|bool -%}
    {{ wx_condition(code, is_day) if code is not none else 'unknown' }}

  apparent_temperature_template: "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('apparent_temperature') }}"
  cloud_coverage_template:      "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('cloud_cover') }}"
  dew_point_template:           "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('dew_point_2m') }}"
  humidity_template:            "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('relative_humidity_2m') }}"
  pressure_template:            "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('surface_pressure') }}"
  temperature_template:         "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('temperature_2m') }}"
  visibility_template:          "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('visibility') }}"
  wind_bearing_template:        "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('wind_direction_10m') }}"
  wind_gust_speed_template:     "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('wind_gusts_10m') }}"
  wind_speed_template:          "{{ (state_attr('sensor.openmeteo_nearby','current') or {}).get('wind_speed_10m') }}"

  precipitation_unit: "mm"
  pressure_unit: "hPa"
  temperature_unit: "°C"
  visibility_unit: "m"
  wind_speed_unit: "km/h"

  forecast_daily_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set d = state_attr('sensor.openmeteo_nearby','daily') or {} -%}
    {%- set tt = d.get('time', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- set w = d.get('weathercode', []) -%}
    {%- set ps = d.get('precipitation_sum', []) -%}
    {%- set tmax = d.get('temperature_2m_max', []) -%}
    {%- set tmin = d.get('temperature_2m_min', []) -%}
    {%- set wdir = d.get('winddirection_10m_dominant', []) -%}
    {%- set wspd = d.get('windspeed_10m_max', []) -%}
    {%- for i in range(tt|length) -%}
      {%- set dt = (tt[i] | as_datetime | as_local) -%}
      {%- set entry = {
          'datetime': dt|string,
          'condition': wx_condition(w[i]) if i < (w|length) else 'unknown',
          'native_precipitation': ps[i] if i < (ps|length) else none,
          'native_temperature':   tmax[i] if i < (tmax|length) else none,
          'native_templow':       tmin[i] if i < (tmin|length) else none,
          'wind_bearing':         wdir[i] if i < (wdir|length) else none,
          'wind_speed':           wspd[i] if i < (wspd|length) else none
        } -%}
      {%- set out.items = out.items + [entry] -%}
    {%- endfor -%}
    {{ out.items | tojson }}

  forecast_hourly_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set h = state_attr('sensor.openmeteo_nearby','hourly') or {} -%}
    {%- set cur = state_attr('sensor.openmeteo_nearby','current') or {} -%}
    {%- set cur_dt = (cur.get('time') | as_datetime(default=none)) -%}
    {%- set tt = h.get('time', []) -%}
    {%- set wc  = h.get('weathercode', []) -%}
    {%- set idy = h.get('is_day', []) -%}
    {%- set pr  = h.get('precipitation', []) -%}
    {%- set tmp = h.get('temperature_2m', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- for i in range(tt|length) -%}
      {%- set dt = (tt[i] | as_datetime | as_local) -%}
      {%- if cur_dt is none or dt >= (cur_dt | as_local) -%}
        {%- set entry = {
              'datetime': dt|string,
              'condition': wx_condition(wc[i], (idy[i]|int(1))|bool) if i < (wc|length) and i < (idy|length) else 'unknown',
              'native_precipitation': pr[i]  if i < (pr|length)  else none,
              'native_temperature':   tmp[i] if i < (tmp|length) else none
            } -%}
        {%- set out.items = out.items + [entry] -%}
      {%- endif -%}
    {%- endfor -%}
    {{ out.items | tojson }}

# -------------------------
# OpenMeteo Weather - Home
# -------------------------
- platform: template
  name: OpenMeteo Weather Home
  unique_id: de8899ac-f7ef-4ed0-89b0-91c407264f2d

  condition_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set c = state_attr('sensor.openmeteo_home','current') or {} -%}
    {%- set code = c.get('weather_code') -%}
    {%- set is_day = (c.get('is_day')|int(1))|bool -%}
    {{ wx_condition(code, is_day) if code is not none else 'unknown' }}

  apparent_temperature_template: "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('apparent_temperature') }}"
  cloud_coverage_template:      "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('cloud_cover') }}"
  dew_point_template:           "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('dew_point_2m') }}"
  humidity_template:            "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('relative_humidity_2m') }}"
  pressure_template:            "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('surface_pressure') }}"
  temperature_template:         "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('temperature_2m') }}"
  visibility_template:          "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('visibility') }}"
  wind_bearing_template:        "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('wind_direction_10m') }}"
  wind_gust_speed_template:     "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('wind_gusts_10m') }}"
  wind_speed_template:          "{{ (state_attr('sensor.openmeteo_home','current') or {}).get('wind_speed_10m') }}"

  precipitation_unit: "mm"
  pressure_unit: "hPa"
  temperature_unit: "°C"
  visibility_unit: "m"
  wind_speed_unit: "km/h"

  forecast_daily_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set d = state_attr('sensor.openmeteo_home','daily') or {} -%}
    {%- set tt = d.get('time', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- set w = d.get('weathercode', []) -%}
    {%- set ps = d.get('precipitation_sum', []) -%}
    {%- set tmax = d.get('temperature_2m_max', []) -%}
    {%- set tmin = d.get('temperature_2m_min', []) -%}
    {%- set wdir = d.get('winddirection_10m_dominant', []) -%}
    {%- set wspd = d.get('windspeed_10m_max', []) -%}
    {%- for i in range(tt|length) -%}
      {%- set dt = (tt[i] | as_datetime | as_local) -%}
      {%- set entry = {
          'datetime': dt|string,
          'condition': wx_condition(w[i]) if i < (w|length) else 'unknown',
          'native_precipitation': ps[i] if i < (ps|length) else none,
          'native_temperature':   tmax[i] if i < (tmax|length) else none,
          'native_templow':       tmin[i] if i < (tmin|length) else none,
          'wind_bearing':         wdir[i] if i < (wdir|length) else none,
          'wind_speed':           wspd[i] if i < (wspd|length) else none
        } -%}
      {%- set out.items = out.items + [entry] -%}
    {%- endfor -%}
    {{ out.items | tojson }}

  forecast_hourly_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set h = state_attr('sensor.openmeteo_home','hourly') or {} -%}
    {%- set cur = state_attr('sensor.openmeteo_home','current') or {} -%}
    {%- set cur_dt = (cur.get('time') | as_datetime(default=none)) -%}
    {%- set tt = h.get('time', []) -%}
    {%- set wc  = h.get('weathercode', []) -%}
    {%- set idy = h.get('is_day', []) -%}
    {%- set pr  = h.get('precipitation', []) -%}
    {%- set tmp = h.get('temperature_2m', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- for i in range(tt|length) -%}
      {%- set dt = (tt[i] | as_datetime | as_local) -%}
      {%- if cur_dt is none or dt >= (cur_dt | as_local) -%}
        {%- set entry = {
              'datetime': dt|string,
              'condition': wx_condition(wc[i], (idy[i]|int(1))|bool) if i < (wc|length) and i < (idy|length) else 'unknown',
              'native_precipitation': pr[i]  if i < (pr|length)  else none,
              'native_temperature':   tmp[i] if i < (tmp|length) else none
            } -%}
        {%- set out.items = out.items + [entry] -%}
      {%- endif -%}
    {%- endfor -%}
    {{ out.items | tojson }}

# -----------------------
# OpenMeteo Weather - RV
# -----------------------
- platform: template
  name: OpenMeteo Weather RV
  unique_id: e679162d-ccbf-4272-8c10-fbba48cc23a3

  condition_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set c = state_attr('sensor.openmeteo_rv','current') or {} -%}
    {%- set code = c.get('weather_code') -%}
    {%- set is_day = (c.get('is_day')|int(1))|bool -%}
    {{ wx_condition(code, is_day) if code is not none else 'unknown' }}

  apparent_temperature_template: "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('apparent_temperature') }}"
  cloud_coverage_template:      "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('cloud_cover') }}"
  dew_point_template:           "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('dew_point_2m') }}"
  humidity_template:            "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('relative_humidity_2m') }}"
  pressure_template:            "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('surface_pressure') }}"
  temperature_template:         "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('temperature_2m') }}"
  visibility_template:          "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('visibility') }}"
  wind_bearing_template:        "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_direction_10m') }}"
  wind_gust_speed_template:     "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_gusts_10m') }}"
  wind_speed_template:          "{{ (state_attr('sensor.openmeteo_rv','current') or {}).get('wind_speed_10m') }}"

  precipitation_unit: "mm"
  pressure_unit: "hPa"
  temperature_unit: "°C"
  visibility_unit: "m"
  wind_speed_unit: "km/h"

  forecast_daily_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set d = state_attr('sensor.openmeteo_rv','daily') or {} -%}
    {%- set tt = d.get('time', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- set w = d.get('weathercode', []) -%}
    {%- set ps = d.get('precipitation_sum', []) -%}
    {%- set tmax = d.get('temperature_2m_max', []) -%}
    {%- set tmin = d.get('temperature_2m_min', []) -%}
    {%- set wdir = d.get('winddirection_10m_dominant', []) -%}
    {%- set wspd = d.get('windspeed_10m_max', []) -%}
    {%- for i in range(tt|length) -%}
      {%- set dt = (tt[i] | as_datetime | as_local) -%}
      {%- set entry = {
          'datetime': dt|string,
          'condition': wx_condition(w[i]) if i < (w|length) else 'unknown',
          'native_precipitation': ps[i] if i < (ps|length) else none,
          'native_temperature':   tmax[i] if i < (tmax|length) else none,
          'native_templow':       tmin[i] if i < (tmin|length) else none,
          'wind_bearing':         wdir[i] if i < (wdir|length) else none,
          'wind_speed':           wspd[i] if i < (wspd|length) else none
        } -%}
      {%- set out.items = out.items + [entry] -%}
    {%- endfor -%}
    {{ out.items | tojson }}

  forecast_hourly_template: >
    {% from 'macros.jinja' import wx_condition %}
    {%- set h = state_attr('sensor.openmeteo_rv','hourly') or {} -%}
    {%- set cur = state_attr('sensor.openmeteo_rv','current') or {} -%}
    {%- set cur_dt = (cur.get('time') | as_datetime(default=none)) -%}
    {%- set tt = h.get('time', []) -%}
    {%- set wc  = h.get('weathercode', []) -%}
    {%- set idy = h.get('is_day', []) -%}
    {%- set pr  = h.get('precipitation', []) -%}
    {%- set tmp = h.get('temperature_2m', []) -%}
    {%- set out = namespace(items=[]) -%}
    {%- for i in range(tt|length) -%}
      {%- set dt = (tt[i] | as_datetime | as_local) -%}
      {%- if cur_dt is none or dt >= (cur_dt | as_local) -%}
        {%- set entry = {
              'datetime': dt|string,
              'condition': wx_condition(wc[i], (idy[i]|int(1))|bool) if i < (wc|length) and i < (idy|length) else 'unknown',
              'native_precipitation': pr[i]  if i < (pr|length)  else none,
              'native_temperature':   tmp[i] if i < (tmp|length) else none
            } -%}
        {%- set out.items = out.items + [entry] -%}
      {%- endif -%}
    {%- endfor -%}
    {{ out.items | tojson }}
